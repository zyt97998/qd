! function(t) {
	! function(t, n, i, r, e, s, a, u, o, c, f, l, h, v, m, p, d, y, g, w, x, C, N, b, k, P, j, T, A, S, D, H, R, F, z, O, q, $, M, B, E, U, L, I, Q, W, J, V, Y, K, X, _, Z, G, tt, nt, it, rt, et, st, at, ut, ot, ct, ft, lt, ht, vt, mt, pt, dt, yt, gt, wt, xt, Ct, Nt, bt, kt, Pt, jt, Tt, At, St, Dt, Ht, Rt, Ft, zt, Ot, qt, $t, Mt, Bt, Et, Ut, Lt, It, Qt, Wt, Jt, Vt, Yt, Kt, Xt, _t, Zt, Gt, tn, nn, rn, en, sn, an, un, on, cn, fn, ln, hn, vn, mn, pn, dn, yn, gn, wn, xn, Cn, Nn, bn, kn, Pn, jn, Tn, An, Sn, Dn, Hn, Rn, Fn, zn, On, qn, $n, Mn, Bn, En, Un, Ln, In, Qn, Wn, Jn, Vn, Yn, Kn, Xn, _n, Zn, Gn, ti, ni, ii, ri, ei, si, ai, ui, oi, ci, fi, li, hi, vi, mi, pi, di, yi, gi, wi, xi, Ci, Ni, bi, ki, Pi, ji, Ti, Ai, Si, Di, Hi, Ri, Fi, zi, Oi, qi, $i, Mi, Bi, Ei, Ui, Li, Ii, Qi, Wi, Ji, Vi, Yi, Ki, Xi, _i, Zi, Gi, tr, nr, ir, rr, er, sr, ar, ur, or, cr, fr, lr, hr, vr, mr, pr, dr, yr, gr, wr, xr, Cr, Nr, br, kr, Pr, jr, Tr, Ar, Sr, Dr, Hr, Rr, Fr, zr, Or, qr, $r, Mr, Br, Er, Ur, Lr, Ir, Qr, Wr, Jr, Vr, Yr, Kr, Xr, _r, Zr, Gr, te, ne, ie, re, ee, se, ae, ue, oe, ce, fe, le, he, ve, me, pe, de, ye, ge, we, xe, Ce, Ne, be, ke, Pe, je, Te, Ae, Se, De, He, Re, Fe, ze, Oe, qe, $e, Me, Be, Ee, Ue, Le, Ie, Qe, We, Je, Ve, Ye, Ke, Xe, _e, Ze, Ge, ts, ns, is, rs, es, ss, as, us, os, cs, fs, ls, hs, vs, ms, ps, ds, ys, gs, ws, xs, Cs, Ns, bs, ks, Ps, js, Ts, As, Ss, Ds, Hs, Rs, Fs, zs, Os, qs, $s, Ms, Bs, Es, Us, Ls, Is, Qs, Ws, Js, Vs, Ys, Ks, Xs, _s, Zs, Gs, ta, na, ia, ra, ea, sa, aa, ua, oa, ca, fa, la, ha, va, ma, pa, da, ya, ga, wa, xa, Ca, Na, ba, ka, Pa, ja, Ta, Aa, Sa, Da, Ha, Ra, Fa, za, Oa, qa, $a, Ma, Ba, Ea, Ua, La, Ia, Qa, Wa, Ja, Va, Ya, Ka, Xa, _a, Za, Ga, tu, nu, iu, ru, eu, su, au, uu, ou, cu, fu, lu, hu, vu, mu, pu, du, yu, gu, wu, xu, Cu, Nu, bu, ku, Pu, ju, Tu, Au, Su, Du, Hu, Ru, Fu, zu, Ou, qu, $u, Mu, Bu, Eu, Uu, Lu, Iu, Qu, Wu, Ju, Vu, Yu, Ku, Xu, _u, Zu, Gu, to, no, io, ro, eo, so, ao, uo, oo, co, fo, lo, ho, vo, mo, po, yo, go, wo, xo, Co, No, bo, ko, Po, jo, To, Ao, So, Do, Ho, Ro, Fo, zo, Oo, qo, $o, Mo, Bo, Eo, Uo, Lo, Io, Qo, Wo, Jo, Vo, Yo, Ko, Xo, _o, Zo, Go, tc, nc, ic, rc, ec, sc, ac, uc, oc, cc, fc, lc, hc, vc, mc, pc, dc, yc, gc, wc, xc, Cc, Nc, bc, kc, Pc, jc, Tc, Ac, Sc, Dc, Hc, Rc, Fc, zc, Oc, qc, $c, Mc, Bc, Ec, Uc, Lc, Ic, Qc, Wc, Jc, Vc, Yc, Kc, Xc, _c, Zc, Gc, tf, nf, rf, ef, sf, af, uf, of , cf, ff, lf, hf, vf, mf, pf, df, yf, gf, wf, xf, Cf, Nf, bf, kf, Pf, jf, Tf, Af, Sf, Df, Hf, Rf, Ff, zf, Of, qf, $f, Mf, Bf, Ef, Uf, Lf, If, Qf, Wf, Jf, Vf, Yf, Kf, Xf, _f, Zf, Gf, tl, nl, il, rl, el, sl, al, ul, ol, cl, fl, ll, hl, vl, ml, pl, dl, yl, gl, wl, xl, Cl, Nl, bl, kl, Pl, jl, Tl, Al, Sl, Dl, Hl, Rl, Fl, zl, Ol, ql, $l, Ml, Bl, El, Ul, Ll, Il, Ql, Wl, Jl, Vl, Yl, Kl, Xl, _l, Zl, Gl, th, nh, ih, rh, eh, sh, ah, uh, oh, ch, fh, lh, hh, vh, mh, ph, dh, yh, gh, wh, xh, Ch, Nh, bh, kh, Ph, jh, Th, Ah, Sh, Dh, Hh, Rh, Fh, zh, Oh, qh, $h, Mh, Bh, Eh, Uh, Lh, Ih, Qh, Wh, Jh, Vh, Yh, Kh, Xh, _h, Zh, Gh, tv, nv, iv, rv, ev, sv, av, uv, ov, cv, fv, lv, hv, vv, mv, pv, dv, yv, gv, wv, xv, Cv, Nv, bv, kv, Pv, jv, Tv, Av, Sv, Dv, Hv, Rv, Fv, zv, Ov, qv, $v, Mv, Bv, Ev, Uv, Lv, Iv, Qv, Wv, Jv, Vv, Yv, Kv, Xv, _v, Zv, Gv, tm, nm, im, rm, em, sm, am, um, om, cm, fm, lm, hm, vm, mm, pm, dm, ym, gm, wm, xm, Cm, Nm, bm, km, Pm, jm, Tm, Am, Sm, Dm, Hm, Rm, Fm, zm, Om, qm, $m, Mm, Bm, Em, Um, Lm, Im, Qm, Wm, Jm, Vm, Ym, Km, Xm, _m, Zm, Gm, tp, np, ip, rp, ep, sp, ap, up, op, cp, fp, lp, hp, vp, mp, pp, dp, yp, gp, wp, xp, Cp, Np, bp, kp, Pp, jp, Tp, Ap, Sp, Dp, Hp, Rp, Fp, zp, Op, qp, $p, Mp, Bp, Ep, Up, Lp, Ip, Qp, Wp, Jp, Vp, Yp, Kp, Xp, _p, Zp, Gp, td, nd, id, rd, ed, sd, ad, ud, od, cd, fd, ld, hd, vd, md, pd, dd, yd, gd, wd, xd, Cd, Nd, bd, kd, Pd, jd, Td, Ad, Sd, Dd, Hd, Rd, Fd, zd, Od, qd, $d, Md, Bd, Ed, Ud, Ld, Id, Qd, Wd, Jd, Vd, Yd, Kd, Xd, _d, Zd, Gd, ty, ny, iy, ry, ey, sy, ay, uy, oy, cy, fy, ly, hy, vy, my, py, dy, yy, gy, wy, xy, Cy, Ny, by, ky, Py, jy, Ty, Ay, Sy, Dy, Hy, Ry, Fy, zy, Oy, qy, $y, My, By, Ey, Uy, Ly, Iy, Qy, Wy, Jy, Vy, Yy, Ky, Xy, _y, Zy, Gy, tg, ng, ig, rg, eg, sg, ag, ug, og, cg, fg, lg, hg, vg, mg, pg, dg, yg, gg, wg, xg, Cg, Ng, bg, kg, Pg, jg, Tg, Ag, Sg, Dg, Hg, Rg, Fg, zg, Og, qg, $g, Mg, Bg, Eg, Ug, Lg, Ig, Qg, Wg, Jg, Vg, Yg, Kg, Xg, _g, Zg, Gg, tw, nw, iw, rw, ew, sw, aw, uw, ow, cw, fw, lw, hw, vw, mw, pw, dw, yw, gw, ww, xw, Cw, Nw, bw, kw, Pw, jw, Tw, Aw, Sw, Dw, Hw, Rw, Fw, zw, Ow, qw, $w, Mw, Bw, Ew, Uw, Lw, Iw, Qw, Ww, Jw, Vw, Yw, Kw, Xw, _w, Zw, Gw, tx, nx, ix, rx, ex, sx, ax, ux, ox, cx, fx, lx, hx, vx, mx, px, dx, yx, gx, wx, xx, Cx, Nx, bx, kx, Px, jx, Tx, Ax, Sx, Dx, Hx, Rx, Fx, zx, Ox, qx, $x, Mx, Bx, Ex, Ux, Lx, Ix, Qx, Wx, Jx, Vx, Yx, Kx, Xx, _x, Zx, Gx, tC, nC, iC, rC, eC, sC, aC, uC, oC, cC, fC, lC, hC, vC, mC, pC, dC, yC, gC, wC, xC, CC, NC, bC, kC, PC, jC, TC, AC, SC, DC, HC, RC, FC, zC, OC, qC, $C, MC, BC, EC, UC, LC, IC, QC, WC, JC, VC, YC, KC, XC, _C, ZC, GC, tN, nN, iN, rN, eN, sN, aN, uN, oN, cN, fN, lN, hN, vN, mN, pN, dN, yN, gN, wN, xN, CN, NN, bN, kN, PN, jN, TN, AN, SN, DN, HN, RN, FN, zN, ON, qN, $N, MN, BN, EN, UN, LN, IN, QN, WN, JN, VN, YN, KN, XN, _N, ZN, GN, tb, nb, ib, rb, eb, sb, ab, ub, ob, cb, fb, lb, hb, vb, mb, pb, db, yb, gb, wb, xb, Cb, Nb, bb, kb, Pb, jb, Tb, Ab, Sb, Db, Hb, Rb, Fb, zb, Ob, qb, $b, Mb, Bb, Eb, Ub, Lb, Ib, Qb, Wb, Jb, Vb, Yb, Kb, Xb, _b, Zb, Gb, tk, nk, ik, rk, ek, sk, ak, uk, ok, ck, fk, lk, hk, vk, mk, pk, dk, yk, gk, wk, xk, Ck, Nk, bk, kk, Pk, jk, Tk, Ak, Sk, Dk, Hk, Rk, Fk, zk, Ok, qk, $k, Mk, Bk, Ek, Uk, Lk, Ik, Qk, Wk, Jk, Vk, Yk, Kk, Xk, _k, Zk, Gk, tP, nP, iP, rP, eP, sP, aP, uP, oP, cP, fP, lP, hP, vP, mP, pP, dP, yP, gP, wP, xP, CP, NP, bP, kP, PP, jP, TP, AP, SP, DP, HP, RP, FP, zP, OP, qP, $P, MP, BP, EP, UP, LP, IP, QP, WP, JP, VP, YP, KP, XP, _P, ZP, GP, tj, nj, ij, rj, ej, sj, aj, uj, oj, cj, fj, lj, hj, vj, mj, pj, dj, yj, gj, wj, xj, Cj, Nj, bj, kj, Pj, jj, Tj, Aj, Sj, Dj, Hj, Rj, Fj, zj, Oj, qj, $j, Mj, Bj, Ej, Uj, Lj, Ij, Qj, Wj, Jj, Vj, Yj, Kj, Xj, _j, Zj, Gj, tT, nT, iT, rT, eT, sT, aT, uT, oT, cT, fT, lT, hT, vT, mT, pT, dT, yT, gT, wT, xT, CT, NT, bT, kT, PT, jT, TT, AT, ST, DT, HT, RT, FT, zT, OT, qT, $T, MT, BT, ET, UT, LT, IT, QT, WT, JT, VT, YT, KT, XT, _T, ZT, GT, tA, nA, iA, rA, eA, sA, aA, uA, oA, cA, fA, lA, hA, vA, mA, pA, dA, yA, gA, wA, xA, CA, NA, bA, kA, PA, jA, TA, AA, SA, DA, HA, RA, FA, zA, OA, qA, $A, MA, BA, EA, UA, LA, IA, QA, WA, JA, VA, YA, KA, XA, _A, ZA, GA, tS, nS, iS, rS, eS) {
		t[i]([r], {
			"+9YK": function(n, i, mt) { "use strict";
				t[s][e](i, a, { value: !u }); var pt = mt(o),
					dt = mt[c](pt);
				t[l][f] = mt(h), t[f] = t[f][v] || t[f]; var yt = { name: m, props: { options: { type: t[s], required: !u }, start: { type: t[p], default: function() { return u } }, playsinline: { type: t[d], default: function() { return !r } }, customEventName: { type: t[y], default: function() { return g } } }, mounted: function() { this[w] || this[x]() }, beforeDestroy: function() { this[w] && this[C]() }, methods: { initialize: function() { var n = this;
								this[w] = N; var i = dt()({ autoplay: !r, controls: !u, preload: b, fluid: !r, muted: !r, width: k, height: P, language: j, controlBar: { remainingTimeDisplay: !r, playToggle: {}, progressControl: {}, fullscreenToggle: {}, volumeMenuButton: { inline: !r, vertical: !u } }, techOrder: [T], plugins: {} }, this[A]),
									e = this[S];
								e && (this[R][H][u][D](S, e), this[R][H][u][D](F, e)); var s = function(t, i) { if(t && n[z](t, n[w]), i) { var r = {};
										r[t] = i, n[z](n[O], r) } };
								i[q] && delete i[q][$], this[w] = t[f](this[R][H][u], i, function() { var t = this;
									n[z](M, n[w]); for(var i = [B, E, U, L, I, Q, W, J, V], r = u; r < i[Y]; r++) ! function(n) { t[K](n, function() { s(n, !u) }) }(i[r]);
									this[K](X, function() { s(X, this[_]()) }) }) }, dispose: function() { if(this[w] && t[f]) { if(Z !== this[w][G] && this[w][I] && this[w][I](), t[f](this[R][H][u])[C](), !this[R][H][Y]) { var n = t[nt][tt](it);
										n[rt] = et, this[R][st](n) } this[w] = N } } }, watch: { options: { deep: !u, handler: function(t, n) { this[C](), t && t[at] && t[at][Y] && this[x]() } } } },
					gt = function() { var t = this;
						t[ut]; return t[ct][ot], t[ft](u) },
					wt = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: m }, [i(it, { staticClass: et })]) }],
					xt = { render: gt, staticRenderFns: wt },
					Ct = xt,
					Nt = mt(ht),
					bt = Nt(yt, Ct, !r, N, N, N);
				i[v] = bt[vt] },
			"+RXZ": function(t, n, i) { t[vt] = i[mt] + pt },
			"/9aO": function(t, n) { t[vt] = dt },
			"/PCc": function(t, n, i) { t[vt] = i[mt] + yt },
			0: function(t, n) {},
			"01S3": function(t, n, i) { t[vt] = i[mt] + gt },
			"0KfL": function(t, n) {},
			"0nFy": function(t, n, i) { t[vt] = i[mt] + wt },
			"1EJQ": function(t, n, i) { t[vt] = i[mt] + xt },
			"2kiG": function(t, n) {},
			"3qz4": function(t, n, i) { t[vt] = i[mt] + Ct },
			"5HYj": function(t, n) {},
			"5LIk": function(t, n) {},
			"6N6H": function(t, n, i) { t[vt] = i[mt] + Nt },
			"6rsV": function(t, n, i) { t[vt] = i[mt] + bt },
			"6ywH": function(t, n, i) { t[vt] = i[mt] + kt },
			"7hrg": function(t, n) { t[vt] = Pt },
			"82pq": function(t, n, i) { t[vt] = i[mt] + jt },
			"8DB1": function(t, n, i) { t[vt] = i[mt] + Tt },
			"8Prv": function(t, n, i) { t[vt] = i[mt] + At },
			"8ZAW": function(t, n, i) { t[vt] = i[mt] + St },
			"991W": function(t, n) {},
			"9Nx4": function(t, n, i) { t[vt] = i[mt] + Dt },
			"9u16": function(t, n, i) { t[vt] = i[mt] + Ht },
			AOrd: function(t, n, i) { t[vt] = i[mt] + Rt },
			AQHT: function(t, n, i) { t[vt] = i[mt] + Ft },
			AkZM: function(t, n, i) { t[vt] = i[mt] + zt },
			BBUX: function(t, n, i) { t[vt] = i[mt] + Ot },
			BeNw: function(t, n, i) { t[vt] = i[mt] + qt },
			CR9T: function(t, n, i) { t[vt] = i[mt] + $t },
			ClYz: function(t, n, i) { t[vt] = i[mt] + Mt },
			CmTu: function(t, n) {},
			D16N: function(t, n, i) { t[vt] = i[mt] + Bt },
			D95Y: function(t, n, i) { t[vt] = i[mt] + Et },
			Db1B: function(t, n, i) { t[vt] = i[mt] + Ut },
			Dehn: function(t, n) {},
			DfQT: function(t, n) {},
			EFj7: function(t, n, i) { t[vt] = i[mt] + Lt },
			EHwC: function(t, n, i) { t[vt] = i[mt] + It },
			ERHy: function(t, n, i) { t[vt] = i[mt] + Qt },
			"EzJ+": function(t, n, i) { t[vt] = i[mt] + Wt },
			F7NO: function(t, n) { t[vt] = Jt },
			HX7S: function(t, n, i) { t[vt] = i[mt] + Vt },
			HXrv: function(t, n, i) { t[vt] = i[mt] + Yt },
			Hzca: function(t, n, i) { t[vt] = i[mt] + Kt },
			"J3+K": function(t, n, i) { t[vt] = i[mt] + Xt },
			J4Jd: function(t, n, i) { t[vt] = i[mt] + _t },
			"Jx+0": function(t, n) {},
			K2Bz: function(t, n, i) { t[vt] = i[mt] + Zt },
			KIC1: function(t, n, i) { t[vt] = i[mt] + Gt },
			KIzM: function(t, n, i) { t[vt] = i[mt] + tn },
			KVRa: function(t, n, i) { t[vt] = i[mt] + nn },
			KYMa: function(t, n, i) { t[vt] = i[mt] + rn },
			LIpR: function(t, n, i) { t[vt] = i[mt] + en },
			LSpc: function(t, n, i) { t[vt] = i[mt] + sn },
			LrUf: function(t, n, i) { t[vt] = i[mt] + an },
			"M/zQ": function(t, n, i) { t[vt] = i[mt] + un },
			M3Ej: function(t, n, i) { t[vt] = i[mt] + on },
			NHnr: function(n, i, o) {
				"use strict";

				function f(n) { t[l][cn] = function(t) { return t }; var i = t[nt][tt](fn);
					i[ln] = n + hn + (new t[mn])[vn](), t[nt][pn][st](i), t[nt][pn][dn](i) }

				function h(t, n, i) { var r = function r() { i(), t[yn](n, r) };
					t[gn](n, r) }

				function v(t) { o(wn) }

				function p(n) { var i = n[xn] || !r,
						e = (new t[mn])[vn](),
						s = Cn + t[Pn][kn][bn](jn)[u][Nn](/\&/g, Tn)[Nn](/\?/g, An);
					rt(n[Sn] + s + Dn + e, N, function(n) { t[Rn][Hn]({ debug: i, appId: n[Fn], timestamp: n[zn], nonceStr: n[On], signature: n[qn], jsApiList: [$n, Mn, Bn, En, Un] }) }), t[Rn][M](function() {
						function i() { r = t[Pn][kn] } var r = Ln; if(t[Rn][$n]({ jsApiList: [$n, Mn, Bn, En, Un] }), In in t[l] && (void 0 === t[nt][Qn] || Wn == t[nt][Qn])) { t[l][In] = i; var e = { title: n[Jn], desc: n[Vn], link: r, imgUrl: n[Yn] };
							t[Rn][Bn](e), t[Rn][Mn](e), t[Rn][Un](e), t[Rn][En](e), t[Rn][V](function(n) { t[xn] && t[Kn](Xn + G()(n)) }) } else t[_n](function() { t[Zn]() && i() }, Gn) }) }

				function d(t) { o(ti) }

				function y(t) { o(ni) }

				function g(t) { o(ii) }

				function x(t) { o(ri) }

				function C(t) { o(ei) }

				function P(t) { o(si) }

				function T(t) { o(ai) }

				function A(t) { o(ui) }

				function S(t) { o(oi) }

				function H(t) { o(ci) } t[s][e](i, a, { value: !u });
				var R, F = {},
					z = o(fi),
					O = o(li),
					q = o[c](O),
					$ = o(hi),
					B = { versions: function() { var n = t[mi][vi]; return t[mi][pi], { webKit: n[di](yi) > -r, ios: !!n[gi](/\(i[^;]+;( U;)? CPU.+Mac OS X/), android: n[di](wi) > -r || n[di](xi) > -r, weixin: n[di](Ci) > -r, txnews: n[di](Ni) > -r, sinawb: n[di](bi) > -r, mqq: n[di](ki) > -r } }(), playability: function() { var n = t[l][mi][vi],
								i = n[gi](/TBS\/([\d.]+)/),
								e = n[gi](/MQQBrowser\/([\d.]+)/),
								s = { isTBS: !r, tbsVersion: u, QQBrowserVersion: u, isRightEvent: !r, useH5Play: !r, isQQBrowser: !r }; return i ? (s[Pi] = !u, s[ji] = i[r], i[r] >= Ti && (s[Ai] = !u), i[r] >= Si && (s[Di] = !u)) : e && (s[Hi] = !u, s[Pi] = !u, s[Ri] = e[r], e[r] >= Fi && (s[Ai] = !u), e[r] >= Fi && (s[Di] = !u)), s }(), language: (t[mi][Oi] || t[mi][qi])[zi]() },
					E = { name: $i, props: [Mi, ln], data: function() { return { Media: N } }, computed: q()({}, t[s]($[Bi])({ isUserPause: Ei, isMusicPlay: Ui, isMusicShow: Li })), methods: q()({}, t[s]($[Ii])({ userActionPause: Qi, musicActionPlay: Wi }), { music: function() { this[Vi][Ji] ? this[Qi](!r) : this[Qi](!u), this[Wi](!this[Yi]) } }), mounted: function() { var n = this;
							n[Vi] = t[nt][Ki](Xi), h(t[nt], _i, function() { n[Vi][L](), n[Wi](!u) }), this[Zi](function() { t[nt][gn](Gi, function() { t[nt][Ki](Xi)[L]() }, !r) }) }, watch: { isMusicPlay: function() { this[Yi] ? this[Vi][L]() : this[Vi][I]() } }, beforeDestroy: function() {} },
					U = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: tr, class: { hide: !t[nr] } }, [i(lt, { style: t[Mi], attrs: { id: $i }, on: { click: t[$i] } }, [i(lt, { class: { on: t[Yi] }, style: t[Mi], attrs: { id: ir } }), t[rr](er), i(sr, { attrs: { id: Xi, loop: ar, preload: b, autoplay: Ln, src: t[ln] } })])]) },
					Q = [],
					W = { render: U, staticRenderFns: Q },
					J = W,
					Y = o(ht),
					K = v,
					X = Y(E, J, !r, K, ur, N),
					_ = X[vt],
					Z = o(or),
					G = o[c](Z),
					rt = function(n, i, e) { var s = cr + (new t[mn])[fr](),
							a = -r == n[di](lr) ? lr : hr; for(var u in i) a += u + vr + i[u] + hr;
						a += mr + s; var o = t[nt][tt](fn);
						o[ln] = n + a, t[l][s] = function(n) { e(n), t[nt][pr][dn](o) }, t[nt][pr][st](o) },
					et = { shareURL: dr, app: { title: yr, desc: gr, imgUrl: wr } },
					at = et,
					pt = (o(xr), o(Cr), o(Nr), o(br), o(kr), { name: Pr, data: function() { return {} }, mounted: function() { p({ shareURL: at[Sn], title: at[Pr][Jn], desc: at[Pr][Vn], imgUrl: at[Pr][Yn] }), f(jr) }, components: {} }),
					dt = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { attrs: { id: Pr } }, [i(Tr, { attrs: { pos: { top: Ar, left: Sr }, src: Dr } }), t[rr](er), i(Hr)], r) },
					yt = [],
					gt = { render: dt, staticRenderFns: yt },
					wt = gt,
					xt = o(ht),
					Ct = d,
					Nt = xt(pt, wt, !r, Ct, N, N),
					bt = Nt[vt],
					kt = o(Rr),
					Pt = o[c](kt),
					jt = { isUserPause: !r, isMusicPlay: !u, isMusicShow: !u },
					Tt = { userPause: function(t, n, i) { return t[Fr] }, musicPlay: function(t, n, i) { return t[Yi] }, musicShow: function(t, n, i) { return t[nr] } },
					At = { userActionPause: function(t, n) { var i = t[zr];
							t[Or], i(qr, n) }, musicActionPlay: function(t, n) { var i = t[zr];
							t[Or], i($r, n) }, musicActionShow: function(t, n) { var i = t[zr];
							t[Or], i(Mr, n) } },
					St = (R = {}, Pt()(R, qr, function(t, n) { t[Fr] = n }), Pt()(R, $r, function(t, n) { t[Yi] = !t[Fr] && n }), Pt()(R, Mr, function(t, n) { t[nr] = n }), R),
					Dt = { state: jt, getters: Tt, actions: At, mutations: St };
				z[Er][Br]($[Er]);
				var Ht = new $[Er][Ur]({ actions: F, modules: { music: Dt } }),
					Rt = o(Lr),
					Ft = (o(Ir), { name: Qr, data: function() { return {} }, mounted: function() { var n = this;
							t[nt][Wr](Qr)[u][gn](Jr, function(t) { n[Yr][Vr](Kr) }, !r) }, beforeDestroy: function() { t[Xr](this[_r]) } }),
					zt = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Qr }, [i(lt, { staticClass: te }), t[rr](er), i(lt, { staticClass: ne }), t[rr](er), i(lt, { staticClass: ie }), t[rr](er), i(lt, { staticClass: re }), t[rr](er), i(lt, { staticClass: ee }), t[rr](er), i(lt, { staticClass: se }), t[rr](er), i(lt, { staticClass: ae }), t[rr](er), i(lt, { staticClass: ue })])]) },
					Ot = [],
					qt = { render: zt, staticRenderFns: Ot },
					$t = qt,
					Mt = o(ht),
					Bt = y,
					Et = Mt(Ft, $t, !r, Bt, oe, N),
					Ut = Et[vt],
					Lt = { name: Kr, data: function() { return {} } },
					It = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: Kr }, [i(lt, { staticClass: ce }, [i(lt, { staticClass: fe }), t[rr](er), i(lt, { staticClass: le }), t[rr](er), i(Zr, { attrs: { to: he } }, [i(lt, { staticClass: ve }, [i(lt, { staticClass: me }, [i(lt, { staticClass: pe })])])]), t[rr](er), i(Zr, { attrs: { to: de } }, [i(lt, { staticClass: ye })]), t[rr](er), i(Zr, { attrs: { to: ge } }, [i(lt, { staticClass: we })]), t[rr](er), i(Zr, { attrs: { to: xe } }, [i(lt, { staticClass: Ce })]), t[rr](er), i(Zr, { attrs: { to: Ne } }, [i(lt, { staticClass: be })]), t[rr](er), i(Zr, { attrs: { to: ke } }, [i(lt, { staticClass: Pe })]), t[rr](er), i(lt, { staticClass: je })], r)]) },
					Qt = [],
					Wt = { render: It, staticRenderFns: Qt },
					Jt = Wt,
					Vt = o(ht),
					Yt = g,
					Kt = Vt(Lt, Jt, !r, Yt, Te, N),
					Xt = Kt[vt],
					_t = { name: Ae, data: function() { return { sckjimg1: o(Se), sckjimg2: o(De), sckjimg3: o(He), sckjimg4: o(Re), sckjimg5: o(Fe), sckjimg6: o(ze), sckjimg7: o(Oe), sckjimg8: o(qe), sckjimg9: o($e), sckjimg10: o(Me), sckjimg11: o(Be), sckjimg12: o(Ee), sckjimg13: o(Ue), sckjimg14: o(Le), sckjimg15: o(Ie), sckjimg16: o(Qe), sckjimg17: o(We), sckjimg18: o(Je), sckjimg19: o(Ve) } } },
					Zt = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: Ae }, [i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Ye })]), t[rr](er), t[ft](u), t[rr](er), i(lt, { staticClass: Ke }, [i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ge], expression: Ge }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ts], expression: ts }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ns], expression: ns }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[is], expression: is }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[rs], expression: rs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[es], expression: es }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ss], expression: ss }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[as], expression: as }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[us], expression: us }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[os], expression: os }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[cs], expression: cs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[fs], expression: fs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ls], expression: ls }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[vs], expression: vs, arg: ms }], staticClass: vs }, [i(lt, { staticClass: ps }), t[rr](er), i(lt, { staticClass: ds }), t[rr](er), i(lt, { staticClass: ys })]), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[gs], expression: gs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ws], expression: ws }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[xs], expression: xs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Cs], expression: Cs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ns], expression: Ns }], attrs: { src: Ln, alt: Ln } })]), t[rr](er), i(lt, { staticClass: bs }, [i(Zr, { attrs: { to: de } }, [i(lt, { staticClass: ks }, [t[rr](Ps)])])], r)], r) },
					Gt = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: js }, [i(lt, { staticClass: Ts }), t[rr](er), i(lt, { staticClass: As }), t[rr](er), i(lt, { staticClass: Ss }), t[rr](er), i(lt, { staticClass: Ds }), t[rr](er), i(lt, { staticClass: Hs }), t[rr](er), i(lt, { staticClass: Rs })]) }],
					tn = { render: Zt, staticRenderFns: Gt },
					nn = tn,
					rn = o(ht),
					en = x,
					sn = rn(_t, nn, !r, en, Fs, N),
					an = sn[vt],
					un = o(zs),
					on = o[c](un),
					$s = { name: Os, data: function() { return { swiperOption: Pt()({ direction: qs, slidesPerView: r, delay: 2e3, loop: !u, autoplay: !u }, Ms, { disableOnInteraction: !r }), ppqyimg1: o(Bs), ppqyimg2: o(Es), ppqyimg3: o(Us), ppqyimg4: o(Ls), ppqyimg5: o(Is), ppqyimg6: o(Qs), ppqyimg8: o(Ws) } }, components: { swiper: un[Js], swiperSlide: un[Vs] } },
					Ql = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: Os }, [i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Ye })]), t[rr](er), t[ft](u), t[rr](er), i(lt, { staticClass: Ke }, [i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ys], expression: Ys }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ks], expression: Ks }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Xs], expression: Xs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[_s], expression: _s }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Zs], expression: Zs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Gs], expression: Gs }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { staticClass: ta }, [i(Js, { ref: na, attrs: { options: t[ia] } }, [i(ra, [i(Xe, { attrs: { width: k, src: o(ea) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(sa) } })])], r), t[rr](er), i(lt, { staticClass: aa }), t[rr](er), i(lt, { staticClass: ua })], r), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[oa], expression: oa }], attrs: { src: Ln, alt: Ln } })]), t[rr](er), i(lt, { staticClass: bs }, [i(Zr, { attrs: { to: he } }, [i(lt, { staticClass: ca }, [t[rr](fa)])]), t[rr](er), i(Zr, { attrs: { to: ge } }, [i(lt, { staticClass: la }, [t[rr](Ps)])])], r)], r) },
					Xl = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: ha }, [i(lt, { staticClass: va }), t[rr](er), i(lt, { staticClass: ma }), t[rr](er), i(lt, { staticClass: pa }), t[rr](er), i(lt, { staticClass: da }), t[rr](er), i(lt, { staticClass: ya }), t[rr](er), i(lt, { staticClass: ga }), t[rr](er), i(lt, { staticClass: Rs })]) }],
					sh = { render: Ql, staticRenderFns: Xl },
					ah = sh,
					uh = o(ht),
					oh = C,
					ch = uh($s, ah, !r, oh, wa, N),
					fh = ch[vt],
					lh = (o(xa), o(Ca), { name: Na, data: function() { return { playerOptions: { muted: !r, language: j, fluid: !u, sources: [{ type: ba, src: ka }], controlBar: { remainingTimeDisplay: !r, fullscreenToggle: !B[Pa][Pi], volumeMenuButton: { inline: !r, vertical: !u } }, poster: o(ja) }, xmysimg1: o(Ta), xmysimg2: o(Aa), xmysimg3: o(Sa), xmysimg4: o(Da), xmysimg5: o(Ha), xmysimg6: o(Ra), xmysimg7: o(Fa), xmysimg8: o(za), xmysimg9: o(Oa), xmysimg10: o(qa), xmysimg11: o($a), xmysimg12: o(Ma), xmysimg13: o(Ba), xmysimg14: o(Ea), xmysimg15: o(Ua), xmysimg16: o(La), xmysimg17: o(Ia), xmysimg18: o(Qa), xmysimg19: o(Wa), xmysimg20: o(Ja), xmysimg21: o(Va) } }, methods: q()({}, t[s]($[Ii])({ musicActionPlay: Wi }), { onPlayerPlay: function(t) { this[Wi](!r) }, onPlayerPause: function(t) { this[Wi](!u) }, onPlayerEnded: function(t) { this[Wi](!u) }, onPlayerLoadeddata: function(t) {}, onPlayerWaiting: function(t) {}, onPlayerPlaying: function(t) {}, onPlayerTimeupdate: function(t) {}, onPlayerCanplay: function(t) {}, onPlayerCanplaythrough: function(t) {}, playerStateChanged: function(t) {}, playerReadied: function(t) {} }), computed: { player: function() { return this[Ka][Ya][w] } }, mounted: function() { this[Zi](function() { B[Pa][Pi] && this[Ka][Ya][w][_a][Xa](it)[u][D](Za, Ga) }) }, beforeDestroy: function() { delete this[Ka][Ya][w] }, components: {} }),
					hh = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: Na }, [i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Ye })]), t[rr](er), i(lt, { staticClass: tu }, [i(lt, { staticClass: nu }), t[rr](er), i(lt, { staticClass: iu }), t[rr](er), i(lt, { staticClass: ru }), t[rr](er), i(lt, { staticClass: eu }), t[rr](er), i(lt, { staticClass: it }, [i(m, { ref: Ya, staticClass: su, attrs: { options: t[au], playsinline: !u }, on: { play: function(n) { t[uu](n) }, pause: function(n) { t[ou](n) }, ended: function(n) { t[cu](n) }, loadeddata: function(n) { t[fu](n) }, waiting: function(n) { t[lu](n) }, playing: function(n) { t[hu](n) }, timeupdate: function(n) { t[vu](n) }, canplay: function(n) { t[mu](n) }, canplaythrough: function(n) { t[pu](n) }, ready: t[du], statechanged: function(n) { t[yu](n) } } })], r), t[rr](er), i(lt, { staticClass: gu }), t[rr](er), i(lt, { staticClass: wu })]), t[rr](er), i(lt, { staticClass: Ke }, [i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[xu], expression: xu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Cu], expression: Cu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[Nu], expression: Nu, arg: ms }], staticClass: bu }, [i(lt, { staticClass: ku })]), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Pu], expression: Pu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ju], expression: ju }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Tu], expression: Tu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Au], expression: Au }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Su], expression: Su }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Du], expression: Du }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Hu], expression: Hu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ru], expression: Ru }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Fu], expression: Fu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[zu], expression: zu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ou], expression: Ou }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[qu], expression: qu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[$u], expression: $u }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Mu], expression: Mu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Bu], expression: Bu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Eu], expression: Eu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Uu], expression: Uu }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Lu], expression: Lu }], attrs: { src: Ln, alt: Ln } })]), t[rr](er), i(lt, { staticClass: bs }, [i(Zr, { attrs: { to: de } }, [i(lt, { staticClass: ca }, [t[rr](fa)])]), t[rr](er), i(Zr, { attrs: { to: xe } }, [i(lt, { staticClass: la }, [t[rr](Ps)])])], r)], r) },
					vh = [],
					mh = { render: hh, staticRenderFns: vh },
					ph = mh,
					dh = o(ht),
					yh = P,
					gh = dh(lh, ph, !r, yh, Iu, N),
					wh = gh[vt],
					xh = { name: Qu, data: function() { return { swiperOption: Pt()({ direction: qs, slidesPerView: r, delay: 2e3, loop: !u, autoplay: !u, pagination: { el: Wu, clickable: !u, hiddenClass: Ju } }, Ms, { disableOnInteraction: !r }), cpysimg1: o(Vu), cpysimg3: o(Yu), cpysimg4: o(Ku), cpysimg5: o(Xu), cpysimg6: o(_u), cpysimg7: o(Zu), cpysimg8: o(Gu), cpysimg9: o(to), cpysimg10: o(no), cpysimg11: o(io), cpysimg12: o(ro), cpysimg13: o(eo), cpysimg14: o(so), cpysimg15: o(ao), cpysimg16: o(uo), cpysimg17: o(oo), cpysimg18: o(co), cpysimg19: o(fo), cpysimg20: o(lo) } }, components: { swiper: un[Js], swiperSlide: un[Vs] } },
					Ch = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: Qu }, [i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Ye })]), t[rr](er), t[ft](u), t[rr](er), i(lt, { staticClass: Ke }, [i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ho], expression: ho }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { staticClass: vo }, [i(lt, { staticClass: mo }, [i(Js, { ref: na, attrs: { options: t[ia] } }, [i(ra, [i(Xe, { attrs: { width: k, src: o(po) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(yo) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(go) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(wo) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(xo) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(Co) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(No) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(bo) } })]), t[rr](er), i(ra, [i(Xe, { attrs: { width: k, src: o(ko) } })]), t[rr](er), i(lt, { staticClass: Po, attrs: { slot: jo }, slot: jo })], r)], r), t[rr](er), i(lt, { staticClass: To })]), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[Ao], expression: Ao, arg: ms }], staticClass: So }, [i(lt, { staticClass: ku })]), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Do], expression: Do }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ho], expression: Ho }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ro], expression: Ro }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Fo], expression: Fo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[zo], expression: zo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Oo], expression: Oo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[qo], expression: qo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[$o], expression: $o }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Mo], expression: Mo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Bo], expression: Bo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Eo], expression: Eo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Uo], expression: Uo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Lo], expression: Lo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Io], expression: Io }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Qo], expression: Qo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Wo], expression: Wo }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Jo], expression: Jo }], attrs: { src: Ln, alt: Ln } })]), t[rr](er), i(lt, { staticClass: bs }, [i(Zr, { attrs: { to: ge } }, [i(lt, { staticClass: ca }, [t[rr](fa)])]), t[rr](er), i(Zr, { attrs: { to: Ne } }, [i(lt, { staticClass: la }, [t[rr](Ps)])])], r)], r) },
					Nh = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: Vo }, [i(lt, { staticClass: Yo }), t[rr](er), i(lt, { staticClass: Ko }), t[rr](er), i(lt, { staticClass: Xo }), t[rr](er), i(lt, { staticClass: _o }), t[rr](er), i(lt, { staticClass: Zo }), t[rr](er), i(lt, { staticClass: Go }), t[rr](er), i(lt, { staticClass: tc }), t[rr](er), i(lt, { staticClass: nc })]) }],
					bh = { render: Ch, staticRenderFns: Nh },
					kh = bh,
					Ph = o(ht),
					jh = T,
					Th = Ph(xh, kh, !r, jh, ic, N),
					Ah = Th[vt],
					Sh = o(rc),
					Dh = o[c](Sh),
					Hh = { name: ec, data: function() { return { money: { dianMoneyOne: [], dianMoneyTwo: [], dianMoneyThree: [], dailiTableMoney: [], yunyingMoney: [] }, dxysimg1: o(sc), dxysimg2: o(ac), dxysimg3: o(uc), dxysimg4: o(oc), dxysimg5: o(cc), dxysimg6: o(fc), dxysimg7: o(lc), dxysimg8: o(hc), dxysimg9: o(vc), dxysimg10: o(mc), dxysimg11: o(pc), dxysimg12: o(dc), dxysimg13: o(yc), dxysimg14: o(gc), dxysimg15: o(wc), dxysimg16: o(xc) } }, created: function() { var n = this,
								i = (new t[mn])[vn]();
							Dh[Er][Nc](bc + i)[Cc](function(t) { n[kc] = t[Pc] }) } },
					Rh = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: ec }, [i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Ye })]), t[rr](er), t[ft](u), t[rr](er), i(lt, { staticClass: Ke }, [i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[jc], expression: jc }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Tc], expression: Tc }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ac], expression: Ac }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Sc], expression: Sc }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[Dc], expression: Dc, arg: ms }], staticClass: Hc }, [i(lt, { staticClass: Rc }, [i(mt, [t[rr](t[Fc](t[kc][zc][u]))]), t[rr](er), i(mt, [t[rr](t[Fc](t[kc][zc][r]))]), t[rr](er), i(mt, [t[rr](t[Fc](t[kc][zc][Oc]))])])]), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[qc], expression: qc, arg: ms }], staticClass: $c }, [i(lt, { staticClass: Mc }), t[rr](er), i(lt, { staticClass: Bc }, [t[rr](t[Fc](t[kc][Ec][u]))])]), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Uc], expression: Uc }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Lc], expression: Lc }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Ic], expression: Ic }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[Qc], expression: Qc, arg: ms }], staticClass: Wc }, [i(lt, { staticClass: Jc }, [i(mt, [t[rr](t[Fc](t[kc][Vc][u]))]), t[rr](er), i(mt, [t[rr](t[Fc](t[kc][Vc][r]))]), t[rr](er), i(mt, [t[rr](t[Fc](t[kc][Vc][Oc]))])])]), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Yc], expression: Yc }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(lt, { directives: [{ name: _e, rawName: hs, value: t[Kc], expression: Kc, arg: ms }], staticClass: Xc }, [i(lt, { staticClass: _c }), t[rr](er), t[ft](r), t[rr](er), i(lt, { staticClass: Zc }, [i(Zc, { attrs: { align: Gc } }, [t[ft](Oc), t[rr](er), i(tf, [i(nf, [t[rr](t[Fc](t[kc][rf][u]))]), t[rr](er), i(nf, { attrs: { rowspan: ef } }, [t[rr](t[Fc](t[kc][sf][u]))])]), t[rr](er), i(tf, [i(nf, [t[rr](t[Fc](t[kc][rf][r]))])]), t[rr](er), i(tf, [i(nf, [t[rr](t[Fc](t[kc][rf][Oc]))])]), t[rr](er), i(tf, [i(nf, [t[rr](t[Fc](t[kc][rf][af]))])])])])]), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[uf], expression: uf }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ of ], expression: of }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[cf], expression: cf }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ff], expression: ff }], attrs: { src: Ln, alt: Ln } })]), t[rr](er), i(lt, { staticClass: bs }, [i(Zr, { attrs: { to: xe } }, [i(lt, { staticClass: ca }, [t[rr](fa)])]), t[rr](er), i(Zr, { attrs: { to: ke } }, [i(lt, { staticClass: la }, [t[rr](Ps)])])], r)], r) },
					Fh = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: lf }, [i(lt, { staticClass: hf }), t[rr](er), i(lt, { staticClass: vf }), t[rr](er), i(lt, { staticClass: mf }), t[rr](er), i(lt, { staticClass: pf }), t[rr](er), i(lt, { staticClass: df }), t[rr](er), i(lt, { staticClass: yf }), t[rr](er), i(lt, { staticClass: gf }), t[rr](er), i(lt, { staticClass: wf })]) }, function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: xf }, [i(lt, { staticClass: Cf }, [t[rr](Nf), i(bf), t[rr](kf), i(bf), t[rr](Pf), i(bf), t[rr](jf), i(bf), t[rr](Tf)])]) }, function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(tf, [i(nf, { staticClass: Af }, [t[rr](Sf)]), t[rr](er), i(nf, { staticClass: Df }, [t[rr](Hf)])]) }],
					zh = { render: Rh, staticRenderFns: Fh },
					Oh = zh,
					qh = o(ht),
					$h = A,
					Mh = qh(Hh, Oh, !r, $h, Rf, N),
					Bh = Mh[vt],
					Eh = { name: Ff, data: function() { return { zbfcimg1: o(zf), zbfcimg2: o(Of), zbfcimg3: o(qf), zbfcimg4: o($f), zbfcimg5: o(Mf), zbfcimg6: o(Bf), zbfcimg7: o(Ef), zbfcimg8: o(Uf), zbfcimg9: o(Lf), zbfcimg10: o(If), zbfcimg11: o(Qf), zbfcimg12: o(Wf), zbfcimg13: o(Jf), zbfcimg14: o(Vf), zbfcimg15: o(Yf) } } },
					Uh = function() {
						var t = this,
							n = t[ut],
							i = t[ct][ot] || n;
						return i(lt, { staticClass: Ff }, [i(Zr, { attrs: { to: Gr } }, [i(lt, { staticClass: Ye })]), t[rr](er), t[ft](u), t[rr](er), i(lt, { staticClass: Ke }, [i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Kf], expression: Kf }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Xf], expression: Xf }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[_f], expression: _f }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Zf], expression: Zf }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[Gf], expression: Gf }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[tl], expression: tl }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, {
							directives: [{
								name: _e,
								rawName: Ze,
								value: t[nl],
								expression: nl
							}],
							attrs: { src: Ln, alt: Ln }
						}), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[il], expression: il }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[rl], expression: rl }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[el], expression: el }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[sl], expression: sl }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[al], expression: al }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ul], expression: ul }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[ol], expression: ol }], attrs: { src: Ln, alt: Ln } }), t[rr](er), i(Xe, { directives: [{ name: _e, rawName: Ze, value: t[cl], expression: cl }], attrs: { src: Ln, alt: Ln } })]), t[rr](er), i(lt, { staticClass: bs }, [i(Zr, { attrs: { to: Ne } }, [i(lt, { staticClass: ca }, [t[rr](fa)])]), t[rr](er), i(Zr, { attrs: { to: fl } }, [i(lt, { staticClass: la }, [t[rr](Ps)])])], r)], r)
					},
					Lh = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: ll }, [i(lt, { staticClass: hl }), t[rr](er), i(lt, { staticClass: vl }), t[rr](er), i(lt, { staticClass: ml }), t[rr](er), i(lt, { staticClass: pl }), t[rr](er), i(lt, { staticClass: dl }), t[rr](er), i(lt, { staticClass: yl }), t[rr](er), i(lt, { staticClass: gl })]) }],
					Ih = { render: Uh, staticRenderFns: Lh },
					Qh = Ih,
					Wh = o(ht),
					Jh = S,
					Vh = Wh(Eh, Qh, !r, Jh, wl, N),
					Yh = Vh[vt],
					Kh = { name: xl, data: function() { return {} } },
					Xh = function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(lt, { staticClass: xl }, [i(lt, { staticClass: Cl }), t[rr](er), i(lt, { staticClass: Nl }), t[rr](er), i(lt, { staticClass: bl }), t[rr](er), t[ft](u), t[rr](er), t[ft](r), t[rr](er), i(Zr, { attrs: { to: kl } }, [i(lt, { staticClass: Pl })])], r) },
					_h = [function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(Er, { attrs: { href: jl } }, [i(lt, { staticClass: Tl }, [i(lt, { staticClass: Al })])]) }, function() { var t = this,
							n = t[ut],
							i = t[ct][ot] || n; return i(Er, { attrs: { href: Sl } }, [i(lt, { staticClass: Dl }, [i(lt, { staticClass: Al })])]) }],
					Zh = { render: Xh, staticRenderFns: _h },
					Gh = Zh,
					tv = o(ht),
					nv = H,
					iv = tv(Kh, Gh, !r, nv, Hl, N),
					rv = iv[vt];
				z[Er][Br](Rt[Er]);
				var ev = new Rt[Er]({ routes: [{ path: kl, name: Qr, component: Ut }, { path: Gr, name: Kr, component: Xt }, { path: he, name: Ae, component: an }, { path: de, name: Os, component: fh }, { path: Rl, name: Fl, component: wh }, { path: zl, name: Ol, component: Ah }, { path: ql, name: $l, component: Bh }, { path: Ml, name: Bl, component: Yh }, { path: El, name: Ul, component: rv }], scrollBehavior: function(t, n, i) { return { x: u, y: u } } }),
					sv = o(Ll),
					av = o[c](sv),
					uv = o(Il),
					ov = o[c](uv);
				z[Er][Br](on[Er]), z[Er][Br](ov[Er]), z[Er][Br](av[Er], { preLoad: 1.3, error: o(Wl), loading: o(Jl), attempt: r, lazyComponent: !u }), z[Er][Hn][Vl] = !r, ev[Yl](function(n, i, r) { t[Kl](function() { t[l][Pn] = t[l][Pn] }, 500), r(), t[_l][Vr]([Zl, t[l][Pn][Gl] + jn + n[th]]), t[ih][nh](n[th]) }), new z[Er]({ el: rh, router: ev, store: Ht, template: eh, components: { App: bt } })
			},
			PXVQ: function(t, n) {},
			PsMv: function(t, n, i) { t[vt] = i[mt] + sh },
			"Pu5/": function(t, n, i) { t[vt] = i[mt] + ah },
			Q1AP: function(t, n, i) { t[vt] = i[mt] + uh },
			Q7rV: function(t, n, i) { t[vt] = i[mt] + oh },
			Q7ws: function(t, n, i) { t[vt] = i[mt] + ch },
			Qf0E: function(t, n, i) { t[vt] = i[mt] + fh },
			RC2C: function(t, n) {},
			RdHE: function(t, n, i) { t[vt] = i[mt] + lh },
			SOo5: function(t, n, i) { t[vt] = i[mt] + hh },
			SWSO: function(t, n, i) { t[vt] = i[mt] + vh },
			SY3q: function(t, n, i) { t[vt] = i[mt] + mh },
			SyDw: function(t, n, i) { t[vt] = i[mt] + ph },
			UJII: function(t, n, i) { t[vt] = i[mt] + dh },
			Unbc: function(t, n, i) { t[vt] = i[mt] + yh },
			V6qP: function(t, n, i) { t[vt] = i[mt] + gh },
			"VJN+": function(t, n, i) { t[vt] = i[mt] + wh },
			VKBo: function(t, n, i) { t[vt] = i[mt] + xh },
			VjIY: function(t, n, i) { t[vt] = i[mt] + Ch },
			WXCR: function(t, n, i) { t[vt] = i[mt] + Nh },
			WYiA: function(t, n, i) { t[vt] = i[mt] + bh },
			"WcK/": function(t, n, i) { t[vt] = i[mt] + kh },
			Wq7S: function(t, n, i) { t[vt] = i[mt] + Ph },
			XYcD: function(t, n, i) { t[vt] = i[mt] + jh },
			Xyx3: function(t, n, i) { t[vt] = i[mt] + Th },
			Ya1o: function(t, n) {},
			YaUw: function(n, i, e) {
				"use strict";
				(function(n) {
					var i = e(Sh),
						a = e[c](i);
					! function(i, o) {
						function c(t) { var n = t[Y],
								i = Ft[Dh](t); return !Ft[Hh](t) && (!(r !== t[Rh] || !n) || Fh === i || zh !== i && (u === n || Oh == typeof n && n > u && n - r in t)) }

						function f(t) { var n = Yt[t] = {}; return Ft[qh](t[gi](Ot) || [], function(t, i) { n[i] = !u }), n }

						function h(t, n, i, r) { if(Ft[$h](t)) { var e, s, u = Ft[Mh],
									c = t[Rh],
									f = c ? Ft[Bh] : t,
									l = c ? t[u] : t[u] && u; if(l && f[l] && (r || f[l][Pc]) || i !== o || Eh != typeof n) return l || (l = c ? t[u] = kt[Uh]() || Ft[Lh]++ : u), f[l] || (f[l] = c ? {} : { toJSON: Ft[Ih] }), (Qh == (void 0 === n ? Wh : a()(n)) || zh == typeof n) && (r ? f[l] = Ft[Jh](f[l], n) : f[l][Pc] = Ft[Jh](f[l][Pc], n)), s = f[l], r || (s[Pc] || (s[Pc] = {}), s = s[Pc]), i !== o && (s[Ft[Vh](n)] = i), Eh == typeof n ? N == (e = s[n]) && (e = s[Ft[Vh](n)]) : e = s, e } }

						function v(t, n, i) { if(Ft[$h](t)) { var r, e, s = t[Rh],
									a = s ? Ft[Bh] : t,
									o = s ? t[Ft[Mh]] : Ft[Mh]; if(a[o]) { if(n && (r = i ? a[o] : a[o][Pc])) { Ft[Yh](n) ? n = n[Kh](Ft[Xh](n, Ft[Vh])) : n in r ? n = [n] : (n = Ft[Vh](n), n = n in r ? [n] : n[bn](er)), e = n[Y]; for(; e--;) delete r[n[e]]; if(i ? !p(r) : !Ft[_h](r)) return }(i || (delete a[o][Pc], p(a[o]))) && (s ? Ft[Zh]([t], !u) : Ft[tv][Gh] || a != a[l] ? delete a[o] : a[o] = N) } } }

						function m(t, n, i) { if(i === o && r === t[Rh]) { var e = nv + n[Nn](Xt, iv)[zi](); if(Eh == typeof(i = t[rv](e))) { try { i = Ga === i || ev !== i && (sv === i ? N : +i + Ln === i ? +i : Kt[av](i) ? Ft[uv](i) : i) } catch(t) {} Ft[Pc](t, n, i) } else i = o } return i }

						function p(t) { var n; for(n in t)
								if((Pc !== n || !Ft[_h](t[n])) && ov !== n) return !r; return !u }

						function d() { return !u }

						function g() { return !r }

						function w() { try { return wt[cv] } catch(t) {} }

						function x(t, n) { do { t = t[n] } while (t && r !== t[Rh]); return t }

						function C(t, n, i) { if(Ft[fv](n)) return Ft[lv](t, function(t, r) { return !!n[Ah](t, r, t) !== i }); if(n[Rh]) return Ft[lv](t, function(t) { return t === n !== i }); if(Eh == typeof n) { if(wn[av](n)) return Ft[hv](n, t, i);
								n = Ft[hv](n, t) } return Ft[lv](t, function(t) { return Ft[vv](t, n) >= u !== i }) }

						function k(t) { var n = An[bn](mv),
								i = t[pv](); if(i[tt])
								for(; n[Y];) i[tt](n[Uh]()); return i }

						function P(t, n) { return Ft[dv](t, Zc) && Ft[dv](r === n[Rh] ? n : n[yv], tf) ? t[Xa](gv)[u] || t[st](t[wv][tt](gv)) : t }

						function j(t) { return t[Dh] = (N !== Ft[Cv][xv](t, Dh)) + kl + t[Dh], t }

						function T(t) { var n = En[Nv](t[Dh]); return n ? t[Dh] = n[r] : t[bv](Dh), t }

						function S(t, n) { for(var i, r = u; N != (i = t[r]); r++) Ft[kv](i, Pv, !n || Ft[kv](n[r], Pv)) }

						function H(t, n) { if(r === n[Rh] && Ft[jv](t)) { var i, e, s, a = Ft[kv](t),
									o = Ft[kv](n, a),
									c = a[Tv]; if(c) { delete o[Av], o[Tv] = {}; for(i in c)
										for(e = u, s = c[i][Y]; s > e; e++) Ft[Dv][Sv](n, i, c[i][e]) } o[Pc] && (o[Pc] = Ft[Jh]({}, o[Pc])) } }

						function R(t, n) { var i, e, s; if(r === n[Rh]) { if(i = n[dv][zi](), !Ft[tv][Hv] && n[Ft[Mh]]) { s = Ft[kv](n); for(e in s[Tv]) Ft[Rv](n, e, s[Av]);
									n[bv](Ft[Mh]) } fn === i && n[Fv] !== t[Fv] ? (j(n)[Fv] = t[Fv], T(n)) : Qh === i ? (n[zv] && (n[Ov] = t[Ov]), Ft[tv][qv] && t[$v] && !Ft[Mv](n[$v]) && (n[$v] = t[$v])) : Bv === i && $n[av](t[Dh]) ? (n[Ev] = n[Uv] = t[Uv], n[Lv] !== t[Lv] && (n[Lv] = t[Lv])) : Iv === i ? n[Qv] = n[Wv] = t[Qv] : (Bv === i || Jv === i) && (n[Vv] = t[Vv]) } }

						function F(t, n) { var i, r, e = u,
								s = a()(t[Xa]) !== yt ? t[Xa](n || Yv) : a()(t[Kv]) !== yt ? t[Kv](n || Yv) : o; if(!s)
								for(s = [], i = t[Xv] || t; N != (r = i[e]); e++) !n || Ft[dv](r, n) ? s[Vr](r) : Ft[_v](s, F(r, n)); return n === o || n && Ft[dv](t, n) ? Ft[_v]([t], s) : s }

						function z(t) { $n[av](t[Dh]) && (t[Ev] = t[Uv]) }

						function O(t, n) { if(n in t) return n; for(var i = n[Gv](u)[Zv]() + n[tm](r), e = n, s = ci[Y]; s--;)
								if((n = ci[s] + i) in t) return n; return e }

						function q(t, n) { return t = n || t, nm === Ft[im](t, rm) || !Ft[em](t[wv], t) }

						function $(t, n) { for(var i, r, e, s = [], a = u, o = t[Y]; o > a; a++) r = t[a], r[sm] && (s[a] = Ft[kv](r, am), i = r[sm][rm], n ? (s[a] || nm !== i || (r[sm][rm] = Ln), Ln === r[sm][rm] && q(r) && (s[a] = Ft[kv](r, am, L(r[dv])))) : s[a] || (e = q(r), (i && nm !== i || !e) && Ft[kv](r, am, e ? i : Ft[im](r, rm)))); for(a = u; o > a; a++) r = t[a], r[sm] && (n && nm !== r[sm][rm] && Ln !== r[sm][rm] || (r[sm][rm] = n ? s[a] || Ln : nm)); return t }

						function B(n, i, e) { var s = ii[Nv](i); return s ? t[om][um](u, s[r] - (e || u)) + (s[Oc] || cm) : i }

						function E(t, n, i, e, s) { for(var a = i === (e ? fm : lm) ? hm : vm === n ? r : u, o = u; hm > a; a += Oc) mm === i && (o += Ft[im](t, i + oi[a], !u, s)), e ? (lm === i && (o -= Ft[im](t, pm + oi[a], !u, s)), mm !== i && (o -= Ft[im](t, fm + oi[a] + dm, !u, s))) : (o += Ft[im](t, pm + oi[a], !u, s), pm !== i && (o += Ft[im](t, fm + oi[a] + dm, !u, s))); return o }

						function U(n, i, e) { var s = !u,
								a = vm === i ? n[ym] : n[gm],
								o = Yn(n),
								c = Ft[tv][wm] && xm === Ft[im](n, wm, !r, o); if(u >= a || N == a) { if(a = Kn(n, i, o), (u > a || N == a) && (a = n[sm][i]), ri[av](a)) return a;
								s = c && (Ft[tv][Cm] || a === n[sm][i]), a = t[Nm](a) || u } return a + E(n, i, e || (c ? fm : lm), s, o) + cm }

						function L(t) { var n = wt,
								i = si[t]; return i || (i = I(t, n), nm !== i && i || (Vn = (Vn || Ft(km)[im](Pm, jm))[bm](n[Tm]), n = (Vn[u][Am] || Vn[u][Sm])[nt], n[Dm](Hm), n[Rm](), i = I(t, n), Vn[Fm]()), si[t] = i), i }

						function I(t, n) { var i = Ft(n[tt](t))[bm](n[pr]),
								r = Ft[im](i[u], rm); return i[zm](), r }

						function Q(t, n, i, r) { var e; if(Ft[Yh](n)) Ft[qh](n, function(n, e) { i || li[av](t) ? r(t, e) : Q(t + Om + (Qh == (void 0 === e ? Wh : a()(e)) ? n : Ln) + qm, e, i, r) });
							else if(i || Qh !== Ft[Dh](n)) r(t, n);
							else
								for(e in n) Q(t + Om + e + qm, n[e], i, r) }

						function W(t) { return function(n, i) { Eh != typeof n && (i = n, n = Yv); var e, s = u,
									a = n[zi]()[gi](Ot) || []; if(Ft[fv](i))
									for(; e = a[s++];) $m === e[u] ? (e = e[tm](r) || Yv, (t[e] = t[e] || [])[Mm](i)) : (t[e] = t[e] || [])[Vr](i) } }

						function J(t, n, i, e) {
							function s(f) { var l; return a[f] = !u, Ft[qh](t[f] || [], function(t, u) { var f = u(n, i, e); return Eh != typeof f || c || a[f] ? c ? !(l = f) : o : (n[Bm][Mm](f), s(f), !r) }), l } var a = {},
								c = t === Di; return s(n[Bm][u]) || !a[Yv] && s(Yv) }

						function X(t, n) { var i, r, e = Ft[Um][Em] || {}; for(r in n) n[r] !== o && ((e[r] ? t : i || (i = {}))[r] = n[r]); return i && Ft[Jh](!u, t, i), t }

						function _(t, n, i) { for(var r, e, s, a, c = t[Lm], f = t[Bm]; Yv === f[u];) f[Im](), e === o && (e = t[Qm] || n[Wm](Jm)); if(e)
								for(a in c)
									if(c[a] && c[a][av](e)) { f[Mm](a); break }
							if(f[u] in i) s = f[u];
							else { for(a in i) { if(!f[u] || t[Vm][a + er + f[u]]) { s = a; break } r || (r = a) } s = s || r } return s ? (s !== f[u] && f[Mm](s), i[s]) : o }

						function Z(t, n, i, e) { var s, a, o, c, f, l = {},
								h = t[Bm][tm](); if(h[r])
								for(o in t[Vm]) l[o[zi]()] = t[Vm][o]; for(a = h[Im](); a;)
								if(t[Ym][a] && (i[t[Ym][a]] = n), !f && e && t[Km] && (n = t[Km](n, t[Xm])), f = a, a = h[Im]())
									if(Yv === a) a = f;
									else if(Yv !== f && f !== a) { if(!(o = l[f + er + a] || l[_m + a]))
									for(s in l)
										if(c = s[bn](er), c[r] === a && (o = l[f + er + c[u]] || l[_m + c[u]])) {!u === o ? o = l[s] : !u !== l[s] && (a = c[u], h[Mm](c[r])); break }
								if(!u !== o)
									if(o && t[Zm]) n = o(n);
									else try { n = o(n) } catch(t) { return { state: Gm, error: o ? t : tp + f + np + a } } } return { state: ip, data: n } }

						function G() { try { return new i[rp] } catch(t) {} }

						function it() { try { return new i[ep](sp) } catch(t) {} }

						function et() { return t[Kl](function() { Ei = o }), Ei = Ft[ap]() }

						function at(t, n, i) { for(var r, e = (Ji[n] || [])[Kh](Ji[Yv]), s = u, a = e[Y]; a > s; s++)
								if(r = e[s][Ah](i, n, t)) return r }

						function ut(n, i, e) { var s, a, o = u,
								c = Wi[Y],
								f = Ft[op]()[up](function() { delete l[cp] }),
								l = function() { if(a) return !r; for(var i = Ei || et(), e = t[om][um](u, h[fp] + h[lp] - i), s = e / h[lp] || u, o = r - s, c = u, l = h[hp][Y]; l > c; c++) h[hp][c][vp](o); return f[mp](n, [h, o, e]), r > o && l ? e : (f[pp](n, [h]), !r) },
								h = f[dp]({ elem: n, props: Ft[Jh]({}, i), opts: Ft[Jh](!u, { specialEasing: {} }, e), originalProperties: i, originalOptions: e, startTime: Ei || et(), duration: e[lp], tweens: [], createTween: function(t, i) { var r = Ft[yp](n, h[gp], t, i, h[gp][wp][t] || h[gp][xp]); return h[hp][Vr](r), r }, stop: function(t) { var i = u,
											e = t ? h[hp][Y] : u; if(a) return this; for(a = !u; e > i; i++) h[hp][i][vp](r); return t ? f[pp](n, [h, t]) : f[Cp](n, [h, t]), this } }),
								v = h[Np]; for(ot(v, h[gp][wp]); c > o; o++)
								if(s = Wi[o][Ah](h, n, v, h[gp])) return s; return Ft[Xh](v, at, h), Ft[fv](h[gp][bp]) && h[gp][bp][Ah](n, h), Ft[Pp][kp](Ft[Jh](l, { elem: n, anim: h, queue: h[gp][jp] })), h[Sp](h[gp][Sp])[Ap](h[gp][Ap], h[gp][Dp])[Tp](h[gp][Tp])[up](h[gp][up]) }

						function ot(t, n) { var i, e, s, a, o; for(i in t)
								if(e = Ft[Vh](i), s = n[e], a = t[i], Ft[Yh](a) && (s = a[r], a = t[i] = a[u]), i !== e && (t[e] = a, delete t[i]), (o = Ft[Hp][e]) && Rp in o) { a = o[Rp](a), delete t[e]; for(i in a) i in t || (t[i] = a[i], n[i] = s) } else n[e] = s }

						function ct(t, n, i) { var e, s, a, o, c, f, l = this,
								h = {},
								v = t[sm],
								m = t[Rh] && q(t),
								p = Ft[kv](t, Fp);
							i[jp] || (c = Ft[zp](t, Pp), N == c[Op] && (c[Op] = u, f = c[$p][qp], c[$p][qp] = function() { c[Op] || f() }), c[Op]++, l[up](function() { l[up](function() { c[Op]--, Ft[jp](t, Pp)[Y] || c[$p][qp]() }) })), r === t[Rh] && (Mp in n || vm in n) && (i[Bp] = [v[Bp], v[Ep], v[Up]], Lp === Ft[im](t, rm) && nm === Ft[im](t, Ip) && (Ft[tv][Qp] && Lp !== L(t[dv]) ? v[Wp] = r : v[rm] = Jp)), i[Bp] && (v[Bp] = Vp, Ft[tv][Yp] || l[up](function() { v[Bp] = i[Bp][u], v[Ep] = i[Bp][r], v[Up] = i[Bp][Oc] })); for(e in n)
								if(s = n[e], Li[Nv](s)) { if(delete n[e], a = a || Kp === s, s === (m ? Xp : _p)) continue;
									h[e] = p && p[e] || Ft[sm](t, e) }
							if(!Ft[_h](h)) { p ? Vp in p && (m = p[Vp]) : p = Ft[kv](t, Fp, {}), a && (p[Vp] = !m), m ? Ft(t)[_p]() : l[Ap](function() { Ft(t)[Xp]() }), l[Ap](function() { var n;
									Ft[Zp](t, Fp); for(n in h) Ft[sm](t, n, h[n]) }); for(e in h) o = at(m ? p[e] : u, e, l), e in p || (p[e] = o[bp], m && (o[Gp] = o[bp], o[bp] = vm === e || Mp === e ? r : u)) } }

						function ft(t, n, i, r, e) { return new ft[nd][td](t, n, i, r, e) }

						function ht(t, n) { var i, e = { height: t },
								s = u; for(n = n ? r : u; hm > s; s += Oc - n) i = oi[s], e[mm + i] = e[pm + i] = t; return n && (e[id] = e[vm] = t), e }

						function mt(t) { return Ft[Hh](t) ? t : rd === t[Rh] && (t[ed] || t[sd]) }
						var pt, dt, yt = void 0 === o ? Wh : a()(o),
							gt = i[Pn],
							wt = i[nt],
							xt = wt[Tm],
							Ct = i[ad],
							Nt = i[ud],
							bt = {},
							kt = [],
							Pt = od,
							jt = kt[Kh],
							Tt = kt[Vr],
							At = kt[tm],
							St = kt[di],
							Dt = bt[cd],
							Ht = bt[fd],
							Rt = Pt[Mv],
							Ft = function t(n, i) { return new t[ld][td](n, i, dt) },
							zt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ [hd],
							Ot = /\S+/g,
							qt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
							$t = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
							Mt = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
							Bt = /^[\],:{}\s]*$/,
							Et = /(?:^|:|,)(?:\s*\[)+/g,
							Ut = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
							Lt = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
							It = /^-ms-/,
							Qt = /-([\da-z])/gi,
							Wt = function(t, n) { return n[Zv]() },
							Jt = function(t) {
								(wt[gn] || vd === t[Dh] || Dp === wt[md]) && (Vt(), Ft[M]()) },
							Vt = function() { wt[gn] ? (wt[yn](pd, Jt, !r), i[yn](vd, Jt, !r)) : (wt[dd](yd, Jt), i[dd](gd, Jt)) };
						Ft[ld] = Ft[nd] = { jquery: Pt, constructor: Ft, init: function(t, n, i) { var e, s; if(!t) return this; if(Eh == typeof t) { if(!(e = wd === t[Gv](u) && xd === t[Gv](t[Y] - r) && t[Y] >= af ? [N, t, N] : $t[Nv](t)) || !e[r] && n) return !n || n[Cd] ? (n || i)[Cv](t) : this[Nd](n)[Cv](t); if(e[r]) { if(n = n instanceof Ft ? n[u] : n, Ft[_v](this, Ft[bd](e[r], n && n[Rh] ? n[wv] || n : wt, !u)), Mt[av](e[r]) && Ft[kd](n))
												for(e in n) Ft[fv](this[e]) ? this[e](n[e]) : this[xv](e, n[e]); return this } if((s = wt[Ki](e[Oc])) && s[zv]) { if(s[Pd] !== e[Oc]) return i[Cv](t);
											this[Y] = r, this[u] = s } return this[jd] = wt, this[Td] = t, this } return t[Rh] ? (this[jd] = this[u] = t, this[Y] = r, this) : Ft[fv](t) ? i[M](t) : (t[Td] !== o && (this[Td] = t[Td], this[jd] = t[jd]), Ft[Ad](t, this)) }, selector: Ln, length: u, toArray: function() { return At[Ah](this) }, get: function(t) { return N == t ? this[Sd]() : u > t ? this[this[Y] + t] : this[t] }, pushStack: function(t) { var n = Ft[_v](this[Nd](), t); return n[Dd] = this, n[jd] = this[jd], n }, each: function(t, n) { return Ft[qh](this, t, n) }, ready: function(t) { return Ft[M][dp]()[Ap](t), this }, slice: function() { return this[Hd](At[Rd](this, arguments)) }, first: function() { return this[Fd](u) }, last: function() { return this[Fd](-r) }, eq: function(t) { var n = this[Y],
										i = +t + (u > t ? n : u); return this[Hd](i >= u && n > i ? [this[i]] : []) }, map: function(t) { return this[Hd](Ft[Xh](this, function(n, i) { return t[Ah](n, i, n) })) }, end: function() { return this[Dd] || this[Nd](N) }, push: Tt, sort: [][zd], splice: [][Od] }, Ft[ld][td][nd] = Ft[ld], Ft[Jh] = Ft[ld][Jh] = function() { var t, n, i, e, s, c, f = arguments[u] || {},
									l = r,
									h = arguments[Y],
									v = !r; for(qd == typeof f && (v = f, f = arguments[r] || {}, l = Oc), Qh == (void 0 === f ? Wh : a()(f)) || Ft[fv](f) || (f = {}), h === l && (f = this, --l); h > l; l++)
									if(N != (s = arguments[l]))
										for(e in s) t = f[e], i = s[e], f !== i && (v && i && (Ft[kd](i) || (n = Ft[Yh](i))) ? (n ? (n = !r, c = t && Ft[Yh](t) ? t : []) : c = t && Ft[kd](t) ? t : {}, f[e] = Ft[Jh](v, c, i)) : i !== o && (f[e] = i)); return f }, Ft[Jh]({ expando: ad + (Pt + t[om][$d]())[Nn](/\D/g, Ln), noConflict: function(t) { return i[ud] === Ft && (i[ud] = Nt), t && i[ad] === Ft && (i[ad] = Ct), Ft }, isReady: !r, readyWait: r, holdReady: function(t) { t ? Ft[Md]++ : Ft[M](!u) }, ready: function(n) { if(!u === n ? !--Ft[Md] : !Ft[Bd]) { if(!wt[pr]) return t[Kl](Ft[M]);
										Ft[Bd] = !u, !u !== n && --Ft[Md] > u || (pt[pp](wt, [Ft]), Ft[ld][Ed] && Ft(wt)[Ed](M)[Ud](M)) } }, isFunction: function(t) { return zh === Ft[Dh](t) }, isArray: t[Ld][Yh] || function(t) { return Fh === Ft[Dh](t) }, isWindow: function(t) { return N != t && t == t[l] }, isNumeric: function(n) { return !t[Id](t[Nm](n)) && t[Qd](n) }, type: function(t) { return N == t ? t + Ln : Qh == (void 0 === t ? Wh : a()(t)) || zh == typeof t ? bt[Dt[Ah](t)] || Qh : void 0 === t ? Wh : a()(t) }, isPlainObject: function(t) { var n; if(!t || Qh !== Ft[Dh](t) || t[Rh] || Ft[Hh](t)) return !r; try { if(t[Nd] && !Ht[Ah](t, Nd) && !Ht[Ah](t[Nd][nd], Wd)) return !r } catch(t) { return !r } if(Ft[tv][Jd])
										for(n in t) return Ht[Ah](t, n); for(n in t); return n === o || Ht[Ah](t, n) }, isEmptyObject: function(t) { var n; for(n in t) return !r; return !u }, error: function(n) { throw t[Vd](n) }, parseHTML: function(t, n, i) { if(!t || Eh != typeof t) return N;
									qd == typeof n && (i = n, n = !r), n = n || wt; var e = Mt[Nv](t),
										s = !i && []; return e ? [n[tt](e[r])] : (e = Ft[Yd]([t], n, s), s && Ft(s)[zm](), Ft[_v]([], e[Xv])) }, parseJSON: function(n) { return i[Kd] && i[Kd][Xd] ? i[Kd][Xd](n) : N === n ? n : Eh == typeof n && (n = Ft[Mv](n)) && Bt[av](n[Nn](Ut, _d)[Nn](Lt, qm)[Nn](Et, Ln)) ? t[Zd](Gd + n)() : (Ft[V](ty + n), o) }, parseXML: function(n) { var r, e; if(!n || Eh != typeof n) return N; try { i[ny] ? (e = new t[ny], r = e[iy](n, ry)) : (r = new t[ep](ey), r[sy] = ev, r[ay](n)) } catch(n) { r = o } return r && r[Tm] && !r[Xa](Gm)[Y] || Ft[V](uy + n), r }, noop: function() {}, globalEval: function(t) { t && Ft[Mv](t) && (i[oy] || function(t) { i[cy][Ah](i, t) })(t) }, camelCase: function(t) { return t[Nn](It, fy)[Nn](Qt, Wt) }, nodeName: function(t, n) { return t[dv] && t[dv][zi]() === n[zi]() }, each: function(t, n, i) { var e = u,
										s = t[Y],
										a = c(t); if(i) { if(a)
											for(; s > e && !r !== n[Rd](t[e], i); e++);
										else
											for(e in t)
												if(!r === n[Rd](t[e], i)) break } else if(a)
										for(; s > e && !r !== n[Ah](t[e], e, t[e]); e++);
									else
										for(e in t)
											if(!r === n[Ah](t[e], e, t[e])) break; return t }, trim: Rt && !Rt[Ah](ly) ? function(t) { return N == t ? Ln : Rt[Ah](t) } : function(t) { return N == t ? Ln : (t + Ln)[Nn](qt, Ln) }, makeArray: function(n, i) { var r = i || []; return N != n && (c(t[s](n)) ? Ft[_v](r, Eh == typeof n ? [n] : n) : Tt[Ah](r, n)), r }, inArray: function(n, i, e) { var s; if(i) { if(St) return St[Ah](i, n, e); for(s = i[Y], e = e ? u > e ? t[om][um](u, s + e) : e : u; s > e; e++)
											if(e in i && i[e] === n) return e } return -r }, merge: function(t, n) { var i = n[Y],
										r = t[Y],
										e = u; if(Oh == typeof i)
										for(; i > e; e++) t[r++] = n[e];
									else
										for(; n[e] !== o;) t[r++] = n[e++]; return t[Y] = r, t }, grep: function(t, n, i) { var r, e = [],
										s = u,
										a = t[Y]; for(i = !!i; a > s; s++) r = !!n(t[s], s), i !== r && e[Vr](t[s]); return e }, map: function(t, n, i) { var r, e = u,
										s = t[Y],
										a = c(t),
										o = []; if(a)
										for(; s > e; e++) N != (r = n(t[e], e, i)) && (o[o[Y]] = r);
									else
										for(e in t) N != (r = n(t[e], e, i)) && (o[o[Y]] = r); return jt[Rd]([], o) }, guid: r, proxy: function(t, n) { var i, r, e; return Eh == typeof n && (e = t[n], n = t, t = e), Ft[fv](t) ? (i = At[Ah](arguments, Oc), r = function() { return t[Rd](n || this, i[Kh](At[Ah](arguments))) }, r[Lh] = t[Lh] = t[Lh] || Ft[Lh]++, r) : o }, access: function(t, n, i, r, e, s, a) { var c = u,
										f = t[Y],
										l = N == i; if(Qh === Ft[Dh](i)) { e = !u; for(c in i) Ft[hy](t, n, c, i[c], !u, s, a) } else if(r !== o && (e = !u, Ft[fv](r) || (a = !u), l && (a ? (n[Ah](t, r), n = N) : (l = n, n = function(t, n, i) { return l[Ah](Ft(t), i) })), n))
										for(; f > c; c++) n(t[c], i, a ? r : r[Ah](t[c], c, n(t[c], i))); return e ? t : l ? n[Ah](t) : f ? n(t[u], i) : s }, now: function() { return(new t[mn])[fr]() }, swap: function(t, n, i, r) { var e, s, a = {}; for(s in n) a[s] = t[sm][s], t[sm][s] = n[s];
									e = i[Rd](t, r || []); for(s in n) t[sm][s] = a[s]; return e } }), Ft[M][dp] = function(n) { if(!pt)
									if(pt = Ft[op](), Dp === wt[md]) t[Kl](Ft[M]);
									else if(wt[gn]) wt[gn](pd, Jt, !r), i[gn](vd, Jt, !r);
								else { wt[vy](yd, Jt), i[vy](gd, Jt); var e = !r; try { e = N == i[my] && wt[Tm] } catch(n) {} e && e[py] && function n() { if(!Ft[Bd]) { try { e[py](dy) } catch(i) { return t[Kl](n, 50) } Vt(), Ft[M]() } }() } return pt[dp](n) }, Ft[qh](gy[bn](er), function(t, n) { bt[wy + n + qm] = n[zi]() }), dt = Ft(wt),
							function(n, i) {
								function e(t, n, i, e) { var s, a, u, o, c, f, l, h, v, m; if((n ? n[wv] || n : _) !== U && E(n), n = n || U, i = i || [], !t || Eh != typeof t) return i; if(r !== (o = n[Rh]) && rd !== o) return []; if(I && !e) { if(s = Ot[Nv](t))
											if(u = s[r]) { if(rd === o) { if(!(a = n[Ki](u)) || !a[zv]) return i; if(a[Pd] === u) return i[Vr](a), i } else if(n[wv] && (a = n[wv][Ki](u)) && K(n, a) && a[Pd] === u) return i[Vr](a), i } else { if(s[Oc]) return dt[Rd](i, n[Xa](t)), i; if((u = s[af]) && R[Wr] && n[Wr]) return dt[Rd](i, n[Wr](u)), i }
										if(R[xy] && (!Q || !Q[av](t))) { if(h = l = X, v = n, m = rd === o && t, r === o && Qh !== n[dv][zi]()) { for(f = g(t), (l = n[rv](Pd)) ? h = l[Nn](Mt, Cy) : n[D](Pd, h), h = Ny + h + by, c = f[Y]; c--;) f[c] = h + w(f[c]);
												v = At[av](t) && n[zv] || n, m = f[ky](Py) } if(m) try { return dt[Rd](i, v[Kv](m)), i } catch(t) {} finally { l || n[bv](Pd) } } } return A(t[Nn](Pt, jy), n, i, e) }

								function s(t) { return zt[av](t + Ln) }

								function o() {
									function t(i, r) { return n[Vr](i += er) > z[Ty] && delete t[n[Im]()], t[i] = r } var n = []; return t }

								function c(t) { return t[X] = !u, t }

								function f(t) { var n = U[tt](lt); try { return !!t(n) } catch(t) { return !r } finally { n[zv] && n[zv][dn](n), n = N } }

								function l(t, n, i) { t = t[bn](mv); for(var r, e = t[Y], s = i ? N : n; e--;)(r = z[Ay][t[e]]) && r !== n || (z[Ay][t[e]] = s) }

								function h(t, n) { var i = t[Sy](n); return i && i[Dy] ? i[Lv] : !u === t[n] ? n[zi]() : N }

								function v(t, n) { return t[rv](n, Dh === n[zi]() ? r : Oc) }

								function m(t) { return Bv === t[dv][zi]() ? t[Vv] : i }

								function p(t, n) { var i = n && t,
										e = i && r === t[Rh] && r === n[Rh] && (~n[Hy] || ft) - (~t[Hy] || ft); if(e) return e; if(i)
										for(; i = i[Ry];)
											if(i === n) return -r; return t ? r : -r }

								function d(t) { return c(function(n) { return n = +n, c(function(i, r) { for(var e, s = t([], i[Y], n), a = s[Y]; a--;) i[e = s[a]] && (i[e] = !(r[e] = i[e])) }) }) }

								function g(t, n) { var i, s, a, o, c, f, l, h = et[t + er]; if(h) return n ? u : h[tm](u); for(c = t, f = [], l = z[Fy]; c;) {
										(!i || (s = jt[Nv](c))) && (s && (c = c[tm](s[u][Y]) || c), f[Vr](a = [])), i = !r, (s = Tt[Nv](c)) && (i = s[Im](), a[Vr]({ value: i, type: s[u][Nn](Pt, er) }), c = c[tm](i[Y])); for(o in z[hv]) !(s = Rt[o][Nv](c)) || l[o] && !(s = l[o](s)) || (i = s[Im](), a[Vr]({ value: i, type: o, matches: s }), c = c[tm](i[Y])); if(!i) break } return n ? c[Y] : c ? e[V](t) : et(t, f)[tm](u) }

								function w(t) { for(var n = u, i = t[Y], r = Ln; i > n; n++) r += t[n][Lv]; return r }

								function x(t, n, i) { var e = n[zy],
										s = i && zv === e,
										a = G++; return n[Oy] ? function(n, i, a) { for(; n = n[e];)
											if(r === n[Rh] || s) return t(n, i, a) } : function(n, i, o) { var c, f, l, h = Z + er + a; if(o) { for(; n = n[e];)
												if((r === n[Rh] || s) && t(n, i, o)) return !u } else
											for(; n = n[e];)
												if(r === n[Rh] || s)
													if(l = n[X] || (n[X] = {}), (f = l[e]) && f[u] === h) { if(!u === (c = f[r]) || c === F) return !u === c } else if(f = l[e] = [h], f[r] = t(n, i, o) || F, !u === f[r]) return !u } }

								function C(t) { return t[Y] > r ? function(n, i, e) { for(var s = t[Y]; s--;)
											if(!t[s](n, i, e)) return !r; return !u } : t[u] }

								function b(t, n, i, r, e) { for(var s, a = [], o = u, c = t[Y], f = N != n; c > o; o++)(s = t[o]) && (!i || i(s, r, e)) && (a[Vr](s), f && n[Vr](o)); return a }

								function k(t, n, i, e, s, a) { return e && !e[X] && (e = k(e)), s && !s[X] && (s = k(s, a)), c(function(a, u, o, c) { var f, l, h, v = [],
											m = [],
											p = u[Y],
											d = a || T(n || Yv, o[Rh] ? [o] : o, []),
											y = !t || !a && n ? d : b(d, v, t, o, c),
											g = i ? s || (a ? t : p || e) ? [] : u : y; if(i && i(y, g, o, c), e)
											for(f = b(g, m), e(f, [], o, c), l = f[Y]; l--;)(h = f[l]) && (g[m[l]] = !(y[m[l]] = h)); if(a) { if(s || t) { if(s) { for(f = [], l = g[Y]; l--;)(h = g[l]) && f[Vr](y[l] = h);
													s(N, g = [], f, c) } for(l = g[Y]; l--;)(h = g[l]) && (f = s ? gt[Ah](a, h) : v[l]) > -r && (a[f] = !(u[f] = h)) } } else g = b(g === u ? g[Od](p, g[Y]) : g), s ? s(N, u, g, c) : dt[Rd](u, g) }) }

								function P(t) { for(var n, i, e, s = t[Y], a = z[qy][t[u][Dh]], o = a || z[qy][er], c = a ? r : u, f = x(function(t) { return t === n }, o, !u), l = x(function(t) { return gt[Ah](n, t) > -r }, o, !u), h = [function(t, i, r) { return !a && (r || i !== M) || ((n = i)[Rh] ? f(t, i, r) : l(t, i, r)) }]; s > c; c++)
										if(i = z[qy][t[c][Dh]]) h = [x(C(h), i)];
										else { if(i = z[hv][t[c][Dh]][Rd](N, t[c][$y]), i[X]) { for(e = ++c; s > e && !z[qy][t[e][Dh]]; e++); return k(c > r && C(h), c > r && w(t[tm](u, c - r)[Kh]({ value: er === t[c - Oc][Dh] ? Yv : Ln }))[Nn](Pt, jy), i, e > c && P(t[tm](c, e)), s > e && P(t = t[tm](e)), s > e && w(t)) } h[Vr](i) }
									return C(h) }

								function j(n, i) { var s = u,
										a = i[Y] > u,
										o = n[Y] > u,
										f = function(c, f, l, h, v) { var m, p, d, y = [],
												g = u,
												w = My,
												x = c && [],
												C = N != v,
												k = M,
												P = c || o && z[Cv][By](Yv, v && f[zv] || f),
												j = Z += N == k ? r : t[om][$d]() || Ey; for(C && (M = f !== U && f, F = s); N != (m = P[w]); w++) { if(o && m) { for(p = u; d = n[p++];)
														if(d(m, f, l)) { h[Vr](m); break }
													C && (Z = j, F = ++s) } a && ((m = !d && m) && g--, c && x[Vr](m)) } if(g += w, a && w !== g) { for(p = u; d = i[p++];) d(x, y, f, l); if(c) { if(g > u)
														for(; w--;) x[w] || y[w] || (y[w] = mt[Ah](h));
													y = b(y) } dt[Rd](h, y), C && !c && y[Y] > u && g + i[Y] > r && e[Uy](h) } return C && (Z = j, M = k), x }; return a ? c(f) : f }

								function T(t, n, i) { for(var r = u, s = n[Y]; s > r; r++) e(t, n[r], i); return i }

								function A(t, n, i, e) { var s, a, o, c, f, l = g(t); if(!e && r === l[Y]) { if(a = l[u] = l[u][tm](u), a[Y] > Oc && Ly === (o = a[u])[Dh] && R[Iy] && rd === n[Rh] && I && z[qy][a[r][Dh]]) { if(!(n = (z[Cv][Ly](o[$y][u][Nn](Bt, Et), n) || [])[u])) return i;
											t = t[tm](a[Im]()[Lv][Y]) } for(s = Rt[Qy][av](t) ? u : a[Y]; s-- && (o = a[s], !z[qy][c = o[Dh]]);)
											if((f = z[Cv][c]) && (e = f(o[$y][u][Nn](Bt, Et), At[av](a[u][Dh]) && n[zv] || n))) { if(a[Od](s, r), !(t = e[Y] && w(a))) return dt[Rd](i, e), i; break } } return $(t, l)(e, n, !I, i, At[av](t)), i }

								function S() {}
								var H, R, F, z, O, q, $, M, B, E, U, L, I, Q, W, J, K, X = Wy + -new t[mn],
									_ = n[nt],
									Z = u,
									G = u,
									it = o(),
									et = o(),
									at = o(),
									ut = !r,
									ot = function() { return u },
									ct = void 0 === i ? Wh : a()(i),
									ft = r << 31,
									ht = {}[fd],
									vt = [],
									mt = vt[Uh],
									pt = vt[Vr],
									dt = vt[Vr],
									yt = vt[tm],
									gt = vt[di] || function(t) { for(var n = u, i = this[Y]; i > n; n++)
											if(this[n] === t) return n; return -r },
									wt = Vy,
									xt = Yy,
									Ct = Ky,
									Nt = Ct[Nn](Xy, _y),
									bt = Zy + xt + Gy + Ct + tg + xt + ng + xt + ig + Nt + rg + xt + eg,
									kt = sg + Ct + ag + bt[Nn](af, Wn) + ug,
									Pt = t[og](cg + xt + fg + xt + lg, hg),
									jt = t[og](cg + xt + vg + xt + Yv),
									Tt = t[og](cg + xt + mg + xt + tg + xt + Yv),
									At = t[og](xt + pg),
									St = t[og](vr + xt + dg + xt + eg, hg),
									Dt = t[og](kt),
									Ht = t[og](cg + Nt + ud),
									Rt = { ID: t[og](yg + Ct + tg), CLASS: t[og](gg + Ct + tg), TAG: t[og](wg + Ct[Nn](Xy, xg) + tg), ATTR: t[og](cg + bt), PSEUDO: t[og](cg + kt), CHILD: t[og](Cg + xt + Ng + xt + bg + xt + kg + xt + Pg, jg), bool: t[og](Tg + wt + Ag, jg), needsContext: t[og](cg + xt + Sg + xt + Dg + xt + Hg, jg) },
									zt = /^[^{]+\{\s*\[native \w/,
									Ot = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
									qt = /^(?:input|select|textarea|button)$/i,
									$t = /^h\d$/i,
									Mt = /'|\\/g,
									Bt = t[og](Rg + xt + Fg + xt + zg, Og),
									Et = function(n, i, r) { var e = qg + i - 65536; return e !== e || r ? i : u > e ? t[y][Mg](e + 65536) : t[y][Mg](55296 | e >> 10, 56320 | 1023 & e) };
								try { dt[Rd](vt = yt[Ah](_[Xv]), _[Xv]), vt[_[Xv][Y]][Rh] } catch(n) { dt = { apply: vt[Y] ? function(t, n) { pt[Rd](t, yt[Ah](n)) } : function(t, n) { for(var i = t[Y], e = u; t[i++] = n[e++];);
											t[Y] = i - r } } } q = e[Ig] = function(t) { var n = t && (t[wv] || t)[Tm]; return !!n && Qg !== n[dv] }, R = e[tv] = {}, E = e[Wg] = function(n) { var e = n ? n[wv] || n : _,
										o = e[sd]; return e !== U && rd === e[Rh] && e[Tm] ? (U = e, L = e[Tm], I = !q(e), o && o[my] && o[vy](Jg, function() { E() }), R[Vg] = f(function(t) { return t[$v] = Yg, l(Kg, v, jn === t[yv][rv](kn)), l(wt, h, N == t[rv](Xg)), t[rt] = jg, !t[rv](rt) }), R[Bv] = f(function(t) { return t[$v] = _g, t[yv][D](Lv, Ln), Ln === t[yv][rv](Lv) }), l(Lv, m, R[Vg] && R[Bv]), R[Xa] = f(function(t) { return t[st](e[Zg](Ln)), !t[Xa](Yv)[Y] }), R[Wr] = f(function(t) { return t[$v] = Gg, t[yv][rt] = jg, Oc === t[Wr](jg)[Y] }), R[Iy] = f(function(t) { return L[st](t)[Pd] = X, !e[tw] || !e[tw](X)[Y] }), R[Iy] ? (z[Cv][Ly] = function(t, n) { if(a()(n[Ki]) !== ct && I) { var i = n[Ki](t); return i && i[zv] ? [i] : [] } }, z[hv][Ly] = function(t) { var n = t[Nn](Bt, Et); return function(t) { return t[rv](Pd) === n } }) : (delete z[Cv][Ly], z[hv][Ly] = function(t) { var n = t[Nn](Bt, Et); return function(t) { var i = a()(t[Sy]) !== ct && t[Sy](Pd); return i && i[Lv] === n } }), z[Cv][By] = R[Xa] ? function(t, n) { return a()(n[Xa]) !== ct ? n[Xa](t) : i } : function(t, n) { var i, e = [],
											s = u,
											a = n[Xa](t); if(Yv === t) { for(; i = a[s++];) r === i[Rh] && e[Vr](i); return e } return a }, z[Cv][nw] = R[Wr] && function(t, n) { return a()(n[Wr]) !== ct && I ? n[Wr](t) : i }, W = [], Q = [], (R[xy] = s(e[Kv])) && (f(function(t) { t[$v] = iw, t[Kv](rw)[Y] || Q[Vr](Zy + xt + ew + wt + tg), t[Kv](sw)[Y] || Q[Vr](sw) }), f(function(t) { var n = e[tt](Bv);
										n[D](Dh, Vp), t[st](n)[D](_r, Ln), t[Kv](aw)[Y] && Q[Vr](uw + xt + ow), t[Kv](cw)[Y] || Q[Vr](cw, fw), t[Kv](lw), Q[Vr](hw) })), (R[vw] = s(J = L[mw] || L[pw] || L[dw] || L[yw])) && f(function(t) { R[gw] = J[Ah](t, lt), J[Ah](t, ww), W[Vr](xw, kt) }), Q = Q[Y] && t[og](Q[ky](mv)), W = W[Y] && t[og](W[ky](mv)), K = s(L[em]) || L[Cw] ? function(t, n) { var i = rd === t[Rh] ? t[Tm] : t,
											e = n && n[zv]; return t === e || !(!e || r !== e[Rh] || !(i[em] ? i[em](e) : t[Cw] && 16 & t[Cw](e))) } : function(t, n) { if(n)
											for(; n = n[zv];)
												if(n === t) return !u; return !r }, R[bw] = f(function(t) { return r & t[Cw](e[tt](lt)) }), ot = L[Cw] ? function(t, n) { if(t === n) return ut = !u, u; var i = n[Cw] && t[Cw] && t[Cw](n); return i ? r & i || !R[bw] && n[Cw](t) === i ? t === e || K(_, t) ? -r : n === e || K(_, n) ? r : B ? gt[Ah](B, t) - gt[Ah](B, n) : u : hm & i ? -r : r : t[Cw] ? -r : r } : function(t, n) { var i, s = u,
											a = t[zv],
											o = n[zv],
											c = [t],
											f = [n]; if(t === n) return ut = !u, u; if(!a || !o) return t === e ? -r : n === e ? r : a ? -r : o ? r : B ? gt[Ah](B, t) - gt[Ah](B, n) : u; if(a === o) return p(t, n); for(i = t; i = i[zv];) c[Mm](i); for(i = n; i = i[zv];) f[Mm](i); for(; c[s] === f[s];) s++; return s ? p(c[s], f[s]) : c[s] === _ ? -r : f[s] === _ ? r : u }, e) : U }, e[$y] = function(t, n) { return e(t, N, N, n) }, e[vw] = function(t, n) { if((t[wv] || t) !== U && E(t), n = n[Nn](St, kw), !(!R[vw] || !I || W && W[av](n) || Q && Q[av](n))) try { var i = J[Ah](t, n); if(i || R[gw] || t[nt] && 11 !== t[nt][Rh]) return i } catch(t) {}
									return e(n, U, N, [t])[Y] > u }, e[em] = function(t, n) { return(t[wv] || t) !== U && E(t), K(t, n) }, e[xv] = function(t, n) {
									(t[wv] || t) !== U && E(t); var r = z[Ay][n[zi]()],
										e = r && ht[Ah](z[Ay], n[zi]()) ? r(t, n, !I) : i; return e === i ? R[Vg] || !I ? t[rv](n) : (e = t[Sy](n)) && e[Dy] ? e[Lv] : N : e }, e[V] = function(n) { throw t[Vd](jw + n) }, e[Uy] = function(t) { var n, i = [],
										e = u,
										s = u; if(ut = !R[Tw], B = !R[Aw] && t[tm](u), t[zd](ot), ut) { for(; n = t[s++];) n === t[s] && (e = i[Vr](s)); for(; e--;) t[Od](i[e], r) } return t }, O = e[Sw] = function(t) { var n, i = Ln,
										e = u,
										s = t[Rh]; if(s) { if(r === s || rd === s || 11 === s) { if(Eh == typeof t[Dw]) return t[Dw]; for(t = t[yv]; t; t = t[Ry]) i += O(t) } else if(af === s || hm === s) return t[Hw] } else
										for(; n = t[e]; e++) i += O(n); return i }, z = e[Rw] = { cacheLength: 50, createPseudo: c, match: Rt, attrHandle: {}, find: {}, relative: { ">": { dir: zv, first: !u }, " ": { dir: zv }, "+": { dir: Fw, first: !u }, "~": { dir: Fw } }, preFilter: { ATTR: function(t) { return t[r] = t[r][Nn](Bt, Et), t[af] = (t[hm] || t[5] || Ln)[Nn](Bt, Et), Ow === t[Oc] && (t[af] = er + t[af] + er), t[tm](u, hm) }, CHILD: function(t) { return t[r] = t[r][zi](), qw === t[r][tm](u, af) ? (t[af] || e[V](t[u]), t[hm] = +(t[hm] ? t[5] + (t[6] || r) : Oc * (Mw === t[af] || Bw === t[af])), t[5] = +(t[7] + t[Wn] || Bw === t[af])) : t[af] && e[V](t[u]), t }, PSEUDO: function(t) { var n, r = !t[5] && t[Oc]; return Rt[Uw][av](t[u]) ? N : (t[af] && t[hm] !== i ? t[Oc] = t[hm] : r && Dt[av](r) && (n = g(r, !u)) && (n = r[di](tg, r[Y] - n) - r[Y]) && (t[u] = t[u][tm](u, n), t[Oc] = r[tm](u, n)), t[tm](u, af)) } }, filter: { TAG: function(t) { var n = t[Nn](Bt, Et)[zi](); return Yv === t ? function() { return !u } : function(t) { return t[dv] && t[dv][zi]() === n } }, CLASS: function(n) { var i = it[n + er]; return i || (i = t[og](Lw + xt + tg + n + Iw + xt + Qw)) && it(n, function(t) { return i[av](Eh == typeof t[rt] && t[rt] || a()(t[rv]) !== ct && t[rv](Ww) || Ln) }) }, ATTR: function(t, n, i) { return function(s) { var a = e[xv](s, t); return N == a ? xw === n : !n || (a += Ln, vr === n ? a === i : xw === n ? a !== i : Jw === n ? i && u === a[di](i) : Vw === n ? i && a[di](i) > -r : Yw === n ? i && a[tm](-i[Y]) === i : Ow === n ? (er + a + er)[di](i) > -r : Kw === n && (a === i || a[tm](u, i[Y] + r) === i + Xw)) } }, CHILD: function(t, n, i, e, s) { var a = qw !== t[tm](u, af),
												o = xl !== t[tm](-hm),
												c = _w === n; return r === e && u === s ? function(t) { return !!t[zv] } : function(n, i, f) { var l, h, v, m, p, d, y = a !== o ? Ry : Fw,
													g = n[zv],
													w = c && n[dv][zi](),
													x = !f && !c; if(g) { if(a) { for(; y;) { for(v = n; v = v[y];)
																if(c ? v[dv][zi]() === w : r === v[Rh]) return !r;
															d = y = Zw === t && !d && Ry } return !u } if(d = [o ? g[yv] : g[Gw]], o && x) { for(h = g[X] || (g[X] = {}), l = h[t] || [], p = l[u] === Z && l[r], m = l[u] === Z && l[Oc], v = p && g[Xv][p]; v = ++p && v && v[y] || (m = p = u) || d[Uh]();)
															if(r === v[Rh] && ++m && v === n) { h[t] = [Z, p, m]; break } } else if(x && (l = (n[X] || (n[X] = {}))[t]) && l[u] === Z) m = l[r];
													else
														for(;
															(v = ++p && v && v[y] || (m = p = u) || d[Uh]()) && ((c ? v[dv][zi]() !== w : r !== v[Rh]) || !++m || (x && ((v[X] || (v[X] = {}))[t] = [Z, m]), v !== n));); return(m -= s) === e || u == m % e && m / e >= u } } }, PSEUDO: function(t, n) { var i, s = z[tx][t] || z[nx][t[zi]()] || e[V](ix + t); return s[X] ? s(n) : s[Y] > r ? (i = [t, t, Ln, n], z[nx][fd](t[zi]()) ? c(function(t, i) { for(var r, e = s(t, n), a = e[Y]; a--;) r = gt[Ah](t, e[a]), t[r] = !(i[r] = e[a]) }) : function(t) { return s(t, u, i) }) : s } }, pseudos: { not: c(function(t) { var n = [],
												i = [],
												r = $(t[Nn](Pt, jy)); return r[X] ? c(function(t, n, i, e) { for(var s, a = r(t, N, e, []), u = t[Y]; u--;)(s = a[u]) && (t[u] = !(n[u] = s)) }) : function(t, e, s) { return n[u] = t, r(n, N, s, i), !i[Uh]() } }), has: c(function(t) { return function(n) { return e(t, n)[Y] > u } }), contains: c(function(t) { return function(n) { return(n[Dw] || n[rx] || O(n))[di](t) > -r } }), lang: c(function(t) { return Ht[av](t || Ln) || e[V](ex + t), t = t[Nn](Bt, Et)[zi](),
												function(n) { var i;
													do { if(i = I ? n[sx] : n[rv](ax) || n[rv](sx)) return(i = i[zi]()) === t || u === i[di](t + Xw) } while ((n = n[zv]) && r === n[Rh]); return !r } }), target: function(t) { var i = n[Pn] && n[Pn][ux]; return i && i[tm](r) === t[Pd] }, root: function(t) { return t === L }, focus: function(t) { return t === U[cv] && (!U[ox] || U[ox]()) && !!(t[Dh] || t[kn] || ~t[cx]) }, enabled: function(t) { return !r === t[Xg] }, disabled: function(t) { return !u === t[Xg] }, checked: function(t) { var n = t[dv][zi](); return Bv === n && !!t[Uv] || Iv === n && !!t[Wv] }, selected: function(t) { return t[zv] && t[zv][fx], !u === t[Wv] }, empty: function(t) { for(t = t[yv]; t; t = t[Ry])
												if(t[dv] > _d || af === t[Rh] || hm === t[Rh]) return !r; return !u }, parent: function(t) { return !z[tx][$p](t) }, header: function(t) { return $t[av](t[dv]) }, input: function(t) { return qt[av](t[dv]) }, button: function(t) { var n = t[dv][zi](); return Bv === n && lx === t[Dh] || lx === n }, text: function(t) { var n; return Bv === t[dv][zi]() && Fv === t[Dh] && (N == (n = t[rv](Dh)) || n[zi]() === t[Dh]) }, first: d(function() { return [u] }), last: d(function(t, n) { return [n - r] }), eq: d(function(t, n, i) { return [u > i ? i + n : i] }), even: d(function(t, n) { for(var i = u; n > i; i += Oc) t[Vr](i); return t }), odd: d(function(t, n) { for(var i = r; n > i; i += Oc) t[Vr](i); return t }), lt: d(function(t, n, i) { for(var r = u > i ? i + n : i; --r >= u;) t[Vr](r); return t }), gt: d(function(t, n, i) { for(var r = u > i ? i + n : i; n > ++r;) t[Vr](r); return t }) } };
								for(H in { radio: !u, checkbox: !u, file: !u, password: !u, image: !u }) z[tx][H] = function(t) { return function(n) { return Bv === n[dv][zi]() && n[Dh] === t } }(H);
								for(H in { submit: !u, reset: !u }) z[tx][H] = function(t) { return function(n) { var i = n[dv][zi](); return(Bv === i || lx === i) && n[Dh] === t } }(H);
								$ = e[hx] = function(t, n) { var i, r = [],
											e = [],
											s = at[t + er]; if(!s) { for(n || (n = g(t)), i = n[Y]; i--;) s = P(n[i]), s[X] ? r[Vr](s) : e[Vr](s);
											s = at(t, j(e, r)) } return s }, z[tx][qw] = z[tx][Fd], S[nd] = z[vx] = z[tx], z[nx] = new S, R[Aw] = X[bn](Ln)[zd](ot)[ky](Ln) === X, E(), [u, u][zd](ot), R[Tw] = ut,
									Ft[Cv] = e, Ft[mx] = e[Rw], Ft[mx][px] = Ft[mx][tx], Ft[dx] = e[Uy], Ft[Fv] = e[Sw], Ft[yx] = e[Ig], Ft[em] = e[em]
							}(i);
						var Yt = {};
						Ft[gx] = function(t) { t = Eh == typeof t ? Yt[t] || f(t) : Ft[Jh]({}, t); var n, i, e, s, a, c, l = [],
								h = !t[wx] && [],
								v = function o(f) { for(i = t[xx] && f, e = !u, a = c || u, c = u, s = l[Y], n = !u; l && s > a; a++)
										if(!r === l[a][Rd](f[u], f[r]) && t[Cx]) { i = !r; break }
									n = !r, l && (h ? h[Y] && o(h[Im]()) : i ? l = [] : m[Nx]()) },
								m = { add: function() { if(l) { var r = l[Y];
											(function n(i) { Ft[qh](i, function(i, r) { var e = Ft[Dh](r);
													zh === e ? t[dx] && m[bx](r) || l[Vr](r) : r && r[Y] && Eh !== e && n(r) }) })(arguments), n ? s = l[Y] : i && (c = r, v(i)) } return this }, remove: function() { return l && Ft[qh](arguments, function(t, i) { for(var e;
												(e = Ft[vv](i, l, e)) > -r;) l[Od](e, r), n && (s >= e && s--, a >= e && a--) }), this }, has: function(t) { return t ? Ft[vv](t, l) > -r : !(!l || !l[Y]) }, empty: function() { return l = [], s = u, this }, disable: function() { return l = h = i = o, this }, disabled: function() { return !l }, lock: function() { return h = o, i || m[Nx](), this }, locked: function() { return !h }, fireWith: function(t, i) { return i = i || [], i = [t, i[tm] ? i[tm]() : i], !l || e && !h || (n ? h[Vr](i) : v(i)), this }, fire: function() { return m[kx](this, arguments), this }, fired: function() { return !!e } }; return m }, Ft[Jh]({ Deferred: function(t) { var n = [
										[Px, Ap, Ft[gx](jx), Tx],
										[Ax, Tp, Ft[gx](jx), Sx],
										[Dx, Sp, Ft[gx](xx)]
									],
									i = Hx,
									e = { state: function() { return i }, always: function() { return s[Ap](arguments)[Tp](arguments), this }, then: function() { var t = arguments; return Ft[op](function(i) { Ft[qh](n, function(n, a) { var o = a[u],
														c = Ft[fv](t[n]) && t[n];
													s[a[r]](function() { var t = c && c[Rd](this, arguments);
														t && Ft[fv](t[dp]) ? t[dp]()[Ap](i[Px])[Tp](i[Ax])[Sp](i[Dx]) : i[o + Rx](this === e ? i[dp]() : this, c ? [t] : arguments) }) }), t = N })[dp]() }, promise: function(t) { return N != t ? Ft[Jh](t, e) : e } },
									s = {}; return e[Fx] = e[Cc], Ft[qh](n, function(t, a) { var o = a[Oc],
										c = a[af];
									e[a[r]] = o[Sv], c && o[Sv](function() { i = c }, n[r ^ t][Oc][Nx], n[Oc][Oc][zx]), s[a[u]] = function() { return s[a[u] + Rx](this === s ? e : this, arguments), this }, s[a[u] + Rx] = o[kx] }), e[dp](s), t && t[Ah](s, s), s }, when: function(n) { var i, e, s, a = u,
									o = At[Ah](arguments),
									c = o[Y],
									f = r !== c || n && Ft[fv](n[dp]) ? c : u,
									l = r === f ? n : Ft[op](),
									h = function(t, n, e) { return function(s) { n[t] = this, e[t] = arguments[Y] > r ? At[Ah](arguments) : s, e === i ? l[mp](n, e) : --f || l[pp](n, e) } }; if(c > r)
									for(i = t[Ld](c), e = t[Ld](c), s = t[Ld](c); c > a; a++) o[a] && Ft[fv](o[a][dp]) ? o[a][dp]()[Ap](h(a, s, o))[Tp](l[Ax])[Sp](h(a, e, i)) : --f; return f || l[pp](s, o), l[dp]() } }), Ft[tv] = function(n) { var e, s, o, c, f, l, h, v, m, p = wt[tt](lt); if(p[D](rt, _r), p[$v] = Ox, e = p[Xa](Yv) || [], !(s = p[Xa](Er)[u]) || !s[sm] || !e[Y]) return n;
							c = wt[tt](qx), l = c[st](wt[tt](Iv)), o = p[Xa](Bv)[u], s[sm][Pm] = $x, n[Mx] = _r !== p[rt], n[Bx] = af === p[yv][Rh], n[gv] = !p[Xa](gv)[Y], n[Ex] = !!p[Xa](Ux)[Y], n[sm] = /top/ [av](s[rv](sm)), n[Lx] = Ix === s[rv](kn), n[id] = /^0.5/ [av](s[sm][id]), n[Qx] = !!s[sm][Qx], n[Wx] = !!o[Lv], n[Jx] = l[Wv], n[Vx] = !!wt[tt](Yx)[Vx], n[qv] = Kx !== wt[tt](_x)[Xx](!u)[Ov], n[Qp] = !r, n[Yp] = !r, n[Zx] = !r, n[Gh] = !u, n[Hv] = !u, n[Gx] = !u, n[Cm] = !u, o[Uv] = !u, n[tC] = o[Xx](!u)[Uv], c[Xg] = !u, n[nC] = !l[Xg]; try { delete p[av] } catch(t) { n[Gh] = !r } o = wt[tt](Bv), o[D](Lv, Ln), n[Bv] = Ln === o[rv](Lv), o[Lv] = _r, o[D](Dh, iC), n[rC] = _r === o[Lv], o[D](Uv, _r), o[D](eC, _r), f = wt[pv](), f[st](o), n[sC] = o[Uv], n[aC] = f[Xx](!u)[Xx](!u)[Gw][Uv], p[vy] && (p[vy](uC, function() { n[Hv] = !r }), p[Xx](!u)[oC]()); for(m in { submit: !u, change: !u, focusin: !u }) p[D](h = K + m, _r), n[m + cC] = h in i || !r === p[Vg][h][Mh];
							p[sm][fC] = lC, p[Xx](!u)[sm][fC] = Ln, n[hC] = lC === p[sm][fC]; for(m in Ft(n)) break; return n[Jd] = My !== m, Ft(function() { var e, s, o, c = vC,
									f = wt[Xa](pr)[u];
								f && (e = wt[tt](lt), e[sm][Pm] = mC, f[st](e)[st](p), p[$v] = pC, o = p[Xa](nf), o[u][sm][Pm] = dC, v = u === o[u][gm], o[u][sm][rm] = Ln, o[r][sm][rm] = nm, n[yC] = v && u === o[u][gm], p[$v] = Ln, p[sm][Pm] = gC, Ft[wC](f, N != f[sm][Wp] ? { zoom: r } : {}, function() { n[wm] = hm === p[ym] }), i[xC] && (n[Zx] = CC !== (i[xC](p, N) || {})[NC], n[Cm] = bC === (i[xC](p, N) || { width: bC })[vm], s = p[st](wt[tt](lt)), s[sm][Pm] = p[sm][Pm] = c, s[sm][kC] = s[sm][vm] = My, p[sm][vm] = PC, n[Gx] = !t[Nm]((i[xC](s, N) || {})[kC])), a()(p[sm][Wp]) !== yt && (p[$v] = Ln, p[sm][Pm] = c + jC, n[Qp] = af === p[ym], p[sm][rm] = TC, p[$v] = AC, p[yv][sm][vm] = SC, n[Yp] = af !== p[ym], n[Qp] && (f[sm][Wp] = r)), f[dn](e), e = p = o = s = N) }), e = c = f = l = s = o = N, n }({});
						var Kt = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
							Xt = /([A-Z])/g;
						Ft[Jh]({ cache: {}, noData: { applet: !u, embed: !u, object: DC }, hasData: function(t) { return !!(t = t[Rh] ? Ft[Bh][t[Ft[Mh]]] : t[Ft[Mh]]) && !p(t) }, data: function(t, n, i) { return h(t, n, i) }, removeData: function(t, n) { return v(t, n) }, _data: function(t, n, i) { return h(t, n, i, !u) }, _removeData: function(t, n) { return v(t, n, !u) }, acceptData: function(t) { if(t[Rh] && r !== t[Rh] && rd !== t[Rh]) return !r; var n = t[dv] && Ft[HC][t[dv][zi]()]; return !n || !u !== n && t[rv](RC) === n } }), Ft[ld][Jh]({ data: function(t, n) { var i, e, s = N,
									c = u,
									f = this[u]; if(t === o) { if(this[Y] && (s = Ft[Pc](f), r === f[Rh] && !Ft[kv](f, FC))) { for(i = f[Vg]; i[Y] > c; c++) e = i[c][eC], u === e[di](nv) && (e = Ft[Vh](e[tm](5)), m(f, e, s[e]));
										Ft[kv](f, FC, !u) } return s } return Qh == (void 0 === t ? Wh : a()(t)) ? this[qh](function() { Ft[Pc](this, t) }) : arguments[Y] > r ? this[qh](function() { Ft[Pc](this, t, n) }) : f ? m(f, t, Ft[Pc](f, t)) : N }, removeData: function(t) { return this[qh](function() { Ft[zC](this, t) }) } }), Ft[Jh]({ queue: function(t, n, i) { var r; return t ? (n = (n || Pp) + jp, r = Ft[kv](t, n), i && (!r || Ft[Yh](i) ? r = Ft[kv](t, n, Ft[Ad](i)) : r[Vr](i)), r || []) : o }, dequeue: function(t, n) { n = n || Pp; var i = Ft[jp](t, n),
									r = i[Y],
									e = i[Im](),
									s = Ft[zp](t, n),
									a = function() { Ft[OC](t, n) };
								qC === e && (e = i[Im](), r--), e && (Pp === n && i[Mm](qC), delete s[$C], e[Ah](t, a, s)), !r && s && s[$p][qp]() }, _queueHooks: function(t, n) { var i = n + MC; return Ft[kv](t, i) || Ft[kv](t, i, { empty: Ft[gx](jx)[Sv](function() { Ft[Zp](t, n + jp), Ft[Zp](t, i) }) }) } }), Ft[ld][Jh]({ queue: function(t, n) { var i = Oc; return Eh != typeof t && (n = t, t = Pp, i--), i > arguments[Y] ? Ft[jp](this[u], t) : n === o ? this : this[qh](function() { var i = Ft[jp](this, t, n);
									Ft[zp](this, t), Pp === t && qC !== i[u] && Ft[OC](this, t) }) }, dequeue: function(t) { return this[qh](function() { Ft[OC](this, t) }) }, delay: function(n, i) { return n = Ft[Pp] ? Ft[Pp][BC][n] || n : n, i = i || Pp, this[jp](i, function(i, r) { var e = t[Kl](i, n);
									r[$C] = function() { t[Xr](e) } }) }, clearQueue: function(t) { return this[jp](t || Pp, []) }, promise: function(t, n) { var i, e = r,
									s = Ft[op](),
									a = this,
									u = this[Y],
									c = function() {--e || s[pp](a, [a]) }; for(Eh != typeof t && (n = t, t = o), t = t || Pp; u--;)(i = Ft[kv](a[u], t + MC)) && i[$p] && (e++, i[$p][Sv](c)); return c(), s[dp](n) } });
						var _t, Zt, Gt = /[\t\r\n\f]/g,
							tn = /\r/g,
							nn = /^(?:input|select|textarea|button|object)$/i,
							rn = /^(?:a|area)$/i,
							en = /^(?:checked|selected)$/i,
							sn = Ft[tv][Mx],
							an = Ft[tv][Bv];
						Ft[ld][Jh]({ attr: function(t, n) { return Ft[hy](this, Ft[xv], t, n, arguments[Y] > r) }, removeAttr: function(t) { return this[qh](function() { Ft[EC](this, t) }) }, prop: function(t, n) { return Ft[hy](this, Ft[UC], t, n, arguments[Y] > r) }, removeProp: function(t) { return t = Ft[LC][t] || t, this[qh](function() { try { this[t] = o, delete this[t] } catch(t) {} }) }, addClass: function(t) { var n, i, e, s, a, o = u,
									c = this[Y],
									f = Eh == typeof t && t; if(Ft[fv](t)) return this[qh](function(n) { Ft(this)[IC](t[Ah](this, n, this[rt])) }); if(f)
									for(n = (t || Ln)[gi](Ot) || []; c > o; o++)
										if(i = this[o], e = r === i[Rh] && (i[rt] ? (er + i[rt] + er)[Nn](Gt, er) : er)) { for(a = u; s = n[a++];) u > e[di](er + s + er) && (e += s + er);
											i[rt] = Ft[Mv](e) }
								return this }, removeClass: function(t) { var n, i, e, s, a, o = u,
									c = this[Y],
									f = u === arguments[Y] || Eh == typeof t && t; if(Ft[fv](t)) return this[qh](function(n) { Ft(this)[QC](t[Ah](this, n, this[rt])) }); if(f)
									for(n = (t || Ln)[gi](Ot) || []; c > o; o++)
										if(i = this[o], e = r === i[Rh] && (i[rt] ? (er + i[rt] + er)[Nn](Gt, er) : Ln)) { for(a = u; s = n[a++];)
												for(; e[di](er + s + er) >= u;) e = e[Nn](er + s + er, er);
											i[rt] = t ? Ft[Mv](e) : Ln }
								return this }, toggleClass: function(t, n) { var i = void 0 === t ? Wh : a()(t),
									e = qd == typeof n; return Ft[fv](t) ? this[qh](function(i) { Ft(this)[WC](t[Ah](this, i, this[rt], n), n) }) : this[qh](function() { if(Eh === i)
										for(var s, a = u, o = Ft(this), c = n, f = t[gi](Ot) || []; s = f[a++];) c = e ? c : !o[JC](s), o[c ? IC : QC](s);
									else(i === yt || qd === i) && (this[rt] && Ft[kv](this, VC, this[rt]), this[rt] = this[rt] || !r === t ? Ln : Ft[kv](this, VC) || Ln) }) }, hasClass: function(t) { for(var n = er + t + er, i = u, e = this[Y]; e > i; i++)
									if(r === this[i][Rh] && (er + this[i][rt] + er)[Nn](Gt, er)[di](n) >= u) return !u; return !r }, val: function(t) { var n, i, e, s = this[u]; return arguments[Y] ? (e = Ft[fv](t), this[qh](function(n) { var s;
									r === this[Rh] && (s = e ? t[Ah](this, n, Ft(this)[YC]()) : t, N == s ? s = Ln : Oh == typeof s ? s += Ln : Ft[Yh](s) && (s = Ft[Xh](s, function(t) { return N == t ? Ln : t + Ln })), (i = Ft[KC][this[Dh]] || Ft[KC][this[dv][zi]()]) && XC in i && i[XC](this, s, Lv) !== o || (this[Lv] = s)) })) : s ? (i = Ft[KC][s[Dh]] || Ft[KC][s[dv][zi]()], i && Nc in i && (n = i[Nc](s, Lv)) !== o ? n : (n = s[Lv], Eh == typeof n ? n[Nn](tn, Ln) : N == n ? Ln : n)) : void 0 } }), Ft[Jh]({ valHooks: { option: { get: function(t) { var n = Ft[Cv][xv](t, Lv); return N != n ? n : t[Fv] } }, select: { get: function(t) { for(var n, i, e = t[A], s = t[fx], a = _C === t[Dh] || u > s, o = a ? N : [], c = a ? s + r : e[Y], f = u > s ? c : a ? s : u; c > f; f++)
											if(i = e[f], !(!i[Wv] && f !== s || (Ft[tv][nC] ? i[Xg] : N !== i[rv](Xg)) || i[zv][Xg] && Ft[dv](i[zv], ZC))) { if(n = Ft(i)[YC](), a) return n;
												o[Vr](n) }
										return o }, set: function(t, n) { for(var i, e, s = t[A], a = Ft[Ad](n), o = s[Y]; o--;) e = s[o], (e[Wv] = Ft[vv](Ft(e)[YC](), a) >= u) && (i = !u); return i || (t[fx] = -r), a } } }, attr: function(t, n, i) { var e, s, u = t[Rh]; if(t && af !== u && Wn !== u && Oc !== u) return a()(t[rv]) === yt ? Ft[UC](t, n, i) : (r === u && Ft[yx](t) || (n = n[zi](), e = Ft[GC][n] || (Ft[mx][gi][tN][av](n) ? Zt : _t)), i === o ? e && Nc in e && N !== (s = e[Nc](t, n)) ? s : (s = Ft[Cv][xv](t, n), N == s ? o : s) : N !== i ? e && XC in e && (s = e[XC](t, i, n)) !== o ? s : (t[D](n, i + Ln), i) : (Ft[EC](t, n), o)) }, removeAttr: function(t, n) { var i, e, s = u,
									a = n && n[gi](Ot); if(a && r === t[Rh])
									for(; i = a[s++];) e = Ft[LC][i] || i, Ft[mx][gi][tN][av](i) ? an && sn || !en[av](i) ? t[e] = !r : t[Ft[Vh](nN + i)] = t[e] = !r : Ft[xv](t, i, Ln), t[bv](sn ? i : e) }, attrHooks: { type: { set: function(t, n) { if(!Ft[tv][rC] && iC === n && Ft[dv](t, Bv)) { var i = t[Lv]; return t[D](Dh, n), i && (t[Lv] = i), n } } } }, propFix: { for: iN, class: rt }, prop: function(t, n, i) { var e, s, a, u = t[Rh]; if(t && af !== u && Wn !== u && Oc !== u) return a = r !== u || !Ft[yx](t), a && (n = Ft[LC][n] || n, s = Ft[rN][n]), i !== o ? s && XC in s && (e = s[XC](t, i, n)) !== o ? e : t[n] = i : s && Nc in s && N !== (e = s[Nc](t, n)) ? e : t[n] }, propHooks: { tabIndex: { get: function(n) { var i = Ft[Cv][xv](n, eN); return i ? t[sN](i, 10) : nn[av](n[dv]) || rn[av](n[dv]) && n[kn] ? u : -r } } } }), Zt = { set: function(t, n, i) { return !r === n ? Ft[EC](t, i) : an && sn || !en[av](i) ? t[D](!sn && Ft[LC][i] || i, i) : t[Ft[Vh](nN + i)] = t[i] = !u, i } }, Ft[qh](Ft[mx][gi][tN][hd][gi](/\w+/g), function(t, n) { var i = Ft[mx][Ay][n] || Ft[Cv][xv];
							Ft[mx][Ay][n] = an && sn || !en[av](n) ? function(t, n, r) { var e = Ft[mx][Ay][n],
									s = r ? o : (Ft[mx][Ay][n] = o) != i(t, n, r) ? n[zi]() : N; return Ft[mx][Ay][n] = e, s } : function(t, n, i) { return i ? o : t[Ft[Vh](nN + n)] ? n[zi]() : N } }), an && sn || (Ft[GC][Lv] = { set: function(t, n, i) { return Ft[dv](t, Bv) ? (t[Vv] = n, o) : _t && _t[XC](t, n, i) } }), sn || (_t = { set: function(t, n, i) { var r = t[Sy](i); return r || t[aN](r = t[wv][uN](i)), r[Lv] = n += Ln, Lv === i || n === t[rv](i) ? n : o } }, Ft[mx][Ay][Pd] = Ft[mx][Ay][eC] = Ft[mx][Ay][oN] = function(t, n, i) { var r; return i ? o : (r = t[Sy](n)) && Ln !== r[Lv] ? r[Lv] : N }, Ft[KC][lx] = { get: function(t, n) { var i = t[Sy](n); return i && i[Dy] ? i[Lv] : o }, set: _t[XC] }, Ft[GC][cN] = { set: function(t, n, i) { _t[XC](t, Ln !== n && n, i) } }, Ft[qh]([vm, Mp], function(t, n) { Ft[GC][n] = { set: function(t, i) { return Ln === i ? (t[D](n, b), i) : o } } })), Ft[tv][Lx] || Ft[qh]([kn, ln], function(t, n) { Ft[rN][n] = { get: function(t) { return t[rv](n, hm) } } }), Ft[tv][sm] || (Ft[GC][sm] = { get: function(t) { return t[sm][Pm] || o }, set: function(t, n) { return t[sm][Pm] = n + Ln } }), Ft[tv][Jx] || (Ft[rN][Wv] = { get: function(t) { var n = t[zv]; return n && (n[fx], n[zv] && n[zv][fx]), N } }), Ft[qh]([cx, fN, lN, hN, vN, mN, pN, dN, yN, gN], function() { Ft[LC][this[zi]()] = this }), Ft[tv][Vx] || (Ft[LC][Vx] = wN), Ft[qh]([iC, xN], function() { Ft[KC][this] = { set: function(t, n) { return Ft[Yh](n) ? t[Uv] = Ft[vv](Ft(t)[YC](), n) >= u : o } }, Ft[tv][Wx] || (Ft[KC][this][Nc] = function(t) { return N === t[rv](Lv) ? K : t[Lv] }) });
						var un = /^(?:input|select|textarea)$/i,
							on = /^key/,
							cn = /^(?:mouse|contextmenu)|click/,
							hn = /^(?:focusinfocus|focusoutblur)$/,
							vn = /^([^.]*)(?:\.(.+)|)$/;
						Ft[Dv] = { global: {}, add: function(t, n, i, e, s) { var c, f, l, h, v, m, p, d, y, g, w, x = Ft[kv](t); if(x) { for(i[CN] && (h = i, i = h[CN], s = h[Td]), i[Lh] || (i[Lh] = Ft[Lh]++), (f = x[Tv]) || (f = x[Tv] = {}), (m = x[Av]) || (m = x[Av] = function(t) { return(void 0 === Ft ? Wh : a()(Ft)) === yt || t && Ft[Dv][NN] === t[Dh] ? o : Ft[Dv][bN][Rd](m[cp], arguments) }, m[cp] = t), n = (n || Ln)[gi](Ot) || [Ln], l = n[Y]; l--;) c = vn[Nv](n[l]) || [], y = w = c[r], g = (c[Oc] || Ln)[bn](kN)[zd](), y && (v = Ft[Dv][PN][y] || {}, y = (s ? v[jN] : v[TN]) || y, v = Ft[Dv][PN][y] || {}, p = Ft[Jh]({ type: y, origType: w, data: e, handler: i, guid: i[Lh], selector: s, needsContext: s && Ft[mx][gi][Qy][av](s), namespace: g[ky](kN) }, h), (d = f[y]) || (d = f[y] = [], d[AN] = u, v[SN] && !r !== v[SN][Ah](t, e, g, m) || (t[gn] ? t[gn](y, m, !r) : t[vy] && t[vy](K + y, m))), v[Sv] && (v[Sv][Ah](t, p), p[CN][Lh] || (p[CN][Lh] = i[Lh])), s ? d[Od](d[AN]++, u, p) : d[Vr](p), Ft[Dv][DN][y] = !u);
									t = N } }, remove: function(n, i, e, s, a) { var o, c, f, l, h, v, m, p, d, y, g, w = Ft[jv](n) && Ft[kv](n); if(w && (v = w[Tv])) { for(i = (i || Ln)[gi](Ot) || [Ln], h = i[Y]; h--;)
										if(f = vn[Nv](i[h]) || [], d = g = f[r], y = (f[Oc] || Ln)[bn](kN)[zd](), d) { for(m = Ft[Dv][PN][d] || {}, d = (s ? m[jN] : m[TN]) || d, p = v[d] || [], f = f[Oc] && t[og](HN + y[ky](RN) + FN), l = o = p[Y]; o--;) c = p[o], !a && g !== c[zN] || e && e[Lh] !== c[Lh] || f && !f[av](c[ON]) || s && s !== c[Td] && (qN !== s || !c[Td]) || (p[Od](o, r), c[Td] && p[AN]--, m[zm] && m[zm][Ah](n, c));
											l && !p[Y] && (m[$N] && !r !== m[$N][Ah](n, y, w[Av]) || Ft[Rv](n, d, w[Av]), delete v[d]) } else
											for(d in v) Ft[Dv][zm](n, d + i[h], e, s, !u);
									Ft[_h](v) && (delete w[Av], Ft[Zp](n, Tv)) } }, trigger: function(n, e, s, c) { var f, l, h, v, m, p, d, y = [s || wt],
									g = Ht[Ah](n, Dh) ? n[Dh] : n,
									w = Ht[Ah](n, ON) ? n[ON][bn](kN) : []; if(h = p = s = s || wt, af !== s[Rh] && Wn !== s[Rh] && !hn[av](g + Ft[Dv][NN]) && (g[di](kN) >= u && (w = g[bn](kN), g = w[Im](), w[zd]()), l = u > g[di](px) && K + g, n = n[Ft[Mh]] ? n : new Ft[MN](g, Qh == (void 0 === n ? Wh : a()(n)) && n), n[BN] = c ? Oc : af, n[ON] = w[ky](kN), n[EN] = n[ON] ? t[og](HN + w[ky](RN) + FN) : N, n[UN] = o, n[LN] || (n[LN] = s), e = N == e ? [n] : Ft[Ad](e, [n]), m = Ft[Dv][PN][g] || {}, c || !m[Ed] || !r !== m[Ed][Rd](s, e))) { if(!c && !m[IN] && !Ft[Hh](s)) { for(v = m[jN] || g, hn[av](v + g) || (h = h[zv]); h; h = h[zv]) y[Vr](h), p = h;
										p === (s[wv] || wt) && y[Vr](p[ed] || p[sd] || i) } for(d = u;
										(h = y[d++]) && !n[QN]();) n[Dh] = d > r ? v : m[TN] || g, f = (Ft[kv](h, Tv) || {})[n[Dh]] && Ft[kv](h, Av), f && f[Rd](h, e), (f = l && h[l]) && Ft[$h](h) && f[Rd] && !r === f[Rd](h, e) && n[WN](); if(n[Dh] = g, !c && !n[JN]() && (!m[VN] || !r === m[VN][Rd](y[Uh](), e)) && Ft[$h](s) && l && s[g] && !Ft[Hh](s)) { p = s[l], p && (s[l] = N), Ft[Dv][NN] = g; try { s[g]() } catch(n) {} Ft[Dv][NN] = o, p && (s[l] = p) } return n[UN] } }, dispatch: function(t) { t = Ft[Dv][YN](t); var n, i, e, s, a, c = [],
									f = At[Ah](arguments),
									l = (Ft[kv](this, Tv) || {})[t[Dh]] || [],
									h = Ft[Dv][PN][t[Dh]] || {}; if(f[u] = t, t[KN] = this, !h[XN] || !r !== h[XN][Ah](this, t)) { for(c = Ft[Dv][_N][Ah](this, t, l), n = u;
										(s = c[n++]) && !t[QN]();)
										for(t[ZN] = s[cp], a = u;
											(e = s[_N][a++]) && !t[GN]();)(!t[EN] || t[EN][av](e[ON])) && (t[tb] = e, t[Pc] = e[Pc], (i = ((Ft[Dv][PN][e[zN]] || {})[Av] || e[CN])[Rd](s[cp], f)) !== o && !r === (t[UN] = i) && (t[WN](), t[nb]())); return h[ib] && h[ib][Ah](this, t), t[UN] } }, handlers: function(t, n) { var i, e, s, a, c = [],
									f = n[AN],
									l = t[LN]; if(f && l[Rh] && (!t[lx] || oC !== t[Dh]))
									for(; l != this; l = l[zv] || this)
										if(r === l[Rh] && (!u !== l[Xg] || oC !== t[Dh])) { for(s = [], a = u; f > a; a++) e = n[a], i = e[Td] + er, s[i] === o && (s[i] = e[Qy] ? Ft(i, this)[rb](l) >= u : Ft[Cv](i, this, N, [l])[Y]), s[i] && s[Vr](e);
											s[Y] && c[Vr]({ elem: l, handlers: s }) }
								return n[Y] > f && c[Vr]({ elem: this, handlers: n[tm](f) }), c }, fix: function(t) { if(t[Ft[Mh]]) return t; var n, i, r, e = t[Dh],
									s = t,
									a = this[eb][e]; for(a || (this[eb][e] = a = cn[av](e) ? this[sb] : on[av](e) ? this[ab] : {}), r = a[Np] ? this[Np][Kh](a[Np]) : this[Np], t = new Ft[MN](s), n = r[Y]; n--;) i = r[n], t[i] = s[i]; return t[LN] || (t[LN] = s[ub] || wt), af === t[LN][Rh] && (t[LN] = t[LN][zv]), t[ob] = !!t[ob], a[hv] ? a[hv](t, s) : t }, props: cb[bn](er), fixHooks: {}, keyHooks: { props: fb[bn](er), filter: function(t, n) { return N == t[lb] && (t[lb] = N != n[hb] ? n[hb] : n[vb]), t } }, mouseHooks: { props: mb[bn](er), filter: function(t, n) { var i, e, s, a = n[lx],
										c = n[pb]; return N == t[db] && N != n[yb] && (e = t[LN][wv] || wt, s = e[Tm], i = e[pr], t[db] = n[yb] + (s && s[gb] || i && i[gb] || u) - (s && s[wb] || i && i[wb] || u), t[xb] = n[Cb] + (s && s[Nb] || i && i[Nb] || u) - (s && s[bb] || i && i[bb] || u)), !t[kb] && c && (t[kb] = c === t[LN] ? n[Pb] : c), t[lb] || a === o || (t[lb] = r & a ? r : Oc & a ? af : hm & a ? Oc : u), t } }, special: { load: { noBubble: !u }, focus: { trigger: function() { if(this !== w() && this[jb]) try { return this[jb](), !r } catch(t) {} }, delegateType: Tb }, blur: { trigger: function() { return this === w() && this[Ab] ? (this[Ab](), !r) : o }, delegateType: Sb }, click: { trigger: function() { return Ft[dv](this, Bv) && xN === this[Dh] && this[oC] ? (this[oC](), !r) : o }, _default: function(t) { return Ft[dv](t[LN], Er) } }, beforeunload: { postDispatch: function(t) { t[UN] !== o && (t[Hb][Db] = t[UN]) } } }, simulate: function(t, n, i, r) { var e = Ft[Jh](new Ft[MN], i, { type: t, isSimulated: !u, originalEvent: {} });
								r ? Ft[Dv][Ed](e, N, n) : Ft[Dv][bN][Ah](n, e), e[JN]() && i[WN]() } }, Ft[Rv] = wt[yn] ? function(t, n, i) { t[yn] && t[yn](n, i, !r) } : function(t, n, i) { var r = K + n;
							t[dd] && (a()(t[r]) === yt && (t[r] = N), t[dd](r, i)) }, Ft[MN] = function(t, n) { return this instanceof Ft[MN] ? (t && t[Dh] ? (this[Hb] = t, this[Dh] = t[Dh], this[JN] = t[Rb] || !r === t[Db] || t[Fb] && t[Fb]() ? d : g) : this[Dh] = t, n && Ft[Jh](this, n), this[zb] = t && t[zb] || Ft[ap](), this[Ft[Mh]] = !u, o) : new Ft[MN](t, n) }, Ft[MN][nd] = { isDefaultPrevented: g, isPropagationStopped: g, isImmediatePropagationStopped: g, preventDefault: function() { var t = this[Hb];
								this[JN] = d, t && (t[WN] ? t[WN]() : t[Db] = !r) }, stopPropagation: function() { var t = this[Hb];
								this[QN] = d, t && (t[nb] && t[nb](), t[Ob] = !u) }, stopImmediatePropagation: function() { this[GN] = d, this[nb]() } }, Ft[qh]({ mouseenter: qb, mouseleave: $b }, function(t, n) { Ft[Dv][PN][t] = { delegateType: n, bindType: n, handle: function(t) { var i, r = this,
										e = t[kb],
										s = t[tb]; return(!e || e !== r && !Ft[em](r, e)) && (t[Dh] = s[zN], i = s[CN][Rd](this, arguments), t[Dh] = n), i } } }), Ft[tv][Mb] || (Ft[Dv][PN][Bb] = { setup: function() { return !Ft[dv](this, Yx) && (Ft[Dv][Sv](this, Eb, function(t) { var n = t[LN],
										i = Ft[dv](n, Bv) || Ft[dv](n, lx) ? n[Yx] : o;
									i && !Ft[kv](i, Mb) && (Ft[Dv][Sv](i, Ub, function(t) { t[Lb] = !u }), Ft[kv](i, Mb, !u)) }), o) }, postDispatch: function(t) { t[Lb] && (delete t[Lb], this[zv] && !t[BN] && Ft[Dv][Ib](Bb, this[zv], t, !u)) }, teardown: function() { return !Ft[dv](this, Yx) && (Ft[Dv][zm](this, Qb), o) } }), Ft[tv][Wb] || (Ft[Dv][PN][Jb] = { setup: function() { return un[av](this[dv]) ? ((xN === this[Dh] || iC === this[Dh]) && (Ft[Dv][Sv](this, Vb, function(t) { Uv === t[Hb][Yb] && (this[Kb] = !u) }), Ft[Dv][Sv](this, Xb, function(t) { this[Kb] && !t[BN] && (this[Kb] = !r), Ft[Dv][Ib](Jb, this, t, !u) })), !r) : (Ft[Dv][Sv](this, _b, function(t) { var n = t[LN];
									un[av](n[dv]) && !Ft[kv](n, Wb) && (Ft[Dv][Sv](n, Zb, function(t) {!this[zv] || t[Gb] || t[BN] || Ft[Dv][Ib](Jb, this[zv], t, !u) }), Ft[kv](n, Wb, !u)) }), o) }, handle: function(t) { var n = t[LN]; return this !== n || t[Gb] || t[BN] || iC !== n[Dh] && xN !== n[Dh] ? t[tb][CN][Rd](this, arguments) : o }, teardown: function() { return Ft[Dv][zm](this, tk), !un[av](this[dv]) } }), Ft[tv][nk] || Ft[qh]({ focus: Tb, blur: Sb }, function(t, n) { var i = u,
								r = function(t) { Ft[Dv][Ib](n, t[LN], Ft[Dv][YN](t), !u) };
							Ft[Dv][PN][n] = { setup: function() { u == i++ && wt[gn](t, r, !u) }, teardown: function() { u == --i && wt[yn](t, r, !u) } } }), Ft[ld][Jh]({ on: function(t, n, i, e, s) { var u, c; if(Qh == (void 0 === t ? Wh : a()(t))) { Eh != typeof n && (i = i || n, n = o); for(u in t) this[K](u, n, i, t[u], s); return this } if(N == i && N == e ? (e = n, i = n = o) : N == e && (Eh == typeof n ? (e = i, i = o) : (e = i, i = n, n = o)), !r === e) e = g;
								else if(!e) return this; return r === s && (c = e, e = function(t) { return Ft()[Ud](t), c[Rd](this, arguments) }, e[Lh] = c[Lh] || (c[Lh] = Ft[Lh]++)), this[qh](function() { Ft[Dv][Sv](this, t, e, i, n) }) }, one: function(t, n, i, e) { return this[K](t, n, i, e, r) }, off: function(t, n, i) { var e, s; if(t && t[WN] && t[tb]) return e = t[tb], Ft(t[KN])[Ud](e[ON] ? e[zN] + kN + e[ON] : e[zN], e[Td], e[CN]), this; if(Qh == (void 0 === t ? Wh : a()(t))) { for(s in t) this[Ud](s, n, t[s]); return this } return(!r === n || zh == typeof n) && (i = n, n = o), !r === i && (i = g), this[qh](function() { Ft[Dv][zm](this, t, i, n) }) }, trigger: function(t, n) { return this[qh](function() { Ft[Dv][Ed](t, n, this) }) }, triggerHandler: function(t, n) { var i = this[u]; return i ? Ft[Dv][Ed](t, n, i, !u) : o } });
						var wn = /^.[^:#\[\.,]*$/,
							xn = /^(?:parents|prev(?:Until|All))/,
							Cn = Ft[mx][gi][Qy],
							Tn = { children: !u, contents: !u, next: !u, prev: !u };
						Ft[ld][Jh]({ find: function(t) { var n, i = [],
									e = this,
									s = e[Y]; if(Eh != typeof t) return this[Hd](Ft(t)[hv](function() { for(n = u; s > n; n++)
										if(Ft[em](e[n], this)) return !u })); for(n = u; s > n; n++) Ft[Cv](t, e[n], i); return i = this[Hd](s > r ? Ft[dx](i) : i), i[Td] = this[Td] ? this[Td] + er + t : t, i }, has: function(t) { var n, i = Ft(t, this),
									r = i[Y]; return this[hv](function() { for(n = u; r > n; n++)
										if(Ft[em](this, i[n])) return !u }) }, not: function(t) { return this[Hd](C(this, t || [], !u)) }, filter: function(t) { return this[Hd](C(this, t || [], !r)) }, is: function(t) { return !!C(this, Eh == typeof t && Cn[av](t) ? Ft(t) : t || [], !r)[Y] }, closest: function(t, n) { for(var i, e = u, s = this[Y], a = [], o = Cn[av](t) || Eh != typeof t ? Ft(t, n || this[jd]) : u; s > e; e++)
									for(i = this[e]; i && i !== n; i = i[zv])
										if(11 > i[Rh] && (o ? o[rb](i) > -r : r === i[Rh] && Ft[Cv][vw](i, t))) { i = a[Vr](i); break }
								return this[Hd](a[Y] > r ? Ft[dx](a) : a) }, index: function(t) { return t ? Eh == typeof t ? Ft[vv](this[u], Ft(t)) : Ft[vv](t[Cd] ? t[u] : t, this) : this[u] && this[u][zv] ? this[Oy]()[ik]()[Y] : -r }, add: function(t, n) { var i = Eh == typeof t ? Ft(t, n) : Ft[Ad](t && t[Rh] ? [t] : t),
									r = Ft[_v](this[Nc](), i); return this[Hd](Ft[dx](r)) }, addBack: function(t) { return this[Sv](N == t ? this[Dd] : this[Dd][hv](t)) } }), Ft[qh]({ parent: function(t) { var n = t[zv]; return n && 11 !== n[Rh] ? n : N }, parents: function(t) { return Ft[zy](t, zv) }, parentsUntil: function(t, n, i) { return Ft[zy](t, zv, i) }, next: function(t) { return x(t, Ry) }, prev: function(t) { return x(t, Fw) }, nextAll: function(t) { return Ft[zy](t, Ry) }, prevAll: function(t) { return Ft[zy](t, Fw) }, nextUntil: function(t, n, i) { return Ft[zy](t, Ry, i) }, prevUntil: function(t, n, i) { return Ft[zy](t, Fw, i) }, siblings: function(t) { return Ft[rk]((t[zv] || {})[yv], t) }, children: function(t) { return Ft[rk](t[yv]) }, contents: function(t) { return Ft[dv](t, ek) ? t[Sm] || t[Am][nt] : Ft[_v]([], t[Xv]) } }, function(t, n) { Ft[ld][t] = function(i, e) { var s = Ft[Xh](this, n, i); return sk !== t[tm](-5) && (e = i), e && Eh == typeof e && (s = Ft[hv](e, s)), this[Y] > r && (Tn[t] || (s = Ft[dx](s)), xn[av](t) && (s = s[ak]())), this[Hd](s) } }), Ft[Jh]({ filter: function(t, n, i) { var e = n[u]; return i && (t = uk + t + tg), r === n[Y] && r === e[Rh] ? Ft[Cv][vw](e, t) ? [e] : [] : Ft[Cv][$y](t, Ft[lv](n, function(t) { return r === t[Rh] })) }, dir: function(t, n, i) { for(var e = [], s = t[n]; s && rd !== s[Rh] && (i === o || r !== s[Rh] || !Ft(s)[ok](i));) r === s[Rh] && e[Vr](s), s = s[n]; return e }, sibling: function(t, n) { for(var i = []; t; t = t[Ry]) r === t[Rh] && t !== n && i[Vr](t); return i } });
						var An = ck,
							Sn = / jQuery\d+="(?:null|\d+)"/g,
							Dn = t[og](fk + An + lk, jg),
							Hn = /^\s+/,
							Rn = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
							Fn = /<([\w:]+)/,
							zn = /<tbody/i,
							On = /<|&#?\w+;/,
							qn = /<(?:script|style|link)/i,
							$n = /^(?:checkbox|radio)$/i,
							Mn = /checked\s*(?:[^=]|=\s*.checked.)/i,
							Bn = /^$|\/(?:java|ecma)script/i,
							En = /^true\/(.*)/,
							Un = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
							In = { option: [r, hk, vk], legend: [r, mk, pk], area: [r, dk, yk], param: [r, gk, wk], thead: [r, xk, Ck], tr: [Oc, Nk, bk], col: [Oc, kk, Pk], td: [af, jk, Tk], _default: Ft[tv][Ex] ? [u, Ln, Ln] : [r, Ak, Sk] },
							Qn = k(wt),
							Jn = Qn[st](wt[tt](lt));
						In[ZC] = In[Iv], In[gv] = In[Dk] = In[Hk] = In[Rk] = In[Fk], In[zk] = In[nf], Ft[ld][Jh]({ text: function(t) { return Ft[hy](this, function(t) { return t === o ? Ft[Fv](this) : this[$p]()[Ok]((this[u] && this[u][wv] || wt)[qk](t)) }, N, t, arguments[Y]) }, append: function() { return this[$k](arguments, function(t) { r !== this[Rh] && 11 !== this[Rh] && rd !== this[Rh] || P(this, t)[st](t) }) }, prepend: function() { return this[$k](arguments, function(t) { if(r === this[Rh] || 11 === this[Rh] || rd === this[Rh]) { var n = P(this, t);
										n[Mk](t, n[yv]) } }) }, before: function() { return this[$k](arguments, function(t) { this[zv] && this[zv][Mk](t, this) }) }, after: function() { return this[$k](arguments, function(t) { this[zv] && this[zv][Mk](t, this[Ry]) }) }, remove: function(t, n) { for(var i, e = t ? Ft[hv](t, this) : this, s = u; N != (i = e[s]); s++) n || r !== i[Rh] || Ft[Zh](F(i)), i[zv] && (n && Ft[em](i[wv], i) && S(F(i, fn)), i[zv][dn](i)); return this }, empty: function() { for(var t, n = u; N != (t = this[n]); n++) { for(r === t[Rh] && Ft[Zh](F(t, !r)); t[yv];) t[dn](t[yv]);
									t[A] && Ft[dv](t, qx) && (t[A][Y] = u) } return this }, clone: function(t, n) { return t = N != t && t, n = N == n ? t : n, this[Xh](function() { return Ft[Bk](this, t, n) }) }, html: function(t) { return Ft[hy](this, function(t) { var n = this[u] || {},
										i = u,
										e = this[Y]; if(t === o) return r === n[Rh] ? n[$v][Nn](Sn, Ln) : o; if(!(Eh != typeof t || qn[av](t) || !Ft[tv][Ex] && Dn[av](t) || !Ft[tv][Bx] && Hn[av](t) || In[(Fn[Nv](t) || [Ln, Ln])[r][zi]()])) { t = t[Nn](Rn, Ek); try { for(; e > i; i++) n = this[i] || {}, r === n[Rh] && (Ft[Zh](F(n, !r)), n[$v] = t);
											n = u } catch(t) {} } n && this[$p]()[Ok](t) }, N, t, arguments[Y]) }, replaceWith: function() { var t = Ft[Xh](this, function(t) { return [t[Ry], t[zv]] }),
									n = u; return this[$k](arguments, function(i) { var r = t[n++],
										e = t[n++];
									e && (r && r[zv] !== e && (r = this[Ry]), Ft(this)[zm](), e[Mk](i, r)) }, !u), n ? this : this[zm]() }, detach: function(t) { return this[zm](t, !u) }, domManip: function(t, n, i) { t = jt[Rd]([], t); var e, s, a, o, c, f, l = u,
									h = this[Y],
									v = this,
									m = h - r,
									p = t[u],
									d = Ft[fv](p); if(d || !(r >= h || Eh != typeof p || Ft[tv][aC]) && Mn[av](p)) return this[qh](function(r) { var e = v[Fd](r);
									d && (t[u] = p[Ah](this, r, e[Uk]())), e[$k](t, n, i) }); if(h && (f = Ft[Yd](t, this[u][wv], !r, !i && this), e = f[yv], r === f[Xv][Y] && (f = e), e)) { for(o = Ft[Xh](F(f, fn), j), a = o[Y]; h > l; l++) s = f, l !== m && (s = Ft[Bk](s, !u, !u), a && Ft[_v](o, F(s, fn))), n[Ah](this[l], s, l); if(a)
										for(c = o[o[Y] - r][wv], Ft[Xh](o, T), l = u; a > l; l++) s = o[l], Bn[av](s[Dh] || Ln) && !Ft[kv](s, Pv) && Ft[em](c, s) && (s[ln] ? Ft[Lk](s[ln]) : Ft[Pv]((s[Fv] || s[Dw] || s[$v] || Ln)[Nn](Un, Ln)));
									f = e = N } return this } }), Ft[qh]({ appendTo: Ok, prependTo: Ik, insertBefore: Qk, insertAfter: Wk, replaceAll: Jk }, function(t, n) { Ft[ld][t] = function(t) { for(var i, e = u, s = [], a = Ft(t), o = a[Y] - r; o >= e; e++) i = e === o ? this : this[Bk](!u), Ft(a[e])[n](i), Tt[Rd](s, i[Nc]()); return this[Hd](s) } }), Ft[Jh]({ clone: function(t, n, i) { var e, s, a, o, c, f = Ft[em](t[wv], t); if(Ft[tv][qv] || Ft[yx](t) || !Dn[av](wd + t[dv] + xd) ? a = t[Xx](!u) : (Jn[$v] = t[Ov], Jn[dn](a = Jn[yv])), !(Ft[tv][Hv] && Ft[tv][tC] || r !== t[Rh] && 11 !== t[Rh] || Ft[yx](t)))
									for(e = F(a), c = F(t), o = u; N != (s = c[o]); ++o) e[o] && R(s, e[o]); if(n)
									if(i)
										for(c = c || F(t), e = e || F(a), o = u; N != (s = c[o]); o++) H(s, e[o]);
									else H(t, a); return e = F(a, fn), e[Y] > u && S(e, !f && F(t, fn)), e = c = s = N, a }, buildFragment: function(t, n, i, e) { for(var s, a, o, c, f, l, h, v = t[Y], m = k(n), p = [], d = u; v > d; d++)
									if((a = t[d]) || u === a)
										if(Qh === Ft[Dh](a)) Ft[_v](p, a[Rh] ? [a] : a);
										else if(On[av](a)) { for(c = c || m[st](n[tt](lt)), f = (Fn[Nv](a) || [Ln, Ln])[r][zi](), h = In[f] || In[VN], c[$v] = h[r] + a[Nn](Rn, Ek) + h[Oc], s = h[u]; s--;) c = c[Gw]; if(!Ft[tv][Bx] && Hn[av](a) && p[Vr](n[qk](Hn[Nv](a)[u])), !Ft[tv][gv])
										for(a = Zc !== f || zn[av](a) ? xk !== h[r] || zn[av](a) ? u : c : c[yv], s = a && a[Xv][Y]; s--;) Ft[dv](l = a[Xv][s], gv) && !l[Xv][Y] && a[dn](l); for(Ft[_v](p, c[Xv]), c[Dw] = Ln; c[yv];) c[dn](c[yv]);
									c = m[Gw] } else p[Vr](n[qk](a)); for(c && m[dn](c), Ft[tv][sC] || Ft[lv](F(p, Bv), z), d = u; a = p[d++];)
									if((!e || -r === Ft[vv](a, e)) && (o = Ft[em](a[wv], a), c = F(m[st](a), fn), o && S(c), i))
										for(s = u; a = c[s++];) Bn[av](a[Dh] || Ln) && i[Vr](a); return c = N, m }, cleanData: function(t, n) { for(var i, r, e, s, o = u, c = Ft[Mh], f = Ft[Bh], l = Ft[tv][Gh], h = Ft[Dv][PN]; N != (i = t[o]); o++)
									if((n || Ft[$h](i)) && (e = i[c], s = e && f[e])) { if(s[Tv])
											for(r in s[Tv]) h[r] ? Ft[Dv][zm](i, r) : Ft[Rv](i, r, s[Av]);
										f[e] && (delete f[e], l ? delete i[c] : a()(i[bv]) !== yt ? i[bv](c) : i[c] = N, kt[Vr](e)) } }, _evalUrl: function(t) { return Ft[Vk]({ url: t, type: Yk, dataType: fn, async: !r, global: !r, throws: !u }) } }), Ft[ld][Jh]({ wrapAll: function(t) { if(Ft[fv](t)) return this[qh](function(n) { Ft(this)[Kk](t[Ah](this, n)) }); if(this[u]) { var n = Ft(t, this[u][wv])[Fd](u)[Bk](!u);
									this[u][zv] && n[Mk](this[u]), n[Xh](function() { for(var t = this; t[yv] && r === t[yv][Rh];) t = t[yv]; return t })[Ok](this) } return this }, wrapInner: function(t) { return Ft[fv](t) ? this[qh](function(n) { Ft(this)[Xk](t[Ah](this, n)) }) : this[qh](function() { var n = Ft(this),
										i = n[Lm]();
									i[Y] ? i[Kk](t) : n[Ok](t) }) }, wrap: function(t) { var n = Ft[fv](t); return this[qh](function(i) { Ft(this)[Kk](n ? t[Ah](this, i) : t) }) }, unwrap: function() { return this[_k]()[qh](function() { Ft[dv](this, pr) || Ft(this)[Jk](this[Xv]) })[Gp]() } });
						var Vn, Yn, Kn, Xn = /alpha\([^)]*\)/i,
							Zn = /opacity\s*=\s*([^)]*)/,
							Gn = /^(top|right|bottom|left)$/,
							ti = /^(none|table(?!-c[ea]).+)/,
							ni = /^margin/,
							ii = t[og](wg + zt + Zk, jg),
							ri = t[og](wg + zt + Gk, jg),
							ei = t[og](tP + zt + tg, jg),
							si = { BODY: TC },
							ai = { position: nP, visibility: Vp, display: TC },
							ui = { letterSpacing: u, fontWeight: 400 },
							oi = [rP, eP, sP, aP],
							ci = [uP, oP, cP, fP];
						Ft[ld][Jh]({ css: function(t, n) { return Ft[hy](this, function(t, n, i) { var e, s, a = {},
										c = u; if(Ft[Yh](n)) { for(s = Yn(t), e = n[Y]; e > c; c++) a[n[c]] = Ft[im](t, n[c], !r, s); return a } return i !== o ? Ft[sm](t, n, i) : Ft[im](t, n) }, t, n, arguments[Y] > r) }, show: function() { return $(this, !u) }, hide: function() { return $(this) }, toggle: function(t) { var n = qd == typeof t; return this[qh](function() {
									(n ? t : q(this)) ? Ft(this)[_p](): Ft(this)[Xp]() }) } }), Ft[Jh]({ cssHooks: { opacity: { get: function(t, n) { if(n) { var i = Kn(t, id); return Ln === i ? lP : i } } } }, cssNumber: { columnCount: !u, fillOpacity: !u, fontWeight: !u, lineHeight: !u, opacity: !u, orphans: !u, widows: !u, zIndex: !u, zoom: !u }, cssProps: { float: Ft[tv][Qx] ? Qx : hP }, style: function(n, i, e, s) { if(n && af !== n[Rh] && Wn !== n[Rh] && n[sm]) { var c, f, l, h = Ft[Vh](i),
										v = n[sm]; if(i = Ft[vP][h] || (Ft[vP][h] = O(v, h)), l = Ft[Hp][i] || Ft[Hp][h], e === o) return l && Nc in l && (c = l[Nc](n, !r, s)) !== o ? c : v[i]; if(f = void 0 === e ? Wh : a()(e), Eh === f && (c = ei[Nv](e)) && (e = (c[r] + r) * c[Oc] + t[Nm](Ft[im](n, i)), f = Oh), !(N == e || Oh === f && t[Id](e) || (Oh !== f || Ft[mP][h] || (e += cm), Ft[tv][hC] || Ln !== e || u !== i[di](pP) || (v[i] = dP), l && XC in l && (e = l[XC](n, e, s)) === o))) try { v[i] = e } catch(n) {} } }, css: function(n, i, r, e) { var s, a, c, f = Ft[Vh](i); return i = Ft[vP][f] || (Ft[vP][f] = O(n[sm], f)), c = Ft[Hp][i] || Ft[Hp][f], c && Nc in c && (a = c[Nc](n, !u, r)), a === o && (a = Kn(n, i, e)), yP === a && i in ui && (a = ui[i]), Ln === r || r ? (s = t[Nm](a), !u === r || Ft[gP](s) ? s || u : a) : a } }), i[xC] ? (Yn = function(t) { return i[xC](t, N) }, Kn = function(t, n, i) { var r, e, s, a = i || Yn(t),
								u = a ? a[wP](n) || a[n] : o,
								c = t[sm]; return a && (Ln !== u || Ft[em](t[wv], t) || (u = Ft[sm](t, n)), ri[av](u) && ni[av](n) && (r = c[vm], e = c[xP], s = c[CP], c[xP] = c[CP] = c[vm] = u, u = a[vm], c[vm] = r, c[xP] = e, c[CP] = s)), u }) : wt[Tm][NP] && (Yn = function(t) { return t[NP] }, Kn = function(t, n, i) { var r, e, s, a = i || Yn(t),
								u = a ? a[n] : o,
								c = t[sm]; return N == u && c && c[n] && (u = c[n]), ri[av](u) && !Gn[av](n) && (r = c[dy], e = t[bP], s = e && e[dy], s && (e[dy] = t[NP][dy]), c[dy] = kP === n ? PP : u, u = c[jP] + cm, c[dy] = r, s && (e[dy] = s)), Ln === u ? b : u }), Ft[qh]([Mp, vm], function(t, n) { Ft[Hp][n] = { get: function(t, i, r) { return i ? u === t[ym] && ti[av](Ft[im](t, rm)) ? Ft[wC](t, ai, function() { return U(t, n, r) }) : U(t, n, r) : o }, set: function(t, i, e) { var s = e && Yn(t); return B(t, i, e ? E(t, n, e, Ft[tv][wm] && xm === Ft[im](t, wm, !r, s), s) : u) } } }), Ft[tv][id] || (Ft[Hp][id] = { get: function(n, i) { return Zn[av]((i && n[NP] ? n[NP][hv] : n[sm][hv]) || Ln) ? .01 * t[Nm](t[og][jy]) + Ln : i ? lP : Ln }, set: function(t, n) { var i = t[sm],
									e = t[NP],
									s = Ft[gP](n) ? AP + 100 * n + tg : Ln,
									a = e && e[hv] || i[hv] || Ln;
								i[Wp] = r, (n >= r || Ln === n) && Ln === Ft[Mv](a[Nn](Xn, Ln)) && i[bv] && (i[bv](hv), Ln === n || e && !e[hv]) || (i[hv] = Xn[av](a) ? a[Nn](Xn, s) : a + er + s) } }), Ft(function() { Ft[tv][Gx] || (Ft[Hp][kC] = { get: function(t, n) { return n ? Ft[wC](t, { display: Jp }, Kn, [t, kC]) : o } }), !Ft[tv][Zx] && Ft[ld][DP] && Ft[qh]([NC, dy], function(t, n) { Ft[Hp][n] = { get: function(t, i) { return i ? (i = Kn(t, n), ri[av](i) ? Ft(t)[DP]()[n] + cm : i) : o } } }) }), Ft[mx] && Ft[mx][vx] && (Ft[mx][vx][Vp] = function(t) { return u >= t[ym] && u >= t[gm] || !Ft[tv][yC] && nm === (t[sm] && t[sm][rm] || Ft[im](t, rm)) }, Ft[mx][vx][HP] = function(t) { return !Ft[mx][vx][Vp](t) }), Ft[qh]({ margin: Ln, padding: Ln, border: dm }, function(t, n) { Ft[Hp][t + n] = { expand: function(i) { for(var r = u, e = {}, s = Eh == typeof i ? i[bn](er) : [i]; hm > r; r++) e[t + oi[r] + n] = s[r] || s[r - Oc] || s[u]; return e } }, ni[av](t) || (Ft[Hp][t + n][XC] = B) });
						var fi = /%20/g,
							li = /\[\]$/,
							hi = /\r?\n/g,
							vi = /^(?:submit|button|image|reset|file)$/i,
							mi = /^(?:input|select|textarea|keygen)/i;
						Ft[ld][Jh]({ serialize: function() { return Ft[RP](this[FP]()) }, serializeArray: function() { return this[Xh](function() { var t = Ft[UC](this, zP); return t ? Ft[Ad](t) : this })[hv](function() { var t = this[Dh]; return this[eC] && !Ft(this)[ok](fw) && mi[av](this[dv]) && !vi[av](t) && (this[Uv] || !$n[av](t)) })[Xh](function(t, n) { var i = Ft(this)[YC](); return N == i ? N : Ft[Yh](i) ? Ft[Xh](i, function(t) { return { name: n[eC], value: t[Nn](hi, OP) } }) : { name: n[eC], value: i[Nn](hi, OP) } })[Nc]() } }), Ft[RP] = function(n, i) { var r, e = [],
								s = function(n, i) { i = Ft[fv](i) ? i() : N == i ? Ln : i, e[e[Y]] = t[qP](n) + vr + t[qP](i) }; if(i === o && (i = Ft[Um] && Ft[Um][$P]), Ft[Yh](n) || n[Cd] && !Ft[kd](n)) Ft[qh](n, function() { s(this[eC], this[Lv]) });
							else
								for(r in n) Q(r, n[r], i, s); return e[ky](hr)[Nn](fi, $m) }, Ft[qh](MP[bn](er), function(t, n) { Ft[ld][n] = function(t, i) { return arguments[Y] > u ? this[K](n, N, t, i) : this[Ed](n) } }), Ft[ld][Jh]({ hover: function(t, n) { return this[EP](t)[BP](n || t) }, bind: function(t, n, i) { return this[K](t, N, n, i) }, unbind: function(t, n) { return this[Ud](t, N, n) }, delegate: function(t, n, i, r) { return this[K](n, t, i, r) }, undelegate: function(t, n, i) { return r === arguments[Y] ? this[Ud](t, qN) : this[Ud](n, t || qN, i) } });
						var pi, yi, wi = Ft[ap](),
							xi = /\?/,
							Ci = /#.*$/,
							Ni = /([?&])_=[^&]*/,
							bi = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
							ki = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
							Pi = /^(?:GET|HEAD)$/,
							ji = /^\/\//,
							Ti = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
							Ai = Ft[ld][vd],
							Si = {},
							Di = {},
							Hi = UP[Kh](Yv);
						try { yi = gt[kn] } catch(t) { yi = wt[tt](Er), yi[kn] = Ln, yi = yi[kn] } pi = Ti[Nv](yi[zi]()) || [], Ft[ld][vd] = function(t, n, i) {
							if(Eh != typeof t && Ai) return Ai[Rd](this, arguments);
							var r, e, s, c = this,
								f = t[di](er);
							return f >= u && (r = t[tm](f, t[Y]), t = t[tm](u, f)), Ft[fv](n) ? (i = n, n = o) : n && Qh == (void 0 === n ? Wh : a()(n)) && (s = LP), c[Y] > u && Ft[Vk]({ url: t, type: s, dataType: Uk, data: n })[Ap](function(t) {
								e = arguments, c[Uk](r ? Ft(IP)[Ok](Ft[bd](t))[Cv](r) : t)
							})[Dp](i && function(t, n) { c[qh](i, e || [t[QP], n, t]) }), this
						}, Ft[qh]([WP, JP, VP, YP, KP, XP], function(t, n) { Ft[ld][n] = function(t) { return this[K](n, t) } }), Ft[Jh]({ active: u, lastModified: {}, etag: {}, ajaxSettings: { url: yi, type: Yk, isLocal: ki[av](pi[r]), global: !u, processData: !u, async: !u, contentType: _P, accepts: { "*": Hi, text: ZP, html: GP, xml: tj, json: nj }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: ij, text: QP, json: rj }, converters: { "* text": t[y], "text html": !u, "text json": Ft[uv], "text xml": Ft[ej] }, flatOptions: { url: !u, context: !u } }, ajaxSetup: function(t, n) { return n ? X(X(t, Ft[Um]), n) : X(Ft[Um], t) }, ajaxPrefilter: W(Si), ajaxTransport: W(Di), ajax: function(n, i) {
								function e(n, i, r, e) { var s, a, c, p, N, b = i;
									Oc !== P && (P = Oc, h && t[Xr](h), m = o, l = e || Ln, T[md] = n > u ? hm : u, s = n >= sj && aj > n || uj === n, r && (p = _(d, T, r)), p = Z(d, p, T, s), s ? (d[oj] && (N = T[Wm](cj), N && (Ft[fj][f] = N), (N = T[Wm](lj)) && (Ft[lj][f] = N)), hj === n || vj === d[Dh] ? b = mj : uj === n ? b = pj : (b = p[Or], a = p[Pc], c = p[V], s = !c)) : (c = b, (n || !b) && (b = V, u > n && (n = u))), T[dj] = n, T[yj] = (i || b) + Ln, s ? w[pp](y, [a, b, T]) : w[Cp](y, [T, b, c]), T[gj](C), C = o, v && g[Ed](s ? KP : YP, [T, d, s ? a : c]), x[kx](y, [T, b]), v && (g[Ed](VP, [T, d]), --Ft[wj] || Ft[Dv][Ed](JP))) } Qh == (void 0 === n ? Wh : a()(n)) && (i = n, n = o), i = i || {}; var s, c, f, l, h, v, m, p, d = Ft[xj]({}, i),
									y = d[jd] || d,
									g = d[jd] && (y[Rh] || y[Cd]) ? Ft(y) : Ft[Dv],
									w = Ft[op](),
									x = Ft[gx](jx),
									C = d[gj] || {},
									b = {},
									k = {},
									P = u,
									j = Cj,
									T = { readyState: u, getResponseHeader: function(t) { var n; if(Oc === P) { if(!p)
													for(p = {}; n = bi[Nv](l);) p[n[r][zi]()] = n[Oc];
												n = p[t[zi]()] } return N == n ? N : n }, getAllResponseHeaders: function() { return Oc === P ? l : N }, setRequestHeader: function(t, n) { var i = t[zi](); return P || (t = k[i] = k[i] || t, b[t] = n), this }, overrideMimeType: function(t) { return P || (d[Qm] = t), this }, statusCode: function(t) { var n; if(t)
												if(Oc > P)
													for(n in t) C[n] = [C[n], t[n]];
												else T[up](t[T[dj]]); return this }, abort: function(t) { var n = t || j; return m && m[Nj](n), e(u, n), this } }; if(w[dp](T)[Dp] = x[Sv], T[ip] = T[Ap], T[V] = T[Tp], d[bj] = ((n || d[bj] || yi) + Ln)[Nn](Ci, Ln)[Nn](ji, pi[r] + kj), d[Dh] = i[Pj] || i[Dh] || d[Pj] || d[Dh], d[Bm] = Ft[Mv](d[Xm] || Yv)[zi]()[gi](Ot) || [Ln], N == d[jj] && (s = Ti[Nv](d[bj][zi]()), d[jj] = !(!s || s[r] === pi[r] && s[Oc] === pi[Oc] && (s[af] || (Tj === s[r] ? Aj : Sj)) === (pi[af] || (Tj === pi[r] ? Aj : Sj)))), d[Pc] && d[Dj] && Eh != typeof d[Pc] && (d[Pc] = Ft[RP](d[Pc], d[$P])), J(Si, d, i, T), Oc === P) return T;
								v = d[DN], v && u == Ft[wj]++ && Ft[Dv][Ed](WP), d[Dh] = d[Dh][Zv](), d[Hj] = !Pi[av](d[Dh]), f = d[bj], d[Hj] || (d[Pc] && (f = d[bj] += (xi[av](f) ? hr : lr) + d[Pc], delete d[Pc]), !r === d[Bh] && (d[bj] = Ni[av](f) ? f[Nn](Ni, Rj + wi++) : f + (xi[av](f) ? hr : lr) + Fj + wi++)), d[oj] && (Ft[fj][f] && T[zj](Oj, Ft[fj][f]), Ft[lj][f] && T[zj](qj, Ft[lj][f])), (d[Pc] && d[Hj] && !r !== d[$j] || i[$j]) && T[zj](Jm, d[$j]), T[zj](Mj, d[Bm][u] && d[Bj][d[Bm][u]] ? d[Bj][d[Bm][u]] + (Yv !== d[Bm][u] ? Ej + Hi + Uj : Ln) : d[Bj][Yv]); for(c in d[Lj]) T[zj](c, d[Lj][c]); if(d[Ij] && (!r === d[Ij][Ah](y, T, d) || Oc === P)) return T[Nj]();
								j = Nj; for(c in { success: r, error: r, complete: r }) T[c](d[c]); if(m = J(Di, d, i, T)) { T[md] = r, v && g[Ed](XP, [T, d]), d[sy] && d[Qj] > u && (h = t[Kl](function() { T[Nj](Qj) }, d[Qj])); try { P = r, m[Wj](b, e) } catch(n) { if(!(Oc > P)) throw n;
										e(-r, n) } } else e(-r, Jj); return T }, getJSON: function(t, n, i) { return Ft[Nc](t, n, i, Vj) }, getScript: function(t, n) { return Ft[Nc](t, o, n, fn) } }), Ft[qh]([Nc, Yj], function(t, n) { Ft[n] = function(t, i, r, e) { return Ft[fv](i) && (e = e || r, r = i, i = o), Ft[Vk]({ url: t, type: n, dataType: e, data: i, success: r }) } }), Ft[xj]({ accepts: { script: Kj }, contents: { script: /(?:java|ecma)script/ }, converters: { "text script": function(t) { return Ft[Pv](t), t } } }), Ft[Xj](fn, function(t) { t[Bh] === o && (t[Bh] = !r), t[jj] && (t[Dh] = Yk, t[DN] = !r) }), Ft[_j](fn, function(t) { if(t[jj]) { var n, i = wt[pn] || Ft(pn)[u] || wt[Tm]; return { send: function(r, e) { n = wt[tt](fn), n[sy] = !u, t[Zj] && (n[Gj] = t[Zj]), n[ln] = t[bj], n[gd] = n[yd] = function(t, i) {
											(i || !n[md] || /loaded|complete/ [av](n[md])) && (n[gd] = n[yd] = N, n[zv] && n[zv][dn](n), n = N, i || e(sj, ip)) }, i[Mk](n, i[yv]) }, abort: function() { n && n[gd](o, !u) } } } });
						var Ri = [],
							Fi = /(=)\?(?=&|$)|\?\?/;
						Ft[xj]({ jsonp: tT, jsonpCallback: function() { var t = Ri[Uh]() || Ft[Mh] + nT + wi++; return this[t] = !u, t } }), Ft[Xj](iT, function(t, n, e) { var s, a, c, f = !r !== t[rT] && (Fi[av](t[bj]) ? bj : Eh == typeof t[Pc] && !(t[$j] || Ln)[di](eT) && Fi[av](t[Pc]) && Pc); return f || rT === t[Bm][u] ? (s = t[sT] = Ft[fv](t[sT]) ? t[sT]() : t[sT], f ? t[f] = t[f][Nn](Fi, jy + s) : !r !== t[rT] && (t[bj] += (xi[av](t[bj]) ? hr : lr) + t[rT] + vr + s), t[Vm][aT] = function() { return c || Ft[V](s + uT), c[u] }, t[Bm][u] = Vj, a = i[s], i[s] = function() { c = arguments }, e[up](function() { i[s] = a, t[s] && (t[sT] = n[sT], Ri[Vr](s)), c && Ft[fv](a) && a(c[u]), c = a = o }), fn) : o });
						var Oi, qi, $i = u,
							Bi = i[ep] && function() { var t; for(t in Oi) Oi[t](o, !u) };
						Ft[Um][oT] = i[ep] ? function() { return !this[cT] && G() || it() } : G, qi = Ft[Um][oT](), Ft[tv][fT] = !!qi && lT in qi, (qi = Ft[tv][Vk] = !!qi) && Ft[_j](function(n) { if(!n[jj] || Ft[tv][fT]) { var e; return { send: function(s, a) { var u, c, f = n[oT](); if(n[hT] ? f[vT](n[Dh], n[bj], n[sy], n[hT], n[mT]) : f[vT](n[Dh], n[bj], n[sy]), n[pT])
											for(c in n[pT]) f[c] = n[pT][c];
										n[Qm] && f[dT] && f[dT](n[Qm]), n[jj] || s[yT] || (s[yT] = rp); try { for(c in s) f[zj](c, s[c]) } catch(t) {} f[Wj](n[Hj] && n[Pc] || N), e = function(t, i) { var s, c, l, h; try { if(e && (i || hm === f[md]))
													if(e = o, u && (f[yd] = Ft[Ih], Bi && delete Oi[u]), i) hm !== f[md] && f[Nj]();
													else { h = {}, s = f[dj], c = f[gT](), Eh == typeof f[QP] && (h[Fv] = f[QP]); try { l = f[yj] } catch(t) { l = Ln } s || !n[cT] || n[jj] ? 1223 === s && (s = hj) : s = h[Fv] ? sj : 404 } } catch(t) { i || a(-r, t) } h && a(s, l, h, c) }, n[sy] ? hm === f[md] ? t[Kl](e) : (u = ++$i, Bi && (Oi || (Oi = {}, Ft(i)[CT](Bi)), Oi[u] = e), f[yd] = e) : e() }, abort: function() { e && e(o, !u) } } } });
						var Ei, Ui, Li = /^(?:toggle|show|hide)$/,
							Ii = t[og](NT + zt + bT, jg),
							Qi = /queueHooks$/,
							Wi = [ct],
							Ji = { "*": [function(t, n) { var i = this[kT](t, n),
										e = i[PT](),
										s = Ii[Nv](n),
										a = s && s[af] || (Ft[mP][t] ? Ln : cm),
										o = (Ft[mP][t] || cm !== a && +e) && Ii[Nv](Ft[im](i[cp], t)),
										c = r,
										f = 20; if(o && o[af] !== a) { a = a || o[af], s = s || [], o = +e || r;
										do { c = c || TT, o /= c, Ft[sm](i[cp], t, o + a) } while (c !== (c = i[PT]() / e) && r !== c && --f) } return s && (o = i[bp] = +o || +e || u, i[AT] = a, i[Gp] = s[r] ? o + (s[r] + r) * s[Oc] : +s[Oc]), i }] };
						Ft[ST] = Ft[Jh](ut, { tweener: function(t, n) { Ft[fv](t) ? (n = t, t = [Yv]) : t = t[bn](er); for(var i, r = u, e = t[Y]; e > r; r++) i = t[r], Ji[i] = Ji[i] || [], Ji[i][Mm](n) }, prefilter: function(t, n) { n ? Wi[Mm](t) : Wi[Vr](t) } }), Ft[yp] = ft, ft[nd] = { constructor: ft, init: function(t, n, i, r, e, s) { this[cp] = t, this[UC] = i, this[xp] = e || DT, this[A] = n, this[bp] = this[ap] = this[PT](), this[Gp] = r, this[AT] = s || (Ft[mP][i] ? Ln : cm) }, cur: function() { var t = ft[rN][this[UC]]; return t && t[Nc] ? t[Nc](this) : ft[rN][VN][Nc](this) }, run: function(t) { var n, i = ft[rN][this[UC]]; return this[Mi] = n = this[A][lp] ? Ft[xp][this[xp]](t, this[A][lp] * t, u, r, this[A][lp]) : t, this[ap] = (this[Gp] - this[bp]) * n + this[bp], this[A][HT] && this[A][HT][Ah](this[cp], this[ap], this), i && i[XC] ? i[XC](this) : ft[rN][VN][XC](this), this } }, ft[nd][td][nd] = ft[nd], ft[rN] = { _default: { get: function(t) { var n; return N == t[cp][t[UC]] || t[cp][sm] && N != t[cp][sm][t[UC]] ? (n = Ft[im](t[cp], t[UC], Ln), n && b !== n ? n : u) : t[cp][t[UC]] }, set: function(t) { Ft[Pp][HT][t[UC]] ? Ft[Pp][HT][t[UC]](t) : t[cp][sm] && (N != t[cp][sm][Ft[vP][t[UC]]] || Ft[Hp][t[UC]]) ? Ft[sm](t[cp], t[UC], t[ap] + t[AT]) : t[cp][t[UC]] = t[ap] } } }, ft[rN][Nb] = ft[rN][gb] = { set: function(t) { t[cp][Rh] && t[cp][zv] && (t[cp][t[UC]] = t[ap]) } }, Ft[qh]([Kp, _p, Xp], function(t, n) { var i = Ft[ld][n];
							Ft[ld][n] = function(t, r, e) { return N == t || qd == typeof t ? i[Rd](this, arguments) : this[RT](ht(n, !u), t, r, e) } }), Ft[ld][Jh]({ fadeTo: function(t, n, i, r) { return this[hv](q)[im](id, u)[_p]()[Gp]()[RT]({ opacity: n }, t, i, r) }, animate: function(t, n, i, e) { var s = Ft[_h](t),
									a = Ft[FT](n, i, e),
									o = function() { var n = ut(this, Ft[Jh]({}, t), a);
										(s || Ft[kv](this, zT)) && n[$C](!u) }; return o[zT] = o, s || !r === a[jp] ? this[qh](o) : this[jp](a[jp], o) }, stop: function(t, n, i) { var e = function(t) { var n = t[$C];
									delete t[$C], n(i) }; return Eh != typeof t && (i = n, n = t, t = o), n && !r !== t && this[jp](t || Pp, []), this[qh](function() { var n = !u,
										s = N != t && t + MC,
										a = Ft[OT],
										o = Ft[kv](this); if(s) o[s] && o[s][$C] && e(o[s]);
									else
										for(s in o) o[s] && o[s][$C] && Qi[av](s) && e(o[s]); for(s = a[Y]; s--;) a[s][cp] !== this || N != t && a[s][jp] !== t || (a[s][qT][$C](i), n = !r, a[Od](s, r));
									(n || !i) && Ft[OC](this, t) }) }, finish: function(t) { return !r !== t && (t = t || Pp), this[qh](function() { var n, i = Ft[kv](this),
										e = i[t + jp],
										s = i[t + MC],
										a = Ft[OT],
										o = e ? e[Y] : u; for(i[zT] = !u, Ft[jp](this, t, []), s && s[$C] && s[$C][Ah](this, !u), n = a[Y]; n--;) a[n][cp] === this && a[n][jp] === t && (a[n][qT][$C](!u), a[Od](n, r)); for(n = u; o > n; n++) e[n] && e[n][zT] && e[n][zT][Ah](this);
									delete i[zT] }) } }), Ft[qh]({ slideDown: ht(_p), slideUp: ht(Xp), slideToggle: ht(Kp), fadeIn: { opacity: _p }, fadeOut: { opacity: Xp }, fadeToggle: { opacity: Kp } }, function(t, n) { Ft[ld][t] = function(t, i, r) { return this[RT](n, t, i, r) } }), Ft[FT] = function(t, n, i) { var r = t && Qh == (void 0 === t ? Wh : a()(t)) ? Ft[Jh]({}, t) : { complete: i || !i && n || Ft[fv](t) && t, duration: t, easing: i && n || n && !Ft[fv](n) && n }; return r[lp] = Ft[Pp][Ud] ? u : Oh == typeof r[lp] ? r[lp] : r[lp] in Ft[Pp][BC] ? Ft[Pp][BC][r[lp]] : Ft[Pp][BC][VN], (N == r[jp] || !u === r[jp]) && (r[jp] = Pp), r[$T] = r[Dp], r[Dp] = function() { Ft[fv](r[$T]) && r[$T][Ah](this), r[jp] && Ft[OC](this, r[jp]) }, r }, Ft[xp] = { linear: function(t) { return t }, swing: function(n) { return .5 - t[om][BT](n * t[om][ET]) / Oc } }, Ft[OT] = [], Ft[Pp] = ft[nd][td], Ft[Pp][UT] = function() { var t, n = Ft[OT],
								i = u; for(Ei = Ft[ap](); n[Y] > i; i++)(t = n[i])() || n[i] !== t || n[Od](i--, r);
							n[Y] || Ft[Pp][$C](), Ei = o }, Ft[Pp][kp] = function(t) { t() && Ft[OT][Vr](t) && Ft[Pp][bp]() }, Ft[Pp][LT] = 13, Ft[Pp][bp] = function() { Ui || (Ui = t[_n](Ft[Pp][UT], Ft[Pp][LT])) }, Ft[Pp][$C] = function() { t[QT](Ui), Ui = N }, Ft[Pp][BC] = { slow: 600, fast: sj, _default: 400 }, Ft[Pp][HT] = {}, Ft[mx] && Ft[mx][vx] && (Ft[mx][vx][JT] = function(t) { return Ft[lv](Ft[OT], function(n) { return t === n[cp] })[Y] }), Ft[ld][VT] = function(t) { if(arguments[Y]) return t === o ? this : this[qh](function(n) { Ft[VT][YT](this, t, n) }); var n, i, r = { top: u, left: u },
								e = this[u],
								s = e && e[wv]; return s ? (n = s[Tm], Ft[em](n, e) ? (a()(e[KT]) !== yt && (r = e[KT]()), i = mt(s), { top: r[NC] + (i[XT] || n[Nb]) - (n[bb] || u), left: r[dy] + (i[_T] || n[gb]) - (n[wb] || u) }) : r) : void 0 }, Ft[VT] = { setOffset: function(n, i, e) { var s = Ft[im](n, DP);
								ZT === s && (n[sm][DP] = qy); var a, o, c = Ft(n),
									f = c[VT](),
									l = Ft[im](n, NC),
									h = Ft[im](n, dy),
									v = (nP === s || GT === s) && Ft[vv](b, [l, h]) > -r,
									m = {},
									p = {};
								v ? (p = c[DP](), a = p[NC], o = p[dy]) : (a = t[Nm](l) || u, o = t[Nm](h) || u), Ft[fv](i) && (i = i[Ah](n, e, f)), N != i[NC] && (m[NC] = i[NC] - f[NC] + a), N != i[dy] && (m[dy] = i[dy] - f[dy] + o), tA in i ? i[tA][Ah](n, m) : c[im](m) } }, Ft[ld][Jh]({ position: function() { if(this[u]) { var t, n, i = { top: u, left: u },
										r = this[u]; return GT === Ft[im](r, DP) ? n = r[KT]() : (t = this[nA](), n = this[VT](), Ft[dv](t[u], Uk) || (i = t[VT]()), i[NC] += Ft[im](t[u], iA, !u), i[dy] += Ft[im](t[u], rA, !u)), { top: n[NC] - i[NC] - Ft[im](r, eA, !u), left: n[dy] - i[dy] - Ft[im](r, sA, !u) } } }, offsetParent: function() { return this[Xh](function() { for(var t = this[nA] || xt; t && !Ft[dv](t, Uk) && ZT === Ft[im](t, DP);) t = t[nA]; return t || xt }) } }), Ft[qh]({ scrollLeft: _T, scrollTop: XT }, function(t, n) { var i = /Y/ [av](n);
							Ft[ld][t] = function(r) { return Ft[hy](this, function(t, r, e) { var s = mt(t); return e === o ? s ? n in s ? s[n] : s[nt][Tm][r] : t[r] : (s ? s[aA](i ? Ft(s)[gb]() : e, i ? e : Ft(s)[Nb]()) : t[r] = e, o) }, t, r, arguments[Y], N) } }), Ft[qh]({ Height: Mp, Width: vm }, function(n, i) { Ft[qh]({ padding: uA + n, content: i, "": oA + n }, function(r, e) { Ft[ld][e] = function(e, s) { var a = arguments[Y] && (r || qd != typeof e),
										c = r || (!u === e || !u === s ? mm : fm); return Ft[hy](this, function(i, r, e) { var s; return Ft[Hh](i) ? i[nt][Tm][cA + n] : rd === i[Rh] ? (s = i[Tm], t[om][um](i[pr][fA + n], s[fA + n], i[pr][VT + n], s[VT + n], s[cA + n])) : e === o ? Ft[im](i, r, c) : Ft[sm](i, r, e, c) }, i, a ? e : o, a, N) } }) }), Ft[ld][lA] = function() { return this[Y] }, Ft[ld][hA] = Ft[ld][vA], Qh == a()(n) && n && Qh == a()(n[vt]) ? n[vt] = Ft : (i[ad] = i[ud] = Ft, zh == typeof t[mA] && e(pA) && t[mA](Cd, [], function() { return Ft }))
					}(t[l])
				})[Ah](i, e(dA)(n))
			},
			ZJy1: function(t, n, i) { t[vt] = i[mt] + yA },
			ZxpQ: function(t, n, i) { t[vt] = i[mt] + gA },
			aAsm: function(t, n, i) { t[vt] = i[mt] + wA },
			aJUR: function(t, n, i) { t[vt] = i[mt] + xA },
			awH0: function(t, n, i) { t[vt] = i[mt] + CA },
			b5gc: function(t, n, i) { t[vt] = i[mt] + NA },
			bWJk: function(t, n, i) { t[vt] = i[mt] + bA },
			csBN: function(t, n, i) { t[vt] = i[mt] + kA },
			dFqL: function(t, n, i) { t[vt] = i[mt] + PA },
			erWL: function(t, n) {},
			evjw: function(t, n, i) { t[vt] = i[mt] + jA },
			fuxK: function(t, n, i) { t[vt] = i[mt] + TA },
			g3Gj: function(t, n) {},
			hPR3: function(t, n, i) { t[vt] = i[mt] + AA },
			hTIm: function(t, n, i) { t[vt] = i[mt] + SA },
			hZlF: function(t, n, i) { t[vt] = i[mt] + DA },
			lSbq: function(t, n, i) { t[vt] = i[mt] + HA },
			lbdN: function(t, n, i) { t[vt] = i[mt] + RA },
			ljFn: function(t, n, i) { t[vt] = i[mt] + FA },
			mhHl: function(t, n) {},
			nP8u: function(t, n, i) { t[vt] = i[mt] + zA },
			nlUO: function(t, n, i) { t[vt] = i[mt] + OA },
			nppW: function(t, n, i) { t[vt] = i[mt] + qA },
			nt6J: function(t, n, i) { t[vt] = i[mt] + $A },
			oL2k: function(t, n, i) { t[vt] = i[mt] + MA },
			odRx: function(t, n, i) { t[vt] = i[mt] + BA },
			p4QJ: function(t, n, i) { t[vt] = i[mt] + EA },
			pB2h: function(t, n, i) { t[vt] = i[mt] + UA },
			pQC8: function(t, n, i) { t[vt] = i[mt] + LA },
			pTfb: function(t, n) {},
			poA4: function(t, n) {},
			rVsb: function(t, n, i) { t[vt] = i[mt] + IA },
			sNVh: function(t, n, i) { t[vt] = i[mt] + QA },
			sRSF: function(t, n, i) { t[vt] = i[mt] + WA },
			"suG/": function(t, n, i) { t[vt] = i[mt] + JA },
			tk7B: function(t, n, i) { t[vt] = i[mt] + VA },
			tu9B: function(t, n, i) { t[vt] = i[mt] + YA },
			uX6O: function(t, n, i) { t[vt] = i[mt] + KA },
			ubpV: function(t, n, i) { t[vt] = i[mt] + XA },
			vCsE: function(t, n) {},
			vofs: function(t, n, i) { t[vt] = i[mt] + _A },
			wbrm: function(t, n, i) { t[vt] = i[mt] + ZA },
			wlyg: function(t, n, i) { t[vt] = i[mt] + GA },
			wsoJ: function(t, n, i) { t[vt] = i[mt] + tS },
			"x/v4": function(t, n, i) { t[vt] = i[mt] + nS },
			xHpJ: function(t, n, i) { t[vt] = i[mt] + iS },
			yAml: function(t, n, i) { t[vt] = i[mt] + rS }
		}, [eS])
	}(this, 0, t(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 3), 1, t(11, 1, 12, 13, 10, 1, 14, 15, 9, 3, 1, 15, 16, 17), t(18, 2, 19, 1, 5, 16), t(20, 20, 1, 8, 21, 9, 11, 22, 23, 1), 0, t(0, 9, 18, 12), t(10), t(24, 13, 11, 1, 9, 19, 8), t(0, 13, 10, 11, 9, 0), t(25, 13, 4, 26), t(11, 1, 12, 4, 22, 23, 16), t(24, 13, 11, 1, 9, 27, 3, 23, 4, 17, 1, 15), t(28, 22, 29, 2, 1, 15), t(30, 9, 9, 23, 1, 4, 10), t(31, 16, 15, 13, 10, 32), t(8, 16, 4, 16, 1, 5, 33, 4, 10, 32, 1, 11), t(3, 23, 4, 17, 1, 15), t(13, 10, 13, 16, 13, 4, 23, 13, 34, 1), t(11, 13, 8, 3, 9, 8, 1), null, t(4, 22, 16, 9), t(35, 36, 36, 37), t(38, 39, 36), t(1, 10), t(33, 16, 29, 23, 40), t(9, 3, 16, 13, 9, 10, 8), t(3, 23, 4, 17, 8, 13, 10, 23, 13, 10, 1), t(8, 1, 16, 41, 16, 16, 15, 13, 2, 22, 16, 1), t(5, 33, 13, 23, 11, 15, 1, 10), t(42, 1, 23), t(0, 1, 2, 6, 13, 16, 27, 3, 23, 4, 17, 8, 13, 10, 23, 13, 10, 1), t(42, 1, 29, 13, 16), t(5, 22, 8, 16, 9, 29, 43, 24, 1, 10, 16, 28, 4, 29, 1), t(3, 23, 22, 32, 13, 10, 8), t(20, 20, 9, 2, 20, 20), t(15, 1, 4, 11, 17), t(23, 9, 4, 11, 1, 11, 11, 4, 16, 4), t(5, 4, 10, 3, 23, 4, 17), t(5, 4, 10, 3, 23, 4, 17, 16, 33, 15, 9, 22, 32, 33), t(3, 23, 4, 17), t(3, 4, 22, 8, 1), t(0, 4, 13, 16, 13, 10, 32), t(3, 23, 4, 17, 13, 10, 32), t(1, 10, 11, 1, 11), t(1, 15, 15, 9, 15), t(23, 1, 10, 32, 16, 33), t(9, 10), t(16, 13, 29, 1, 22, 3, 11, 4, 16, 1), t(5, 22, 15, 15, 1, 10, 16, 44, 13, 29, 1), t(45, 23, 4, 8, 33), t(16, 1, 5, 33, 28, 4, 29, 1, 20), t(5, 15, 1, 4, 16, 1, 43, 23, 1, 29, 1, 10, 16), t(11, 9, 5, 22, 29, 1, 10, 16), t(24, 13, 11, 1, 9), t(5, 23, 4, 8, 8, 28, 4, 29, 1), t(24, 13, 11, 1, 9, 27, 19, 8), t(4, 3, 3, 1, 10, 11, 46, 33, 13, 23, 11), t(8, 9, 22, 15, 5, 1, 8), t(42, 5, 15, 1, 4, 16, 1, 43, 23, 1, 29, 1, 10, 16), t(20, 5), t(20, 8, 1, 23, 12), t(20, 29), t(11, 13, 24), t(47, 48, 49, 50), t(1, 51, 3, 9, 15, 16, 8), t(3), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 40, 52, 53, 1, 1, 5, 38, 1, 39, 52, 19, 3, 32), t(11, 4, 16, 4, 54, 13, 29, 4, 32, 1, 49, 19, 3, 1, 32, 55, 2, 4, 8, 1, 39, 56, 57, 49, 58, 19, 49, 56, 59, 41, 60, 61, 62, 33, 3, 63, 32, 41, 41, 31, 48, 6, 64, 41, 41, 32, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 14, 49, 8, 41, 30, 45, 43, 11, 65, 28, 15, 1, 59, 41, 30, 41, 41, 59, 41, 41, 41, 41, 50, 41, 41, 25, 49, 56, 59, 18, 28, 4, 66, 61, 36, 5, 25, 9, 24, 67, 26, 40, 34, 67, 29, 45, 6, 2, 26, 7, 23, 67, 29, 28, 24, 2, 31, 58, 56, 60, 62, 41, 24, 21, 31, 56, 0, 67, 0, 41, 50, 14, 38, 33, 0, 60, 65, 28, 15, 63, 62, 59, 32, 60, 29, 47, 10, 4, 65, 56, 58, 68, 22, 69, 53, 24, 17, 68, 32, 4, 65, 59, 58, 68, 23, 5, 35, 44, 44, 30, 28, 5, 43, 28, 23, 4, 70, 23, 68, 1, 10, 7, 23, 48, 38, 3, 18, 47, 70, 28, 39, 4, 26, 21, 40, 63, 46, 68, 49, 14, 13, 41, 50, 1, 25, 3, 56, 2, 62, 30, 16, 63, 62, 61, 33, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 32, 58, 68, 29, 45, 6, 2, 26, 7, 23, 18, 29, 40, 34, 18, 29, 35, 23, 11, 70, 43, 24, 68, 13, 30, 56, 18, 10, 33, 16, 5, 66, 61, 15, 14, 31, 7, 30, 63, 70, 58, 13, 63, 31, 30, 60, 44, 47, 41, 32, 59, 26, 58, 17, 63, 31, 41, 35, 67, 19, 60, 16, 60, 34, 43, 34, 18, 46, 41, 38, 18, 31, 56, 51, 28, 44, 6, 56, 21, 19, 59, 8, 68, 25, 68, 0, 21, 44, 60, 24, 21, 25, 6, 24, 21, 44, 59, 16, 21, 25, 43, 39, 21, 25, 6, 39, 21, 25, 43, 32, 68, 46, 41, 32, 68, 46, 41, 32, 68, 46, 68, 69, 68, 25, 51, 17, 63, 70, 60, 39, 48, 6, 61, 70, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 7, 6, 63, 19, 36, 13, 4, 66, 61, 36, 5, 25, 9, 24, 67, 38, 11, 38, 11, 17, 40, 38, 21, 17, 40, 24, 5, 29, 5, 24, 21, 44, 6, 40, 18, 31, 50, 0, 21, 13, 50, 17, 21, 13, 35, 17, 63, 70, 60, 16, 5, 38, 23, 22, 11, 70, 45, 56, 67, 65, 40, 34, 68, 17, 68, 69, 68, 25, 51, 17, 63, 70, 60, 39, 61, 70, 47, 34, 60, 38, 7, 3, 5, 66, 61, 3, 2, 26, 56, 32, 5, 29, 61, 29, 18, 29, 45, 13, 2, 38, 47, 36, 14, 31, 68, 13, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 33, 16, 5, 43, 35, 28, 14, 31, 7, 9, 11, 66, 61, 0, 18, 13, 50, 24, 2, 10, 21, 22, 60, 65, 61, 24, 60, 29, 48, 22, 60, 26, 58, 16, 67, 38, 33, 33, 5, 46, 50, 51, 67, 19, 41, 24, 2, 65, 36, 24, 68, 13, 30, 56, 2, 65, 51, 22, 5, 34, 3, 34, 11, 45, 7, 23, 63, 19, 36, 13, 4, 66, 61, 36, 5, 25, 9, 24, 67, 26, 40, 34, 67, 29, 45, 6, 2, 26, 7, 23, 67, 29, 28, 24, 2, 31, 58, 56, 60, 62, 41, 24, 21, 31, 56, 0, 67, 38, 28, 48, 1, 62, 30, 23, 67, 35, 7, 23, 5, 26, 58, 35, 5, 29, 28, 23, 48, 29, 47, 29, 68, 17, 68, 32, 1, 70, 35, 8, 2, 10, 21, 39, 1, 70, 35, 0, 14, 31, 7, 9, 11, 66, 61, 0, 18, 13, 50, 24, 2, 10, 21, 22, 60, 65, 61, 24, 60, 29, 48, 22, 60, 26, 58, 16, 67, 38, 33, 33, 5, 46, 50, 51, 67, 19, 41, 24, 68, 13, 30, 56, 2, 62, 30, 28, 44, 44, 3, 14, 5, 29, 23, 10, 4, 65, 40, 33, 2, 43, 61, 24, 60, 38, 47, 16, 63, 65, 40, 36, 31, 48, 59, 58, 68, 10, 33, 16, 5, 46, 40, 6, 4, 65, 59, 39, 60, 26, 21, 17, 28, 34, 21, 0, 60, 44, 68, 16, 60, 26, 63, 33, 63, 46, 36, 17, 28, 25, 59, 0, 67, 44, 6, 0, 60, 29, 59, 16, 21, 29, 68, 40, 18, 44, 59, 36, 28, 19, 59, 35, 60, 34, 59, 26, 68, 13, 30, 56, 2, 62, 30, 28, 44, 44, 3, 43, 2, 26, 28, 35, 2, 65, 47, 22, 11, 43, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 63, 70, 23, 6, 18, 19, 60, 0, 21, 43, 47, 70, 59, 19, 30, 25, 18, 25, 33, 43, 59, 19, 43, 51, 61, 44, 32, 40, 21, 43, 60, 36, 59, 19, 33, 30, 59, 19, 60, 51, 28, 44, 32, 36, 61, 43, 60, 34, 68, 13, 30, 56, 2, 62, 30, 28, 44, 44, 3, 7, 2, 10, 28, 36, 60, 65, 40, 19, 63, 48, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 4, 65, 23, 6, 18, 19, 60, 0, 21, 43, 47, 70, 59, 19, 30, 46, 18, 25, 33, 43, 59, 19, 43, 51, 61, 44, 32, 40, 21, 43, 60, 36, 59, 19, 33, 30, 59, 19, 60, 51, 28, 44, 32, 36, 61, 43, 60, 34, 68, 13, 30, 56, 2, 62, 41, 39, 59, 38, 7, 23, 60, 62, 61, 24, 5, 23, 61, 24, 2, 26, 0, 58, 68, 6, 45, 6, 2, 26, 7, 23, 68, 45, 30, 9, 2, 38, 61, 24, 5, 26, 33, 24, 5, 46, 30, 25, 59, 17, 41, 17, 21, 25, 43, 38, 68, 46, 33, 62, 4, 65, 40, 6, 2, 38, 11, 34, 71, 31, 68, 69, 68, 25, 51, 56, 2, 62, 30, 28, 44, 44, 3, 43, 63, 62, 7, 3, 11, 29, 47, 6, 61, 10, 7, 24, 2, 31, 30, 34, 11, 45, 7, 23, 63, 19, 3, 3, 2, 10, 28, 36, 60, 65, 40, 19, 63, 48, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 4, 65, 23, 6, 18, 29, 59, 38, 63, 44, 5, 0, 21, 44, 68, 35, 67, 65, 48, 36, 60, 26, 59, 16, 63, 44, 5, 36, 18, 46, 36, 40, 21, 44, 6, 36, 67, 44, 68, 38, 28, 29, 45, 33, 21, 25, 60, 17, 21, 19, 11, 6, 63, 13, 68, 32, 5, 38, 61, 31, 63, 65, 60, 39, 63, 70, 58, 19, 11, 65, 35, 23, 2, 10, 61, 7, 61, 25, 36, 13, 60, 65, 61, 24, 60, 29, 48, 39, 63, 70, 58, 19, 4, 65, 59, 39, 5, 70, 33, 24, 11, 70, 58, 34, 4, 70, 58, 0, 18, 19, 43, 40, 21, 25, 6, 26, 21, 19, 60, 56, 67, 44, 32, 34, 21, 65, 68, 16, 21, 44, 45, 23, 18, 46, 36, 40, 63, 29, 68, 0, 67, 65, 21, 56, 18, 25, 33, 19, 21, 26, 48, 0, 63, 19, 68, 17, 60, 17, 68, 24, 14, 13, 41, 50, 67, 38, 7, 6, 63, 19, 3, 43, 63, 62, 28, 19, 5, 29, 23, 0, 11, 70, 23, 24, 2, 19, 56, 32, 14, 46, 58, 17, 63, 70, 60, 39, 48, 6, 61, 70, 14, 13, 41, 50, 67, 38, 32, 39, 1, 70, 35, 0, 2, 65, 47, 36, 60, 44, 56, 32, 14, 25, 58, 56, 5, 70, 45, 19, 4, 26, 47, 36, 68, 70, 47, 22, 63, 25, 36, 13, 5, 13, 68, 49, 14, 24, 49, 22, 41, 41, 40, 30, 63, 70, 58, 13, 63, 59, 30, 6, 0, 41, 41, 41, 41, 41, 66, 49, 26, 0, 46, 43, 41, 41, 60, 43, 30, 41, 59, 45, 30, 41, 60, 45, 30, 59, 60, 7, 30, 32, 48, 70, 46, 59, 8, 68, 30, 32, 60, 68, 46, 0, 0, 71, 46, 32, 8, 71, 46, 32, 0, 59, 25, 41, 0, 21, 25, 41, 0, 21, 43, 41, 0, 18, 25, 51, 41, 14, 25, 32, 0, 44, 43, 51, 59, 48, 43, 51, 21, 5, 70, 51, 8, 2, 66, 30, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 30, 30, 0, 5, 66, 25, 59, 0, 28, 70, 30, 41, 59, 70, 30, 9, 47, 43, 61, 48, 4, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 49, 49, 41, 41, 30, 43, 68, 41, 65, 0, 46, 53, 32, 21, 30, 43, 59, 41, 46, 43, 59, 43, 25, 43, 59, 66, 49, 51, 41, 30, 50, 41, 41, 43, 30, 41, 59, 43, 30, 41, 59, 43, 30, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 0, 59, 68, 30, 0, 60, 45, 46, 59, 43, 30, 41, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 43, 59, 41, 59, 41, 41, 41, 0, 41, 14, 30, 59, 5, 43, 41, 0, 43, 30, 41, 59, 41, 41, 41, 41, 41, 43, 30, 59, 12, 0, 32, 2, 43, 46, 21, 40, 14, 44, 35, 45, 65, 47, 45, 23, 60, 62, 70, 46, 19, 30, 59, 32, 21, 70, 46, 41, 43, 31, 43, 51, 31, 43, 16, 44, 5, 61, 51, 68, 47, 70, 68, 44, 43, 47, 68, 19, 68, 19, 43, 59, 43, 30, 41, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 43, 59, 66, 49, 26, 32, 41, 21, 41, 0, 43, 41, 41, 33, 43, 25, 43, 59, 41, 49, 41, 18, 29, 47, 59, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 41, 41, 41, 30, 31, 66, 0, 35, 53, 2, 22, 41, 61, 70, 70, 24, 15, 47, 0, 43, 0, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4, 68, 44, 24, 26, 22, 35, 25, 70, 11, 59, 41, 41, 30, 49, 18, 44, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 13, 10, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 25, 36, 24, 36, 38, 69, 12, 49, 14, 5, 26, 15, 61, 40, 11, 23, 50, 36, 50, 17, 44, 31, 14, 32, 14, 70, 69, 5, 69, 28, 46, 61, 48, 2, 43, 1, 28, 56, 28, 49, 0, 46, 40, 41, 69, 14, 12, 38, 24, 24, 1, 66, 56, 23, 49, 12, 62, 24, 16, 49, 31, 69, 24, 12, 63, 53, 12, 63, 69, 24, 8, 49, 0, 30, 32, 1, 3, 25, 34, 49, 0, 46, 1, 40, 44, 65, 19, 34, 45, 67, 40, 62, 40, 6, 29, 6, 30, 41, 1, 25, 50, 10, 50, 70, 43, 33, 60, 26, 68, 50, 66, 0, 2, 34, 38, 56, 66, 0, 67, 69, 69, 58, 38, 0, 49, 25, 24, 53, 26, 58, 58, 10, 39, 38, 35, 58, 53, 12, 2, 53, 12, 36, 58, 10, 69, 0, 1, 4, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 25, 13, 3, 48, 49, 12, 46, 11, 39, 51, 13, 50, 9, 30, 51, 48, 64, 12, 24, 33, 18, 58, 60, 51, 1, 48, 41, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 39, 65, 58, 70, 12, 29, 15, 34, 61, 14, 16, 8, 14, 69, 53, 18, 68, 26, 2, 12, 67, 12, 50, 53, 40, 12, 40, 39, 7, 50, 65, 7, 69, 66, 50, 44, 40, 15, 38, 49, 5, 69, 67, 12, 62, 49, 22, 69, 58, 53, 23, 53, 69, 24, 39, 12, 53, 49, 44, 26, 41, 40, 3, 56, 64, 47, 14, 38, 0, 10, 1, 8, 60, 24, 71, 41, 5, 47, 71, 10, 53, 56, 44, 24, 65, 21, 62, 23, 41, 18, 71, 23, 44, 58, 50, 7, 38, 15, 70, 67, 17, 32, 66, 45, 31, 3, 69, 69, 43, 53, 35, 19, 45, 40, 59, 66, 17, 0, 41, 41, 14, 47, 12, 31, 40, 69, 11, 24, 67, 14, 35, 38, 26, 69, 68, 41, 58, 48, 12, 40, 26, 50, 34, 12, 59, 49, 2, 56, 5, 66, 23, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 18, 64, 24, 59, 51, 49, 11, 24, 56, 24, 58, 56, 25, 23, 48, 41, 41, 41, 41, 41, 41, 66, 64, 24, 3, 5, 49, 18, 38, 23, 10, 39, 53, 53, 12, 43, 41, 1, 64, 14, 50, 41, 18, 38, 29, 2, 39, 66, 53, 12, 25, 32, 50, 64, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 30, 35, 47, 39, 70, 14, 53, 16, 49, 45, 49, 24, 41, 5, 64, 32, 41, 41, 41, 41, 41, 41, 58, 47, 58, 67, 10, 40, 26, 50, 8, 49, 62, 12, 2, 56, 32, 25, 35, 61, 49, 10, 2, 34, 28, 58, 25, 58, 24, 33, 0, 1, 47, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 39, 64, 58, 25, 66, 58, 26, 49, 13, 49, 38, 32, 18, 47, 59, 41, 41, 41, 41, 41, 41, 1, 64, 69, 23, 34, 50, 53, 1, 65, 12, 15, 24, 16, 50, 59, 30, 39, 9, 49, 34, 16, 40, 29, 69, 33, 69, 38, 0, 56, 14, 71, 32, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 11, 47, 1, 33, 19, 69, 53, 12, 51, 12, 53, 0, 66, 71, 9, 41, 41, 41, 41, 41, 41, 14, 47, 12, 31, 40, 69, 11, 24, 67, 14, 35, 38, 26, 69, 68, 41, 58, 48, 12, 40, 26, 50, 34, 12, 59, 49, 2, 56, 5, 66, 23, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 18, 64, 24, 59, 51, 49, 11, 24, 56, 24, 50, 41, 1, 41, 40, 47, 41, 41, 41, 41, 41, 41, 30, 39, 15, 39, 62, 14, 34, 16, 40, 63, 69, 22, 69, 38, 51, 41, 66, 64, 19, 49, 18, 38, 29, 2, 39, 66, 53, 12, 25, 32, 50, 64, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 30, 35, 47, 39, 70, 14, 53, 16, 49, 45, 49, 24, 41, 5, 64, 32, 41, 41, 41, 41, 41, 41, 58, 47, 58, 67, 10, 40, 26, 50, 8, 49, 62, 12, 2, 56, 32, 25, 35, 61, 49, 10, 2, 34, 28, 58, 25, 58, 24, 33, 0, 1, 47, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 39, 64, 58, 25, 66, 58, 26, 49, 13, 49, 38, 32, 18, 47, 59, 41, 41, 41, 41, 41, 41, 1, 64, 69, 23, 34, 50, 53, 1, 65, 12, 15, 24, 16, 50, 59, 30, 39, 9, 49, 34, 16, 40, 29, 69, 33, 69, 38, 0, 56, 14, 71, 32, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 11, 47, 1, 33, 19, 69, 53, 12, 51, 12, 53, 0, 66, 71, 9, 41, 41, 41, 41, 41, 41, 14, 59, 71, 46, 1, 4, 63, 45, 40, 47, 64, 51, 68, 3, 58, 14, 9, 15, 40, 18, 48, 0, 12, 34, 62, 34, 21, 44, 53, 10, 13, 1, 67, 53, 24, 51, 60, 14, 51, 24, 46, 24, 14, 50, 41, 51, 56, 47, 53, 12, 38, 49, 16, 49, 65, 49, 24, 53, 38, 26, 12, 56, 24, 59, 11, 41, 1, 4, 12, 28, 14, 9, 51, 50, 35, 44, 26, 71, 10, 36, 69, 13, 24, 10, 7, 16, 70, 1, 40, 50, 34, 43, 69, 40, 14, 14, 46, 58, 53, 56, 62, 33, 38, 24, 33, 62, 10, 49, 19, 0, 15, 26, 50, 24, 14, 63, 69, 23, 40, 1, 62, 24, 8, 49, 51, 1, 32, 49, 7, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 41, 39, 43, 53, 28, 9, 59, 18, 33, 18, 34, 4, 43, 25, 9, 44, 8, 26, 33, 30, 58, 62, 40, 45, 64, 23, 39, 44, 24, 68, 10, 34, 26, 17, 6, 34, 49, 0, 46, 11, 49, 0, 30, 66, 56, 62, 34, 10, 49, 0, 46, 43, 56, 50, 12, 38, 49, 32, 1, 49, 50, 14, 25, 69, 66, 56, 24, 22, 69, 53, 50, 65, 69, 49, 50, 41, 10, 58, 14, 58, 49, 0, 46, 59, 5, 47, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 53, 71, 40, 28, 71, 60, 4, 48, 10, 1, 14, 33, 21, 35, 47, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 44, 6, 36, 3, 33, 3, 31, 11, 56, 69, 43, 34, 48, 71, 5, 29, 23, 21, 28, 71, 44, 24, 66, 0, 29, 4, 33, 62, 24, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 14, 49, 58, 6, 72), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 39, 52, 1, 53, 50, 38, 56, 50, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 38, 52, 58, 12, 50, 4, 35, 58, 1, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 35, 52, 56, 4, 5, 5, 40, 12, 26, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 56, 52, 35, 38, 12, 36, 53, 26, 58, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 39, 52, 11, 58, 26, 39, 40, 4, 36, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 40, 52, 36, 36, 53, 58, 12, 4, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 40, 52, 26, 53, 35, 1, 4, 5, 58, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 38, 52, 5, 2, 35, 2, 36, 38, 40, 52, 19, 3, 32), t(11, 4, 16, 4, 54, 13, 29, 4, 32, 1, 49, 19, 3, 1, 32, 55, 2, 4, 8, 1, 39, 56, 57, 49, 58, 19, 49, 56, 59, 41, 60, 61, 62, 33, 3, 63, 32, 41, 41, 31, 48, 6, 64, 41, 41, 32, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 14, 49, 8, 41, 30, 45, 43, 11, 65, 28, 15, 1, 59, 41, 30, 41, 41, 59, 41, 41, 41, 41, 50, 41, 41, 25, 49, 56, 59, 21, 15, 4, 66, 61, 36, 5, 25, 9, 24, 67, 26, 40, 34, 67, 29, 45, 6, 2, 26, 7, 23, 67, 29, 28, 24, 2, 31, 58, 56, 60, 62, 41, 24, 21, 31, 56, 0, 67, 0, 41, 50, 14, 38, 33, 0, 60, 65, 28, 15, 63, 62, 59, 32, 60, 29, 47, 10, 4, 65, 56, 58, 68, 22, 69, 53, 24, 17, 68, 32, 4, 65, 59, 58, 68, 23, 5, 35, 44, 44, 30, 28, 5, 43, 28, 23, 4, 70, 23, 68, 1, 10, 7, 23, 48, 38, 3, 18, 47, 70, 28, 39, 4, 26, 21, 40, 63, 46, 68, 49, 14, 13, 41, 50, 1, 25, 3, 56, 2, 62, 30, 16, 63, 62, 61, 33, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 32, 58, 68, 29, 45, 6, 2, 26, 7, 23, 18, 29, 40, 34, 18, 29, 35, 23, 11, 70, 43, 24, 68, 13, 30, 56, 18, 10, 33, 16, 5, 66, 61, 15, 14, 31, 7, 30, 63, 70, 58, 13, 63, 31, 30, 60, 44, 47, 41, 32, 59, 26, 58, 17, 63, 31, 41, 35, 67, 19, 21, 16, 60, 34, 41, 51, 21, 31, 41, 26, 28, 13, 56, 51, 28, 25, 48, 26, 28, 19, 43, 8, 68, 25, 68, 0, 21, 44, 68, 24, 21, 25, 68, 24, 21, 25, 60, 16, 21, 44, 59, 39, 28, 44, 60, 39, 21, 19, 5, 32, 68, 46, 41, 32, 68, 46, 41, 32, 68, 46, 68, 69, 68, 25, 51, 17, 63, 70, 60, 39, 48, 6, 61, 70, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 7, 6, 63, 19, 36, 13, 4, 66, 61, 36, 5, 25, 9, 24, 67, 38, 11, 38, 11, 17, 40, 38, 21, 17, 40, 24, 5, 29, 5, 24, 21, 44, 6, 40, 18, 31, 50, 0, 21, 13, 50, 17, 21, 13, 35, 17, 63, 70, 60, 16, 5, 38, 23, 22, 11, 70, 45, 56, 67, 65, 40, 34, 68, 17, 68, 69, 68, 25, 51, 17, 63, 70, 60, 39, 61, 70, 47, 34, 60, 38, 7, 3, 5, 66, 61, 3, 2, 26, 56, 32, 5, 29, 61, 29, 18, 29, 45, 13, 2, 38, 47, 36, 14, 31, 68, 13, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 33, 16, 5, 25, 36, 13, 4, 66, 61, 36, 5, 25, 9, 24, 67, 26, 40, 34, 67, 29, 45, 6, 2, 26, 7, 23, 67, 29, 28, 24, 2, 31, 58, 56, 60, 62, 41, 24, 21, 31, 56, 0, 67, 17, 68, 32, 1, 70, 35, 8, 2, 10, 21, 39, 1, 70, 35, 0, 44, 48, 36, 58, 68, 29, 33, 36, 11, 66, 41, 39, 67, 17, 58, 22, 5, 17, 40, 33, 63, 70, 58, 13, 63, 31, 40, 19, 2, 26, 36, 24, 1, 70, 45, 0, 67, 34, 43, 22, 21, 46, 58, 16, 2, 31, 50, 13, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 28, 36, 48, 29, 47, 29, 14, 31, 7, 9, 11, 66, 61, 0, 18, 13, 50, 24, 2, 10, 21, 22, 60, 65, 61, 24, 60, 29, 48, 22, 60, 26, 58, 16, 67, 38, 33, 33, 5, 46, 50, 51, 67, 19, 41, 24, 5, 35, 61, 40, 5, 70, 48, 24, 48, 29, 47, 34, 2, 38, 47, 17, 60, 26, 47, 31, 63, 65, 60, 19, 68, 13, 30, 56, 2, 62, 41, 39, 59, 38, 7, 23, 60, 62, 61, 24, 5, 23, 61, 24, 2, 26, 0, 58, 68, 6, 45, 6, 2, 26, 7, 23, 68, 45, 30, 9, 2, 38, 61, 24, 5, 26, 33, 24, 5, 46, 30, 25, 48, 34, 60, 32, 71, 45, 11, 3, 2, 29, 61, 24, 11, 38, 21, 3, 68, 13, 30, 56, 2, 62, 30, 28, 44, 44, 3, 7, 2, 10, 28, 36, 60, 65, 40, 19, 63, 48, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 4, 65, 23, 6, 18, 6, 21, 36, 59, 19, 32, 40, 21, 19, 28, 25, 59, 6, 47, 30, 59, 34, 43, 51, 61, 44, 11, 30, 21, 34, 45, 45, 61, 19, 43, 0, 59, 34, 59, 0, 59, 19, 43, 26, 61, 48, 68, 17, 68, 13, 30, 56, 2, 62, 30, 28, 44, 44, 3, 43, 2, 26, 28, 35, 2, 65, 47, 22, 11, 43, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 63, 70, 23, 6, 18, 6, 21, 36, 59, 19, 32, 40, 21, 19, 28, 43, 59, 6, 47, 30, 59, 34, 43, 51, 61, 44, 11, 30, 21, 34, 45, 45, 61, 19, 43, 0, 59, 34, 59, 0, 59, 19, 43, 26, 61, 48, 68, 17, 68, 19, 56, 32, 14, 66, 33, 16, 5, 43, 35, 28, 18, 6, 61, 23, 5, 29, 23, 26, 63, 65, 61, 70, 5, 29, 58, 16, 68, 66, 28, 36, 48, 29, 47, 29, 18, 29, 23, 22, 5, 38, 61, 33, 2, 29, 28, 23, 31, 48, 59, 58, 68, 10, 33, 16, 5, 46, 40, 3, 4, 65, 59, 39, 59, 34, 61, 46, 18, 25, 6, 17, 21, 36, 45, 46, 61, 48, 45, 25, 21, 44, 45, 45, 28, 36, 43, 34, 21, 48, 47, 70, 21, 44, 30, 25, 28, 25, 30, 46, 21, 44, 63, 45, 59, 19, 68, 13, 68, 66, 28, 36, 48, 29, 47, 29, 18, 29, 61, 24, 60, 38, 47, 16, 63, 65, 40, 36, 31, 48, 59, 58, 68, 10, 33, 16, 5, 46, 40, 6, 4, 65, 59, 39, 59, 34, 61, 46, 18, 25, 6, 17, 21, 36, 7, 46, 61, 48, 45, 25, 21, 44, 45, 45, 28, 36, 43, 34, 21, 48, 47, 70, 21, 44, 30, 25, 28, 25, 30, 46, 21, 44, 63, 45, 59, 19, 68, 13, 67, 34, 56, 32, 14, 46, 58, 17, 63, 70, 60, 39, 61, 70, 47, 34, 60, 38, 7, 3, 5, 66, 61, 3, 2, 26, 56, 69, 68, 25, 0, 24, 5, 29, 61, 29, 18, 23, 7, 43, 61, 19, 56, 32, 14, 46, 58, 56, 18, 10, 33, 16, 5, 70, 35, 23, 11, 70, 43, 69, 68, 25, 0, 49, 1, 66, 30, 33, 60, 26, 16, 23, 11, 46, 30, 23, 2, 29, 59, 58, 68, 10, 68, 13, 14, 34, 53, 49, 53, 32, 41, 18, 59, 65, 61, 24, 60, 29, 48, 41, 63, 21, 41, 41, 41, 41, 41, 30, 49, 58, 8, 41, 33, 41, 41, 70, 30, 41, 59, 43, 30, 59, 59, 70, 30, 59, 48, 70, 46, 59, 60, 45, 30, 32, 6, 67, 46, 41, 60, 70, 46, 41, 8, 21, 46, 32, 9, 67, 46, 32, 9, 21, 43, 41, 0, 21, 25, 41, 0, 21, 25, 30, 41, 21, 25, 32, 50, 59, 25, 0, 56, 21, 43, 51, 21, 48, 45, 30, 21, 44, 66, 30, 8, 2, 70, 51, 0, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 41, 59, 5, 66, 30, 0, 36, 21, 25, 61, 32, 59, 43, 30, 32, 4, 45, 61, 43, 47, 70, 33, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 50, 12, 66, 51, 49, 49, 0, 41, 41, 61, 46, 41, 41, 69, 41, 68, 59, 25, 41, 61, 43, 41, 41, 33, 43, 30, 41, 51, 43, 30, 49, 50, 59, 41, 31, 0, 41, 30, 41, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 32, 30, 41, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 59, 41, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 61, 41, 59, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 25, 49, 26, 32, 41, 21, 41, 0, 43, 41, 41, 33, 43, 25, 43, 59, 41, 49, 41, 71, 3, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 30, 49, 49, 58, 6, 72), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 52, 5, 53, 11, 11, 26, 35, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 40, 52, 53, 58, 58, 11, 2, 11, 11, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 53, 52, 56, 26, 5, 56, 53, 5, 53, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 40, 52, 38, 35, 35, 5, 53, 35, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 39, 52, 56, 5, 12, 1, 39, 38, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 50, 52, 38, 11, 38, 40, 26, 26, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 50, 52, 58, 56, 58, 4, 36, 53, 38, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 36, 52, 11, 58, 38, 56, 5, 12, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 58, 52, 40, 40, 12, 50, 1, 39, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 53, 52, 58, 36, 2, 56, 1, 53, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 53, 52, 12, 39, 1, 5, 39, 40, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 39, 52, 11, 2, 40, 2, 11, 4, 1, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 56, 52, 12, 56, 11, 1, 12, 36, 58, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 26, 35, 52, 11, 56, 56, 40, 38, 1, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 39, 52, 50, 26, 53, 38, 1, 40, 26, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 39, 52, 5, 56, 36, 58, 4, 40, 11, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 39, 52, 2, 12, 11, 38, 38, 58, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 53, 52, 26, 1, 40, 53, 12, 36, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 56, 52, 39, 2, 2, 35, 2, 58, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 53, 52, 11, 4, 39, 1, 5, 58, 12, 52, 19, 3, 32), t(11, 4, 16, 4, 54, 13, 29, 4, 32, 1, 49, 32, 13, 12, 55, 2, 4, 8, 1, 39, 56, 57, 61, 36, 23, 70, 18, 25, 23, 33, 1, 59, 41, 16, 41, 68, 41, 41, 41, 14, 49, 49, 49, 0, 41, 41, 41, 46, 66, 49, 46, 35, 33, 28, 48, 46, 30, 43, 60, 62, 61, 33, 65, 43, 35, 59, 14, 25, 58, 56, 5, 70, 45, 19, 4, 26, 47, 36, 68, 70, 7, 23, 63, 26, 23, 22, 14, 31, 67, 24, 22, 53, 50, 13, 68, 70, 23, 6, 14, 31, 7, 62, 28, 48, 36, 0, 44, 62, 30, 25, 63, 65, 33, 3, 31, 66, 3, 17, 63, 47, 28, 39, 44, 23, 61, 19, 1, 29, 16, 19, 18, 65, 59, 13, 14, 34, 56, 32, 14, 66, 32, 39, 1, 70, 35, 0, 2, 65, 47, 36, 60, 31, 30, 56, 2, 65, 51, 22, 5, 34, 3, 56, 14, 31, 7, 33, 63, 70, 58, 13, 63, 44, 3, 22, 5, 34, 3, 16, 63, 62, 61, 33, 67, 17, 68, 32, 1, 25, 3, 56, 2, 62, 30, 36, 4, 34, 36, 13, 59, 65, 61, 24, 60, 29, 48, 32, 65, 43, 35, 59, 68, 43, 28, 24, 5, 29, 48, 32, 28, 31, 56, 34, 67, 65, 21, 0, 21, 44, 43, 32, 28, 19, 60, 22, 21, 44, 59, 35, 28, 19, 60, 51, 67, 46, 41, 17, 21, 25, 43, 17, 67, 34, 41, 17, 67, 34, 41, 26, 67, 44, 43, 36, 18, 19, 48, 26, 18, 19, 68, 38, 68, 46, 41, 32, 68, 46, 41, 32, 68, 46, 41, 13, 14, 13, 41, 50, 5, 29, 61, 29, 18, 23, 7, 43, 61, 13, 30, 56, 2, 65, 51, 22, 5, 34, 3, 17, 63, 70, 60, 58, 68, 29, 33, 36, 11, 66, 41, 39, 67, 17, 58, 38, 11, 38, 5, 22, 11, 34, 21, 22, 2, 38, 7, 10, 67, 34, 43, 40, 18, 44, 6, 24, 21, 25, 68, 24, 21, 19, 68, 16, 5, 29, 61, 29, 67, 62, 28, 40, 2, 10, 61, 33, 1, 46, 35, 22, 5, 17, 21, 13, 14, 13, 41, 50, 5, 29, 61, 29, 18, 6, 61, 23, 5, 26, 28, 17, 4, 62, 30, 36, 4, 65, 58, 22, 68, 66, 7, 6, 63, 19, 3, 33, 60, 29, 58, 35, 11, 25, 36, 13, 68, 13, 30, 56, 2, 65, 51, 22, 5, 34, 3, 56, 2, 62, 41, 58, 68, 29, 33, 36, 11, 66, 41, 39, 67, 17, 58, 22, 5, 17, 40, 33, 63, 70, 58, 13, 63, 31, 40, 19, 2, 26, 36, 24, 1, 70, 45, 0, 67, 34, 43, 22, 21, 46, 50, 13, 68, 66, 33, 16, 2, 70, 40, 34, 18, 10, 33, 16, 5, 43, 35, 28, 14, 31, 7, 9, 11, 66, 61, 0, 18, 13, 50, 24, 2, 10, 21, 22, 60, 65, 61, 24, 60, 29, 48, 22, 60, 26, 58, 16, 67, 38, 33, 33, 5, 46, 50, 51, 67, 19, 41, 24, 2, 65, 36, 24, 68, 13, 30, 56, 2, 65, 51, 22, 5, 34, 3, 34, 11, 45, 7, 23, 63, 19, 36, 13, 4, 66, 61, 36, 5, 25, 9, 24, 67, 26, 40, 34, 67, 29, 45, 6, 2, 26, 7, 23, 67, 29, 28, 24, 2, 31, 58, 56, 60, 62, 41, 24, 21, 31, 56, 0, 67, 38, 28, 48, 1, 62, 30, 23, 67, 35, 7, 23, 5, 26, 58, 35, 5, 29, 28, 23, 48, 29, 47, 29, 68, 17, 68, 32, 1, 70, 35, 0, 18, 6, 28, 17, 63, 65, 45, 36, 2, 38, 7, 48, 2, 26, 58, 8, 14, 31, 7, 30, 63, 70, 58, 13, 63, 31, 30, 59, 4, 70, 58, 36, 2, 38, 28, 9, 2, 38, 41, 32, 59, 35, 21, 26, 68, 46, 33, 62, 4, 65, 40, 6, 2, 38, 11, 34, 71, 31, 68, 32, 1, 70, 35, 0, 44, 48, 36, 39, 31, 65, 40, 34, 11, 70, 45, 22, 60, 26, 47, 7, 61, 25, 36, 13, 1, 70, 35, 0, 67, 29, 23, 3, 63, 25, 9, 26, 18, 44, 23, 30, 18, 44, 59, 40, 61, 48, 7, 70, 59, 44, 41, 51, 21, 48, 48, 38, 18, 25, 68, 56, 61, 19, 6, 0, 59, 44, 32, 40, 59, 19, 61, 43, 28, 48, 43, 26, 28, 46, 68, 32, 1, 70, 35, 0, 44, 48, 36, 39, 61, 70, 58, 19, 11, 65, 35, 23, 2, 10, 61, 7, 61, 25, 36, 13, 1, 70, 35, 0, 67, 29, 61, 3, 63, 25, 9, 26, 18, 44, 23, 30, 18, 44, 59, 40, 61, 6, 7, 70, 59, 44, 41, 51, 21, 48, 48, 38, 18, 25, 68, 56, 61, 19, 6, 0, 59, 44, 32, 40, 59, 19, 61, 43, 28, 48, 43, 26, 28, 46, 68, 69, 68, 25, 51, 56, 2, 62, 30, 28, 44, 44, 3, 43, 63, 62, 7, 3, 11, 29, 47, 6, 61, 10, 7, 24, 2, 31, 30, 34, 11, 45, 7, 23, 63, 19, 3, 3, 2, 10, 28, 36, 60, 65, 40, 19, 63, 48, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 4, 65, 23, 6, 18, 19, 60, 40, 28, 44, 59, 26, 21, 6, 61, 70, 59, 6, 63, 30, 21, 25, 43, 51, 61, 44, 5, 56, 21, 19, 33, 70, 18, 44, 30, 30, 18, 25, 23, 46, 28, 43, 59, 35, 59, 44, 60, 36, 68, 13, 30, 34, 11, 45, 7, 23, 63, 19, 3, 6, 2, 26, 28, 35, 2, 65, 47, 22, 11, 43, 23, 43, 14, 31, 7, 56, 2, 62, 41, 22, 63, 70, 23, 6, 18, 19, 60, 40, 28, 44, 59, 26, 21, 6, 48, 0, 59, 6, 63, 30, 21, 25, 43, 51, 61, 44, 5, 56, 21, 19, 33, 70, 18, 44, 30, 30, 18, 25, 23, 46, 28, 43, 59, 35, 59, 44, 60, 36, 68, 13, 50, 69, 68, 25, 0, 24, 5, 29, 61, 29, 18, 6, 61, 23, 5, 26, 28, 17, 4, 62, 30, 36, 4, 65, 58, 22, 14, 13, 41, 50, 67, 38, 7, 6, 63, 19, 3, 31, 61, 43, 60, 69, 68, 25, 0, 24, 1, 25, 3, 56, 2, 62, 30, 16, 63, 62, 61, 33, 14, 13, 41, 50, 14, 38, 33, 0, 60, 65, 28, 15, 63, 62, 59, 32, 63, 65, 40, 6, 14, 31, 7, 17, 68, 19, 50, 69, 41, 12, 49, 69, 49, 12, 34, 53, 69, 24, 10, 56, 58, 49, 2, 35, 58, 14, 14, 17, 50, 12, 25, 24, 53, 22, 38, 8, 39, 69, 15, 3, 39, 18, 12, 29, 40, 1, 44, 19, 56, 22, 66, 32, 38, 58, 53, 11, 38, 28, 24, 4, 26, 11, 19, 62, 35, 16, 62, 48, 36, 58, 67, 61, 36, 21, 49, 18, 34, 5, 34, 67, 17, 8, 10, 68, 51, 50, 2, 45, 51, 21, 14, 46, 0, 5, 46, 49, 24, 15, 26, 50, 22, 53, 64, 40, 22, 67, 1, 26, 16, 2, 31, 34, 8, 15, 70, 0, 15, 39, 39, 16, 15, 71, 22, 64, 64, 4, 13, 10, 3, 64, 65, 6, 9, 39, 71, 33, 9, 7, 69, 1, 10, 63, 17, 2, 29, 3, 29, 60, 23, 40, 4, 47, 23, 7, 18, 31, 6, 63, 46, 14, 19, 9, 26, 21, 13, 56, 64, 7, 13, 68, 1, 70, 33, 60, 31, 25, 32, 9, 70, 41, 12, 38, 40, 58, 12, 66, 16, 39, 1, 62, 33, 38, 11, 10, 47, 36, 5, 38, 7, 51, 5, 70, 58, 22, 2, 65, 51, 15, 4, 29, 23, 9, 63, 26, 63, 23, 63, 70, 28, 13, 60, 65, 30, 12, 62, 23, 35, 5, 65, 35, 3, 63, 65, 45, 11, 65, 47, 47, 61, 44, 48, 23, 45, 59, 44, 36, 40, 28, 44, 43, 16, 71, 31, 48, 33, 66, 61, 6, 47, 43, 59, 36, 7, 30, 59, 25, 50, 69, 14, 44, 0, 53, 18, 19, 6, 56, 28, 34, 60, 35, 28, 25, 21, 17, 21, 44, 41, 24, 67, 13, 36, 8, 71, 17, 9, 3, 71, 46, 5, 29, 7, 31, 59, 19, 68, 13, 43, 32, 66, 51, 56, 11, 66, 30, 8, 4, 70, 61, 32, 62, 45, 33, 48, 48, 43, 51, 68, 61, 43, 41, 50, 18, 25, 59, 0, 67, 46, 32, 6, 68, 30, 0, 60, 45, 30, 41, 21, 46, 41, 59, 41, 41, 68, 12, 6, 43, 41, 41, 41, 41, 41, 41, 41, 8, 41, 41, 41, 41, 41, 66, 6, 41, 67, 59, 41, 41, 41, 23, 46, 43, 19, 39, 10, 67, 53, 59, 69, 19, 10, 67, 44, 4, 13, 53, 14, 1, 24, 14, 8, 14, 33, 22, 7, 68, 23, 22, 4, 7, 3, 22, 15, 71, 16, 22, 56, 67, 51, 49, 7, 21, 35, 49, 4, 28, 40, 49, 15, 18, 58, 49, 56, 14, 25, 41, 64, 66, 51, 71, 67, 51, 13, 43, 0, 64, 23, 50, 17, 29, 50, 0, 29, 28, 31, 64, 12, 48, 64, 24, 65, 71, 34, 65, 64, 38, 38, 71, 53, 38, 46, 0, 39, 67, 51, 69, 31, 17, 69, 60, 51, 18, 64, 58, 12, 11, 41, 32, 41, 53), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 53, 27, 35, 52, 53, 53, 56, 5, 2, 5, 11, 52, 3, 10, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 50, 52, 39, 40, 11, 12, 12, 39, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 50, 52, 5, 56, 39, 12, 36, 5, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 38, 52, 26, 5, 39, 50, 56, 4, 36, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 39, 52, 35, 2, 11, 2, 26, 2, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 26, 52, 26, 36, 58, 35, 36, 40, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 52, 58, 35, 50, 58, 56, 56, 50, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 26, 36, 52, 5, 56, 26, 4, 39, 53, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 56, 52, 11, 5, 58, 40, 11, 1, 36, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 26, 52, 1, 12, 5, 38, 35, 38, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 26, 52, 2, 56, 12, 56, 38, 5, 26, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 26, 52, 5, 4, 5, 2, 58, 39, 36, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 35, 52, 35, 38, 56, 5, 35, 38, 1, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 53, 52, 1, 39, 12, 26, 38, 56, 4, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 58, 52, 40, 4, 39, 12, 12, 1, 58, 52, 19, 3, 32), t(5, 4, 23, 23, 12, 10), t(8, 5, 15, 13, 3, 16), t(8, 15, 5), t(73, 16, 72), t(24, 4, 23, 22, 1, 18, 12), t(25, 4, 16, 1), t(33, 1, 4, 11), t(15, 1, 29, 9, 24, 1, 46, 33, 13, 23, 11), t(15, 1, 29, 9, 24, 1, 43, 24, 1, 10, 16, 67, 13, 8, 16, 1, 10, 1, 15), t(4, 11, 11, 43, 24, 1, 10, 16, 67, 13, 8, 16, 1, 10, 1, 15), t(60, 4, 35, 9), t(11, 1, 2, 22, 32), t(74, 22, 15, 23, 10, 4, 29, 1, 72), t(15, 1, 3, 23, 4, 5, 1), t(8, 3, 23, 13, 16), t(33, 15, 1, 12), t(23, 9, 5, 4, 16, 13, 9, 10), t(75), t(37, 26, 39), t(37, 38, 45), t(8, 33, 4, 15, 1, 48, 61, 67), t(73, 16, 13, 29, 1, 72), t(5, 9, 10, 12, 13, 32), t(0, 51), t(4, 3, 3, 68, 11), t(16, 13, 29, 1, 8, 16, 4, 29, 3), t(10, 9, 10, 5, 1, 31, 16, 15), t(8, 13, 32, 10, 4, 16, 22, 15, 1), t(5, 33, 1, 5, 6, 7, 8, 41, 3, 13), t(9, 10, 21, 1, 10, 22, 31, 33, 4, 15, 1, 44, 13, 29, 1, 23, 13, 10, 1), t(9, 10, 21, 1, 10, 22, 31, 33, 4, 15, 1, 41, 3, 3, 21, 1, 8, 8, 4, 32, 1), t(9, 10, 21, 1, 10, 22, 31, 33, 4, 15, 1, 59, 59), t(9, 10, 21, 1, 10, 22, 31, 33, 4, 15, 1, 65, 1, 13, 2, 9), "", t(9, 10, 33, 4, 8, 33, 5, 33, 4, 10, 32, 1), t(11, 9, 5, 22, 29, 1, 10, 16, 21, 9, 11, 1), 8, t(16, 13, 16, 23, 1), t(11, 1, 8, 5), t(13, 29, 32, 48, 15, 23), t(4, 23, 1, 15, 16), t(0, 51, 52, 1, 15, 15, 9, 15, 54, 76), t(8, 1, 16, 68, 10, 16, 1, 15, 24, 4, 23), t(13, 8, 66, 4, 8, 33, 46, 33, 4, 10, 32, 1, 11), 150, t(40, 66, 60, 19), t(25, 1, 33, 10), t(3, 44, 12, 2), t(26, 6, 13, 70), t(3, 9, 41, 56), t(25, 12, 59, 44), t(46, 29, 44, 22), t(24, 46, 8, 43), t(14, 62, 47, 59), t(29, 33, 66, 23), t(53, 69, 22, 65), t(25, 11, 50, 0), t(28, 60, 51, 18), t(22, 8, 1, 15, 41, 32, 1, 10, 16), t(10, 4, 24, 13, 32, 4, 16, 9, 15), t(4, 3, 3, 47, 1, 15, 8, 13, 9, 10), t(13, 10, 11, 1, 51, 18, 12), t(41, 3, 3, 23, 1, 65, 1, 2, 71, 13, 16), t(29, 4, 16, 5, 33), t(41, 10, 11, 15, 9, 13, 11), t(67, 13, 10, 22, 51), t(21, 13, 5, 15, 9, 21, 1, 8, 8, 1, 10, 32, 1, 15), t(64, 64, 10, 1, 0, 8), t(0, 1, 13, 2, 9), t(59, 59), t(13, 8, 44, 30, 31), t(16, 2, 8, 47, 1, 15, 8, 13, 9, 10), t(36, 38, 39, 58, 36, 36), t(13, 8, 61, 13, 32, 33, 16, 43, 24, 1, 10, 16), t(36, 38, 39, 50, 56, 58), t(22, 8, 1, 66, 40, 14, 23, 4, 17), t(13, 8, 59, 59, 30, 15, 9, 0, 8, 1, 15), t(59, 59, 47, 1, 15, 8, 13, 9, 10), t(53, 52, 26), t(16, 9, 67, 9, 0, 1, 15, 46, 4, 8, 1), t(2, 15, 9, 0, 8, 1, 15, 67, 4, 10, 32, 22, 4, 32, 1), t(23, 4, 10, 32, 22, 4, 32, 1), t(29, 22, 8, 13, 5), t(3, 9, 8), t(5), t(22, 8, 1, 15, 14, 4, 22, 8, 1), t(29, 22, 8, 13, 5, 14, 23, 4, 17), t(29, 22, 8, 13, 5, 31, 33, 9, 0), t(2), t(22, 8, 1, 15, 41, 5, 16, 13, 9, 10, 14, 4, 22, 8, 1), t(29, 22, 8, 13, 5, 41, 5, 16, 13, 9, 10, 14, 23, 4, 17), t(3, 4, 22, 8, 1, 11), t(21, 1, 11, 13, 4), t(13, 8, 21, 22, 8, 13, 5, 14, 23, 4, 17), t(32, 1, 16, 43, 23, 1, 29, 1, 10, 16, 30, 17, 68, 11), t(29, 1, 11, 13, 4), t(16, 9, 22, 5, 33, 8, 16, 4, 15, 16), t(42, 10, 1, 51, 16, 44, 13, 5, 6), t(65, 1, 13, 51, 13, 10, 7, 31, 30, 15, 13, 11, 32, 1, 61, 1, 4, 11, 17), t(29, 22, 8, 13, 5, 27, 0, 15, 4, 3), t(13, 8, 21, 22, 8, 13, 5, 31, 33, 9, 0), t(2, 16, 10), t(20, 24), t(76), t(4, 22, 11, 13, 9), t(23, 9, 9, 3), t(11, 4, 16, 4, 27, 24, 27, 53, 35, 2, 5, 2, 39, 4, 36), t(29, 24, 66, 59), t(5, 4, 23, 23, 2, 4, 5, 6, 20), t(32, 1, 16, 44, 13, 29, 1), t(74), t(73), t(72), t(5, 4, 23, 23, 2, 4, 5, 6, 72), t(2, 9, 11, 17), t(33, 16, 16, 3, 54, 49, 49, 34, 23, 52, 64, 22, 11, 4, 9, 8, 22, 19, 13, 4, 10, 52, 5, 9, 29, 49, 0, 1, 13, 51, 13, 10, 31, 25, 71, 49, 19, 8, 8, 11, 6, 41, 7, 41, 62, 52, 3, 33, 3), t(77, 78, 79, 68, 28, 31, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90), t(35, 50, 91, 92, 83, 93, 94, 95, 96, 97, 98, 97, 99, 46, 100, 101, 102, 83, 84, 85, 94, 103, 104, 98, 105, 99), t(33, 16, 16, 3, 54, 49, 49, 34, 23, 26, 52, 64, 22, 11, 4, 9, 8, 22, 19, 13, 4, 10, 52, 5, 9, 29, 49, 29, 49, 5, 33, 4, 32, 22, 11, 13, 49, 8, 16, 4, 16, 13, 5, 49, 0, 51, 38, 36, 36, 52, 19, 3, 32), t(58, 58, 35, 65), t(36, 71, 12, 67), t(1, 15, 65, 67), t(61, 46, 26, 46), t(7, 51, 69, 36), t(4, 3, 3), t(33, 16, 16, 3, 54, 49, 49, 34, 23, 26, 52, 64, 22, 11, 4, 9, 8, 22, 19, 13, 4, 10, 52, 5, 9, 29, 49, 24, 4, 23, 13, 11, 4, 16, 1, 49, 13, 10, 11, 1, 51, 52, 3, 33, 3, 74, 5, 4, 23, 23, 2, 4, 5, 6, 72, 5, 4, 23, 23, 12, 10), t(21, 22, 8, 13, 5), t(36, 52, 50, 15, 1, 29), t(36, 52, 53, 15, 1, 29), t(33, 16, 16, 3, 54, 49, 49, 4, 22, 11, 13, 9, 52, 5, 10, 10, 19, 13, 11, 5, 52, 5, 9, 29, 49, 5, 33, 4, 32, 22, 11, 13, 49, 5, 33, 4, 32, 22, 11, 13, 27, 29, 27, 8, 34, 52, 29, 3, 38), t(15, 9, 22, 16, 1, 15, 27, 24, 13, 1, 0), t(2, 18, 11, 68), t(13, 8, 48, 8, 1, 15, 14, 4, 22, 8, 1), t(5, 9, 29, 29, 13, 16), t(8, 16, 4, 16, 1), t(48, 31, 43, 61, 20, 14, 41, 48, 31, 43), t(21, 48, 31, 68, 46, 20, 14, 67, 41, 60), t(21, 48, 31, 68, 46, 20, 31, 66, 18, 65), t(22, 8, 1), t(4), t(31, 16, 9, 15, 1), t(49, 9, 5, 64), t(60, 4, 48, 0), t(5, 9, 24, 1, 15), t(32, 1, 16, 43, 23, 1, 29, 1, 10, 16, 8, 30, 17, 46, 23, 4, 8, 8, 28, 4, 29, 1), t(16, 9, 22, 5, 33, 29, 9, 24, 1), t(3, 22, 8, 33), t(42, 15, 9, 22, 16, 1, 15), t(33, 9, 29, 1), t(5, 23, 1, 4, 15, 44, 13, 29, 1, 9, 22, 16), t(16), t(15, 9, 22, 16, 1, 15, 27, 23, 13, 10, 6), t(49, 33, 9, 29, 1), t(5, 9, 24, 1, 15, 27, 23, 9, 32, 9, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 3, 22, 12, 12, 68, 10, 27, 8, 29, 4), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 35, 76, 11, 1, 23, 4, 17, 27, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 26, 76, 11, 1, 23, 4, 17, 27, 38, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 38, 76, 11, 1, 23, 4, 17, 27, 38, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 13, 8, 33), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 56, 76, 11, 1, 23, 4, 17, 27, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 40), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 39), t(5, 9, 24, 1, 15, 27, 13, 29, 32, 53, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(11, 4, 16, 4, 27, 24, 27, 2, 39, 4, 53, 26, 53, 40, 5), t(33, 9, 29, 1, 27, 2, 32), t(33, 9, 29, 1, 27, 13, 29, 32, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(33, 9, 29, 1, 27, 13, 29, 32, 26, 76, 11, 1, 23, 4, 17, 27, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(49, 8, 5, 6, 19), t(33, 9, 29, 1, 27, 13, 10, 11, 1, 51, 76, 33, 9, 29, 1, 27, 8, 5, 6, 19, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 13, 10, 5, 23, 13, 10, 1, 61, 13, 32, 33, 16), t(33, 9, 29, 1, 27, 19, 16, 27, 0, 4, 15, 3, 76, 11, 1, 23, 4, 17, 27, 35, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(33, 9, 29, 1, 27, 19, 16, 76, 11, 1, 23, 4, 17, 27, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 15, 13, 32, 33, 16, 70, 22, 13, 11, 1), t(49, 3, 3, 64, 17), t(33, 9, 29, 1, 27, 13, 10, 11, 1, 51, 76, 33, 9, 29, 1, 27, 3, 3, 64, 17, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 13, 10, 5, 23, 13, 10, 1, 61, 13, 32, 33, 16), t(49, 51, 29, 17, 8), t(33, 9, 29, 1, 27, 13, 10, 11, 1, 51, 76, 33, 9, 29, 1, 27, 51, 29, 17, 8, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 13, 10, 5, 23, 13, 10, 1, 61, 13, 32, 33, 16), t(49, 5, 3, 17, 8), t(33, 9, 29, 1, 27, 13, 10, 11, 1, 51, 76, 33, 9, 29, 1, 27, 5, 3, 17, 8, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 13, 10, 5, 23, 13, 10, 1, 61, 13, 32, 33, 16), t(49, 11, 51, 17, 8), t(33, 9, 29, 1, 27, 13, 10, 11, 1, 51, 76, 33, 9, 29, 1, 27, 11, 51, 17, 8, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 13, 10, 5, 23, 13, 10, 1, 61, 13, 32, 33, 16), t(49, 34, 2, 12, 5), t(33, 9, 29, 1, 27, 13, 10, 11, 1, 51, 76, 33, 9, 29, 1, 27, 34, 2, 12, 5, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 13, 10, 5, 23, 13, 10, 1, 61, 13, 32, 33, 16), t(33, 9, 29, 1, 27, 13, 29, 32, 38), t(11, 4, 16, 4, 27, 24, 27, 1, 56, 36, 12, 58, 56, 5, 1), t(8, 5, 6, 19), t(50, 26, 3, 64), t(4, 7, 48, 61), t(23, 19, 45, 10), t(14, 22, 40, 49), t(69, 61, 62, 63), t(38, 64, 34, 56), t(43, 66, 0, 46), t(66, 62, 15, 24), t(21, 38, 43, 19), t(10, 16, 39, 7), t(67, 15, 48, 12), t(71, 26, 30, 34), t(39, 17, 0, 66), t(3, 56, 59, 7), t(8, 28, 47, 33), t(9, 67, 26, 6), t(21, 49, 34, 59), t(16, 6, 53, 30), t(9, 11, 61, 51), t(29, 4, 13, 10, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 2, 9, 22, 10, 5, 1, 76, 23, 9, 9, 3), t(13, 29, 32, 27, 2, 9, 51), t(13, 29, 32), t(23, 4, 34, 17), t(24, 27, 23, 4, 34, 17), t(8, 5, 6, 19, 13, 29, 32, 35), t(8, 5, 6, 19, 13, 29, 32, 26), t(8, 5, 6, 19, 13, 29, 32, 38), t(8, 5, 6, 19, 13, 29, 32, 56), t(8, 5, 6, 19, 13, 29, 32, 40), t(8, 5, 6, 19, 13, 29, 32, 39), t(8, 5, 6, 19, 13, 29, 32, 53), t(8, 5, 6, 19, 13, 29, 32, 50), t(8, 5, 6, 19, 13, 29, 32, 58), t(8, 5, 6, 19, 13, 29, 32, 35, 36), t(8, 5, 6, 19, 13, 29, 32, 35, 35), t(8, 5, 6, 19, 13, 29, 32, 35, 26), t(8, 5, 6, 19, 13, 29, 32, 35, 38), t(24, 27, 23, 4, 34, 17, 54, 2, 4, 5, 6, 32, 15, 9, 22, 10, 11, 27, 13, 29, 4, 32, 1), t(8, 5, 6, 19, 13, 29, 32, 35, 56), t(2, 4, 5, 6, 32, 15, 9, 22, 10, 11, 27, 13, 29, 4, 32, 1), t(8, 5, 6, 19, 27, 32, 13, 12), t(8, 5, 6, 19, 13, 29, 32, 35, 56, 27, 35), t(8, 5, 6, 19, 13, 29, 32, 35, 56, 27, 26), t(8, 5, 6, 19, 13, 29, 32, 35, 40), t(8, 5, 6, 19, 13, 29, 32, 35, 39), t(8, 5, 6, 19, 13, 29, 32, 35, 53), t(8, 5, 6, 19, 13, 29, 32, 35, 50), t(8, 5, 6, 19, 13, 29, 32, 35, 58), t(12, 9, 9, 16, 1, 15), t(12, 9, 9, 16, 1, 15, 27, 13, 10, 11, 1, 51), t(105, 98, 106), t(8, 5, 6, 19, 27, 2, 4, 10), t(8, 5, 6, 19, 27, 13, 29, 32, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(8, 5, 6, 19, 27, 13, 29, 32, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 35, 76, 34, 9, 9, 29, 68, 10), t(8, 5, 6, 19, 27, 13, 29, 32, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 26, 76, 12, 4, 11, 1, 68, 10), t(8, 5, 6, 19, 27, 13, 29, 32, 56), t(8, 5, 6, 19, 27, 13, 29, 32, 40), t(2, 4, 10, 27, 13, 29, 32, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10, 35, 76, 23, 9, 9, 3, 76, 4, 10, 13, 29, 4, 16, 1, 11), t(11, 4, 16, 4, 27, 24, 27, 35, 1, 36, 39, 1, 53, 36, 4), t(53, 59, 44, 32), t(3, 3, 64, 17), t(33, 9, 15, 13, 34, 9, 10, 16, 4, 23), 0, t(4, 22, 16, 9, 3, 23, 4, 17), t(36, 10, 45, 17), t(71, 60, 21, 4), t(36, 35, 31, 38), t(71, 47, 61, 4), t(0, 23, 17, 32), t(46, 61, 58, 44), t(47, 39, 64, 14), t(8, 0, 13, 3, 1, 15), t(8, 0, 13, 3, 1, 15, 31, 23, 13, 11, 1), t(3, 3, 64, 17, 13, 29, 32, 35), t(3, 3, 64, 17, 13, 29, 32, 26), t(3, 3, 64, 17, 13, 29, 32, 38), t(3, 3, 64, 17, 13, 29, 32, 56), t(3, 3, 64, 17, 13, 29, 32, 40), t(3, 3, 64, 17, 13, 29, 32, 39), t(3, 3, 64, 17, 13, 29, 32, 53), t(29, 17, 31, 0, 13, 3, 1, 15), t(8, 0, 13, 3, 1, 15, 18, 3, 16, 13, 9, 10), t(8, 0, 13, 3, 1, 15, 27, 8, 23, 13, 11, 1), t(66, 62, 53, 31), t(63, 7, 17, 35), t(3, 3, 64, 17, 13, 29, 32, 53, 27, 11, 13, 4, 10), t(3, 3, 64, 17, 13, 29, 32, 53, 27, 51, 8, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 23, 1, 12, 16, 70, 22, 13, 11, 1), t(3, 3, 64, 17, 13, 29, 32, 50), t(12, 9, 9, 16, 1, 15, 27, 23, 1, 12, 16), t(107, 98, 106), t(12, 9, 9, 16, 1, 15, 27, 15, 13, 32, 33, 16), t(3, 3, 64, 17, 27, 2, 4, 10), t(3, 3, 64, 17, 27, 13, 29, 32, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(3, 3, 64, 17, 27, 13, 29, 32, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 26, 76, 12, 4, 11, 1, 68, 10), t(3, 3, 64, 17, 27, 13, 29, 32, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 34, 9, 9, 29, 68, 10), t(3, 3, 64, 17, 27, 13, 29, 32, 56, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 12, 4, 11, 1, 68, 10), t(3, 3, 64, 17, 27, 13, 29, 32, 40), t(3, 3, 64, 17, 27, 13, 29, 32, 39), t(11, 4, 16, 4, 27, 24, 27, 39, 36, 35, 1, 2, 12, 11, 53), t(32, 38, 70, 19), t(40, 67, 68, 6), t(51, 29, 17, 8), t(24, 13, 11, 1, 9, 49, 29, 3, 56), t(33, 16, 16, 3, 54, 49, 49, 24, 13, 11, 1, 9, 52, 5, 10, 10, 19, 13, 11, 5, 52, 5, 9, 29, 49, 5, 33, 4, 32, 22, 11, 13, 49, 5, 32, 11, 27, 24, 13, 11, 1, 9, 27, 1, 10, 11, 52, 29, 3, 56), t(3, 23, 4, 17, 4, 2, 13, 23, 13, 16, 17), t(51, 49, 24, 56), t(59, 35, 41, 14), t(67, 31, 3, 5), t(49, 58, 4, 18), t(3, 59, 46, 50), t(2, 65, 7, 6), t(25, 2, 35, 30), t(30, 30, 48, 62), t(31, 60, 38, 64), t(2, 40, 32, 5), t(61, 11, 66, 43), t(15, 47, 8, 2), t(67, 68, 3, 61), t(22, 2, 3, 47), t(10, 3, 3, 65), t(39, 28, 39, 66), t(59, 12, 36, 43), t(47, 71, 30, 9), t(0, 2, 15, 29), t(23, 31, 2, 64), t(62, 60, 5, 25), t(25, 35, 39, 28), t(24, 13, 11, 1, 9, 14, 23, 4, 17, 1, 15), t(42, 15, 1, 12, 8), t(32, 1, 16, 43, 23, 1, 29, 1, 10, 16, 8, 30, 17, 44, 4, 32, 28, 4, 29, 1), t(1, 23, 20), t(51, 40, 27, 3, 23, 4, 17, 8, 13, 10, 23, 13, 10, 1), t(16, 15, 22, 1), t(51, 29, 17, 8, 27, 2, 4, 10, 10, 1, 15), t(51, 29, 17, 8, 27, 16, 1, 51, 16, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(51, 29, 17, 8, 27, 16, 1, 51, 16, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 26, 76, 12, 4, 11, 1, 68, 10), t(51, 29, 17, 8, 27, 16, 13, 16, 23, 1, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 34, 9, 9, 29, 68, 10), t(51, 29, 17, 8, 27, 16, 1, 51, 16, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 12, 4, 11, 1, 68, 10), t(24, 19, 8, 27, 5, 22, 8, 16, 9, 29, 27, 8, 6, 13, 10), t(3, 23, 4, 17, 1, 15, 18, 3, 16, 13, 9, 10, 8), t(9, 10, 14, 23, 4, 17, 1, 15, 14, 23, 4, 17), t(9, 10, 14, 23, 4, 17, 1, 15, 14, 4, 22, 8, 1), t(9, 10, 14, 23, 4, 17, 1, 15, 43, 10, 11, 1, 11), t(9, 10, 14, 23, 4, 17, 1, 15, 67, 9, 4, 11, 1, 11, 11, 4, 16, 4), t(9, 10, 14, 23, 4, 17, 1, 15, 65, 4, 13, 16, 13, 10, 32), t(9, 10, 14, 23, 4, 17, 1, 15, 14, 23, 4, 17, 13, 10, 32), t(9, 10, 14, 23, 4, 17, 1, 15, 44, 13, 29, 1, 22, 3, 11, 4, 16, 1), t(9, 10, 14, 23, 4, 17, 1, 15, 46, 4, 10, 3, 23, 4, 17), t(9, 10, 14, 23, 4, 17, 1, 15, 46, 4, 10, 3, 23, 4, 17, 16, 33, 15, 9, 22, 32, 33), t(3, 23, 4, 17, 1, 15, 61, 1, 4, 11, 13, 1, 11), t(3, 23, 4, 17, 1, 15, 31, 16, 4, 16, 1, 46, 33, 4, 10, 32, 1, 11), t(51, 29, 17, 8, 27, 16, 1, 51, 16, 56), t(51, 29, 17, 8, 27, 19, 16, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10, 35, 76, 23, 9, 9, 3), t(51, 29, 17, 8, 13, 29, 32, 35), t(51, 29, 17, 8, 13, 29, 32, 26), t(51, 29, 17, 8, 13, 29, 32, 38), t(51, 29, 17, 8, 27, 13, 29, 32, 38), t(13, 29, 32, 38, 27, 32, 13, 12), t(51, 29, 17, 8, 13, 29, 32, 56), t(51, 29, 17, 8, 13, 29, 32, 40), t(51, 29, 17, 8, 13, 29, 32, 39), t(51, 29, 17, 8, 13, 29, 32, 53), t(51, 29, 17, 8, 13, 29, 32, 50), t(51, 29, 17, 8, 13, 29, 32, 58), t(51, 29, 17, 8, 13, 29, 32, 35, 36), t(51, 29, 17, 8, 13, 29, 32, 35, 35), t(51, 29, 17, 8, 13, 29, 32, 35, 26), t(51, 29, 17, 8, 13, 29, 32, 35, 38), t(51, 29, 17, 8, 13, 29, 32, 35, 56), t(51, 29, 17, 8, 13, 29, 32, 35, 40), t(51, 29, 17, 8, 13, 29, 32, 35, 39), t(51, 29, 17, 8, 13, 29, 32, 35, 53), t(51, 29, 17, 8, 13, 29, 32, 35, 50), t(51, 29, 17, 8, 13, 29, 32, 35, 58), t(51, 29, 17, 8, 13, 29, 32, 26, 36), t(51, 29, 17, 8, 13, 29, 32, 26, 35), t(11, 4, 16, 4, 27, 24, 27, 39, 12, 58, 53, 1, 38, 36, 36), t(5, 3, 17, 8), t(52, 8, 0, 13, 3, 1, 15, 27, 3, 4, 32, 13, 10, 4, 16, 13, 9, 10), t(29, 17, 27, 3, 4, 32, 13, 10, 4, 16, 13, 9, 10, 27, 33, 13, 11, 11, 1, 10), t(65, 5, 71, 49), t(47, 19, 68, 60), t(33, 14, 61, 38), t(50, 63, 41, 65), t(49, 14, 46, 5), t(22, 62, 39, 18), t(33, 44, 68, 29), t(31, 18, 9, 40), t(41, 59, 66, 44), t(5, 8, 30, 28), t(33, 63, 23, 45), t(7, 38, 69, 71), t(23, 2, 11, 28), t(10, 23, 48, 18), t(43, 45, 19, 53), t(50, 14, 15, 24), t(58, 22, 35, 39), t(0, 8, 9, 7), t(71, 68, 34, 21), t(5, 3, 17, 8, 13, 29, 32, 35), t(5, 3, 17, 8, 27, 13, 29, 32, 26), t(8, 0, 13, 3, 1, 15, 27, 0, 4, 15, 3), t(17, 41, 29, 23), t(48, 7, 68, 68), t(4, 0, 66, 36), t(59, 53, 0, 8), t(4, 41, 8, 29), t(25, 58, 40, 60), t(30, 1, 28, 0), t(41, 18, 15, 11), t(41, 6, 63, 21), t(8, 0, 13, 3, 1, 15, 27, 3, 4, 32, 13, 10, 4, 16, 13, 9, 10), t(3, 4, 32, 13, 10, 4, 16, 13, 9, 10), t(8, 5, 17, 8, 27, 51, 8, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 23, 1, 12, 16, 70, 22, 13, 11, 1), t(5, 3, 17, 8, 13, 29, 32, 38), t(5, 3, 17, 8, 27, 13, 29, 32, 38), t(5, 3, 17, 8, 13, 29, 32, 56), t(5, 3, 17, 8, 13, 29, 32, 40), t(5, 3, 17, 8, 13, 29, 32, 39), t(5, 3, 17, 8, 13, 29, 32, 53), t(5, 3, 17, 8, 13, 29, 32, 50), t(5, 3, 17, 8, 13, 29, 32, 58), t(5, 3, 17, 8, 13, 29, 32, 35, 36), t(5, 3, 17, 8, 13, 29, 32, 35, 35), t(5, 3, 17, 8, 13, 29, 32, 35, 26), t(5, 3, 17, 8, 13, 29, 32, 35, 38), t(5, 3, 17, 8, 13, 29, 32, 35, 56), t(5, 3, 17, 8, 13, 29, 32, 35, 40), t(5, 3, 17, 8, 13, 29, 32, 35, 39), t(5, 3, 17, 8, 13, 29, 32, 35, 53), t(5, 3, 17, 8, 13, 29, 32, 35, 50), t(5, 3, 17, 8, 13, 29, 32, 35, 58), t(5, 3, 17, 8, 13, 29, 32, 26, 36), t(5, 3, 17, 8, 27, 2, 4, 10, 10, 1, 15), t(5, 3, 17, 8, 27, 16, 1, 51, 16, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(5, 3, 17, 8, 27, 16, 1, 51, 16, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 26, 76, 12, 4, 11, 1, 68, 10), t(5, 3, 17, 8, 27, 16, 13, 16, 23, 1, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 34, 9, 9, 29, 68, 10), t(5, 3, 17, 8, 27, 16, 1, 51, 16, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 12, 4, 11, 1, 68, 10), t(5, 3, 17, 8, 27, 2, 4, 10, 10, 1, 15, 27, 13, 29, 32, 35), t(5, 3, 17, 8, 27, 16, 1, 51, 16, 56), t(5, 3, 17, 8, 27, 2, 4, 10, 10, 1, 15, 27, 13, 29, 32, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 40, 76, 8, 23, 13, 11, 1, 68, 10, 61, 13, 32, 33, 16), t(5, 3, 17, 8, 27, 19, 16, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10, 35, 76, 23, 9, 9, 3, 76, 4, 10, 13, 29, 4, 16, 1, 11), t(11, 4, 16, 4, 27, 24, 27, 53, 39, 40, 38, 4, 58, 26, 5), t(29, 16, 65, 21), t(11, 51, 17, 8), t(71, 68, 46, 35), t(65, 60, 13, 41), t(51, 66, 3, 7), t(46, 23, 60, 34), t(50, 25, 30, 35), t(47, 7, 28, 69), t(65, 64, 53, 31), t(14, 8, 21, 24), t(8, 22, 70, 49), t(10, 14, 50, 22), t(16, 22, 58, 30), t(1, 24, 19, 0), t(24, 9, 12, 8), t(59, 53, 15, 47), t(12, 22, 51, 71), t(7, 56, 7, 11), t(16, 33, 1, 10), t(32, 1, 16), t(52, 49, 8, 16, 4, 16, 13, 5, 49, 11, 4, 16, 4, 52, 19, 8, 74, 16, 72), t(29, 9, 10, 1, 17), t(11, 4, 16, 4), t(11, 51, 17, 8, 13, 29, 32, 35), t(11, 51, 17, 8, 13, 29, 32, 26), t(11, 51, 17, 8, 13, 29, 32, 38), t(11, 51, 17, 8, 13, 29, 32, 56), t(11, 51, 17, 8, 13, 29, 32, 40), t(11, 51, 17, 8, 27, 13, 29, 32, 40), t(13, 29, 32, 40, 27, 16, 1, 51, 16), t(20, 8), t(11, 13, 4, 10, 21, 9, 10, 1, 17, 18, 10, 1), 2, t(11, 51, 17, 8, 13, 29, 32, 39), t(11, 51, 17, 8, 27, 13, 29, 32, 39), t(11, 51, 17, 8, 27, 13, 29, 32, 39, 27, 32, 13, 12), t(13, 29, 32, 39, 27, 16, 1, 51, 16), t(11, 13, 4, 10, 21, 9, 10, 1, 17, 44, 0, 9), t(11, 51, 17, 8, 13, 29, 32, 53), t(11, 51, 17, 8, 13, 29, 32, 50), t(11, 51, 17, 8, 13, 29, 32, 58), t(11, 51, 17, 8, 13, 29, 32, 35, 36), t(11, 51, 17, 8, 27, 13, 29, 32, 35, 36), t(13, 29, 32, 35, 36, 27, 16, 1, 51, 16), t(11, 13, 4, 10, 21, 9, 10, 1, 17, 44, 33, 15, 1, 1), t(11, 51, 17, 8, 13, 29, 32, 35, 35), t(11, 51, 17, 8, 13, 29, 32, 35, 26), t(11, 51, 17, 8, 27, 13, 29, 32, 35, 26), t(2, 23, 22, 1, 27, 16, 4, 2), t(16, 4, 2, 23, 1), t(5, 1, 10, 16, 1, 15), t(16, 15), t(16, 11), t(11, 4, 13, 23, 13, 44, 4, 2, 23, 1, 21, 9, 10, 1, 17), t(40), t(17, 22, 10, 17, 13, 10, 32, 21, 9, 10, 1, 17), 3, t(11, 51, 17, 8, 13, 29, 32, 35, 38), t(11, 51, 17, 8, 13, 29, 32, 35, 56), t(11, 51, 17, 8, 13, 29, 32, 35, 40), t(11, 51, 17, 8, 13, 29, 32, 35, 39), t(11, 51, 17, 8, 27, 2, 4, 10, 10, 1, 15), t(11, 51, 17, 8, 27, 16, 1, 51, 16, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(11, 51, 17, 8, 27, 16, 1, 51, 16, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 26, 76, 12, 4, 11, 1, 68, 10), t(11, 51, 17, 8, 27, 16, 13, 16, 23, 1, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 34, 9, 9, 29, 68, 10), t(11, 51, 17, 8, 27, 16, 1, 51, 16, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 12, 4, 11, 1, 68, 10), t(11, 51, 17, 8, 27, 16, 1, 51, 16, 56), t(11, 51, 17, 8, 27, 2, 4, 10, 10, 1, 15, 27, 13, 29, 32, 35), t(11, 51, 17, 8, 27, 2, 4, 10, 10, 1, 15, 27, 13, 29, 32, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 40, 76, 8, 23, 13, 11, 1, 68, 10, 67, 1, 12, 16), t(11, 51, 17, 8, 27, 19, 16, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10, 35, 76, 23, 9, 9, 3, 76, 4, 10, 13, 29, 4, 16, 1, 11), t(17, 1, 23, 23, 9, 0, 27, 16, 4, 2), t(17, 1, 23, 23, 9, 0, 27, 16, 1, 51, 16), t(108, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 109, 110, 111, 112, 108, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76), t(2, 15), t(76, 113, 114, 115, 116, 108, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76), t(76, 117, 114, 115, 116, 108, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76), t(76, 98, 114, 115, 116, 108, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76), t(76, 118, 119, 109, 110, 49, 115, 116, 108, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76), t(16, 1, 51, 16, 35, 76, 16, 1, 51, 16, 35, 27, 35), t(120, 121, 122, 123), t(16, 1, 51, 16, 35, 76, 16, 1, 51, 16, 35, 27, 26), t(124, 125, 126, 127, 122), t(11, 4, 16, 4, 27, 24, 27, 35, 35, 36, 11, 12, 50, 53, 5), t(34, 2, 12, 5), t(63, 51, 3, 59), t(62, 17, 51, 38), t(8, 61, 31, 45), t(43, 61, 66, 17), t(3, 30, 26, 33), t(58, 28, 51, 56), t(43, 34, 7, 69), t(66, 34, 5, 4), t(11, 45, 64, 67), t(31, 17, 25, 0), t(48, 10, 2, 5), t(65, 62, 46, 61), t(31, 65, 31, 18), t(35, 43, 7, 59), t(39, 15, 8, 47), t(34, 2, 12, 5, 13, 29, 32, 35), t(34, 2, 12, 5, 13, 29, 32, 26), t(34, 2, 12, 5, 13, 29, 32, 38), t(34, 2, 12, 5, 13, 29, 32, 56), t(34, 2, 12, 5, 13, 29, 32, 40), t(34, 2, 12, 5, 13, 29, 32, 39), t(34, 2, 12, 5, 13, 29, 32, 53), t(34, 2, 12, 5, 13, 29, 32, 50), t(34, 2, 12, 5, 13, 29, 32, 58), t(34, 2, 12, 5, 13, 29, 32, 35, 36), t(34, 2, 12, 5, 13, 29, 32, 35, 35), t(34, 2, 12, 5, 13, 29, 32, 35, 26), t(34, 2, 12, 5, 13, 29, 32, 35, 38), t(34, 2, 12, 5, 13, 29, 32, 35, 56), t(34, 2, 12, 5, 13, 29, 32, 35, 40), t(49, 23, 4, 8, 16), t(34, 2, 12, 5, 27, 2, 4, 10, 10, 1, 15), t(34, 2, 12, 5, 27, 16, 1, 51, 16, 35, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10), t(34, 2, 12, 5, 27, 16, 1, 51, 16, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 26, 76, 12, 4, 11, 1, 68, 10), t(34, 2, 12, 5, 27, 16, 13, 16, 23, 1, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 34, 9, 9, 29, 68, 10), t(34, 2, 12, 5, 27, 16, 1, 51, 16, 38, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 11, 1, 23, 4, 17, 27, 38, 76, 12, 4, 11, 1, 68, 10), t(34, 2, 12, 5, 27, 13, 29, 32), t(34, 2, 12, 5, 27, 16, 1, 51, 16, 56), t(34, 2, 12, 5, 27, 19, 16, 76, 12, 4, 11, 1, 68, 10, 25, 9, 0, 10, 35, 76, 23, 9, 9, 3, 76, 4, 10, 13, 29, 4, 16, 1, 11), t(11, 4, 16, 4, 27, 24, 27, 56, 35, 58, 58, 56, 12, 5, 50), t(23, 4, 8, 16), t(23, 4, 8, 16, 27, 6), t(23, 4, 8, 16, 27, 23, 9, 32, 9, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 3, 22, 12, 12, 68, 10, 27, 8, 29, 4), t(23, 4, 8, 16, 27, 16, 1, 51, 16, 76, 11, 1, 23, 4, 17, 27, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 4, 11, 1, 68, 10), t(49), t(23, 4, 8, 16, 27, 8, 17, 76, 11, 1, 23, 4, 17, 27, 26, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 34, 9, 9, 29, 68, 10), t(52, 49, 2, 6, 5, 3, 49, 13, 10, 11, 1, 51, 52, 33, 16, 29, 23), t(23, 4, 8, 16, 27, 19, 3, 5, 3, 76, 23, 4, 8, 16, 27, 2, 16, 10), t(23, 4, 8, 16, 27, 19, 16, 76, 4, 10, 13, 29, 4, 16, 1, 11, 76, 12, 23, 4, 8, 33, 76, 23, 9, 9, 3), t(52, 49, 24, 13, 49, 13, 10, 11, 1, 51, 52, 33, 16, 29, 23), t(23, 4, 8, 16, 27, 24, 13, 8, 13, 76, 23, 4, 8, 16, 27, 2, 16, 10), t(11, 4, 16, 4, 27, 24, 27, 1, 40, 1, 2, 38, 4, 2, 39), t(49, 62, 29, 17, 8), t(62, 29, 17, 8), t(49, 46, 3, 17, 8), t(46, 3, 17, 8), t(49, 25, 51, 17, 8), t(25, 51, 17, 8), t(49, 63, 2, 12, 5), t(63, 2, 12, 5), t(49, 67, 4, 8, 16), t(67, 4, 8, 16), t(5, 44, 34, 19), t(28, 30, 13, 64), 0, t(53, 33, 15, 32), t(45, 53, 28, 18), t(3, 15, 9, 11, 22, 5, 16, 13, 9, 10, 44, 13, 3), t(2, 1, 12, 9, 15, 1, 43, 4, 5, 33), t(8, 1, 16, 44, 13, 29, 1, 9, 22, 16), 0, t(20, 33, 29, 16), t(20, 16, 15, 4, 5, 6, 14, 4, 32, 1, 24, 13, 1, 0), t(3, 4, 16, 33, 10, 4, 29, 1), t(12, 22, 23, 23, 14, 4, 16, 33), t(13, 10, 12, 9), t(30, 7, 20, 61, 43, 14, 18, 61, 44), t(75, 4, 3, 3), t(128, 41, 3, 3, 49, 129), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 50, 52, 50, 40, 50, 4, 5, 39, 11, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 56, 52, 12, 4, 12, 1, 50, 12, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 52, 50, 26, 38, 38, 12, 39, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 56, 52, 56, 39, 1, 40, 39, 5, 38, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 56, 52, 5, 53, 4, 50, 53, 36, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 39, 52, 11, 39, 12, 4, 39, 38, 11, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 36, 52, 39, 38, 12, 39, 26, 36, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 58, 52, 36, 56, 58, 50, 2, 58, 26, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 38, 52, 12, 38, 39, 39, 11, 58, 40, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 50, 52, 2, 1, 12, 5, 26, 4, 40, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 36, 52, 39, 11, 11, 39, 53, 11, 50, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 26, 52, 36, 4, 40, 11, 53, 35, 1, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 35, 52, 58, 56, 1, 26, 5, 1, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 50, 52, 38, 58, 5, 39, 11, 2, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 39, 52, 12, 38, 4, 40, 26, 26, 53, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 53, 52, 39, 4, 11, 35, 50, 53, 36, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 38, 52, 35, 38, 26, 2, 12, 40, 26, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 26, 52, 1, 1, 39, 38, 2, 50, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 26, 52, 39, 50, 11, 11, 5, 1, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 52, 53, 40, 38, 1, 38, 58, 1, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 53, 52, 40, 58, 40, 39, 36, 4, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 26, 36, 52, 56, 56, 26, 26, 4, 5, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 26, 52, 12, 35, 36, 5, 4, 39, 40, 52, 19, 3, 32), t(5, 4, 23, 23), t(3, 45, 60, 32), t(16, 17, 3, 1), t(13, 8, 65, 13, 10, 11, 9, 0), t(10, 9, 11, 1, 44, 17, 3, 1), t(4, 15, 15, 4, 17), t(12, 22, 10, 5, 16, 13, 9, 10), t(10, 22, 29, 2, 1, 15), t(1, 4, 5, 33), t(4, 5, 5, 1, 3, 16, 25, 4, 16, 4), t(1, 51, 3, 4, 10, 11, 9), t(5, 4, 5, 33, 1), t(8, 16, 15, 13, 10, 32), t(3, 9, 3), t(32, 22, 13, 11), t(10, 9, 9, 3), t(9, 2, 19, 1, 5, 16), t(22, 10, 11, 1, 12, 13, 10, 1, 11), t(1, 51, 16, 1, 10, 11), t(5, 4, 29, 1, 23, 46, 4, 8, 1), t(13, 8, 41, 15, 15, 4, 17), t(5, 9, 10, 5, 4, 16), t(29, 4, 3), t(13, 8, 43, 29, 3, 16, 17, 18, 2, 19, 1, 5, 16), t(5, 23, 1, 4, 10, 25, 4, 16, 4), t(11, 1, 23, 1, 16, 1, 43, 51, 3, 4, 10, 11, 9), t(8, 22, 3, 3, 9, 15, 16), t(11, 4, 16, 4, 27), t(27, 42, 35), t(32, 1, 16, 41, 16, 16, 15, 13, 2, 22, 16, 1), t(12, 4, 23, 8, 1), t(10, 22, 23, 23), t(16, 1, 8, 16), t(3, 4, 15, 8, 1, 7, 31, 18, 28), t(16, 9, 7, 31, 18, 28), t(4, 5, 16, 13, 24, 1, 43, 23, 1, 29, 1, 10, 16), t(13, 8, 45, 22, 10, 5, 16, 13, 9, 10), t(32, 15, 1, 3), t(12, 13, 23, 16, 1, 15), t(13, 10, 41, 15, 15, 4, 17), t(130), t(5, 15, 1, 4, 16, 1, 25, 9, 5, 22, 29, 1, 10, 16, 45, 15, 4, 32, 29, 1, 10, 16), t(10, 9, 11, 1, 28, 4, 29, 1), t(12, 13, 15, 8, 16, 46, 33, 13, 23, 11), t(16, 2, 9, 11, 17), t(9, 0, 10, 1, 15, 25, 9, 5, 22, 29, 1, 10, 16), t(4, 16, 16, 15), t(12, 13, 10, 11), t(1, 51, 1, 5), t(15, 1, 29, 9, 24, 1, 41, 16, 16, 15, 13, 2, 22, 16, 1), t(20, 11, 4, 16, 4), t(32, 23, 9, 2, 4, 23, 43, 24, 4, 23), t(33, 4, 8, 25, 4, 16, 4), t(1, 24, 1, 10, 16, 8), t(33, 4, 10, 11, 23, 1), t(4, 11, 11), t(1, 24, 1, 10, 16), t(10, 9, 46, 23, 9, 10, 1, 43, 24, 1, 10, 16), t(15, 1, 29, 9, 24, 1, 43, 24, 1, 10, 16), t(16, 1, 51, 16), t(3, 4, 15, 1, 10, 16, 28, 9, 11, 1), t(9, 22, 16, 1, 15, 66, 44, 21, 67), t(33, 16, 29, 23, 40, 46, 23, 9, 10, 1), t(13, 10, 10, 1, 15, 66, 44, 21, 67), t(16, 15, 13, 29), t(13, 10, 3, 22, 16), t(11, 1, 12, 4, 22, 23, 16, 46, 33, 1, 5, 6, 1, 11), t(5, 33, 1, 5, 6, 1, 11), t(24, 4, 23, 22, 1), t(9, 3, 16, 13, 9, 10), t(11, 1, 12, 4, 22, 23, 16, 31, 1, 23, 1, 5, 16, 1, 11), t(8, 1, 23, 1, 5, 16, 1, 11), t(16, 1, 51, 16, 4, 15, 1, 4), t(11, 1, 12, 4, 22, 23, 16, 47, 4, 23, 22, 1), t(131), t(64, 22, 1, 15, 17, 31, 1, 23, 1, 5, 16, 9, 15, 41, 23, 23), t(5, 33, 13, 23, 11, 28, 9, 11, 1, 8), t(29, 1, 15, 32, 1), t(16, 9, 48, 3, 3, 1, 15, 46, 4, 8, 1), t(5, 33, 4, 15, 41, 16), t(8, 23, 13, 5, 1), t(10, 9, 10, 1), t(5, 8, 8), t(11, 13, 8, 3, 23, 4, 17), t(5, 9, 10, 16, 4, 13, 10, 8), t(8, 16, 17, 23, 1), t(9, 23, 11, 11, 13, 8, 3, 23, 4, 17), t(29, 4, 51), t(21, 4, 16, 33), t(3, 51), t(2, 9, 15, 11, 1, 15), t(5, 9, 10, 16, 1, 10, 16), 4, t(0, 13, 11, 16, 33), t(29, 4, 15, 32, 13, 10), t(3, 4, 11, 11, 13, 10, 32), t(65, 13, 11, 16, 33), t(9, 12, 12, 8, 1, 16, 65, 13, 11, 16, 33), t(9, 12, 12, 8, 1, 16, 66, 1, 13, 32, 33, 16), t(2, 9, 51, 31, 13, 34, 13, 10, 32), t(2, 9, 15, 11, 1, 15, 27, 2, 9, 51), t(2, 9, 51, 31, 13, 34, 13, 10, 32, 61, 1, 23, 13, 4, 2, 23, 1), t(3, 4, 15, 8, 1, 45, 23, 9, 4, 16), t(4, 3, 3, 1, 10, 11, 44, 9), t(128, 13, 12, 15, 4, 29, 1, 76, 12, 15, 4, 29, 1, 2, 9, 15, 11, 1, 15, 72, 132, 36, 132, 76, 0, 13, 11, 16, 33, 72, 132, 36, 132, 76, 33, 1, 13, 32, 33, 16, 72, 132, 36, 132, 49, 129), t(5, 8, 8, 44, 1, 51, 16), t(11, 13, 8, 3, 23, 4, 17, 54, 2, 23, 9, 5, 6, 76, 90, 13, 29, 3, 9, 15, 16, 4, 10, 16), t(11, 9, 5, 22, 29, 1, 10, 16, 43, 23, 1, 29, 1, 10, 16), t(5, 9, 10, 16, 1, 10, 16, 65, 13, 10, 11, 9, 0), t(5, 9, 10, 16, 1, 10, 16, 25, 9, 5, 22, 29, 1, 10, 16), t(0, 15, 13, 16, 1), t(128, 90, 11, 9, 5, 16, 17, 3, 1, 76, 33, 16, 29, 23, 129, 128, 33, 16, 29, 23, 129, 128, 2, 9, 11, 17, 129), t(5, 23, 9, 8, 1), t(11, 1, 16, 4, 5, 33), t(15, 1, 29, 9, 24, 1), t(133), t(134), t(69), t(22, 10, 8, 33, 13, 12, 16), t(11, 4, 16, 4, 44, 17, 3, 1, 8), t(12, 23, 4, 16, 18, 3, 16, 13, 9, 10, 8), t(4, 19, 4, 51, 31, 1, 16, 16, 13, 10, 32, 8), t(5, 9, 10, 16, 1, 10, 16, 8), t(8, 33, 13, 12, 16), t(29, 13, 29, 1, 44, 17, 3, 1), t(32, 1, 16, 61, 1, 8, 3, 9, 10, 8, 1, 66, 1, 4, 11, 1, 15), t(46, 9, 10, 16, 1, 10, 16, 27, 44, 17, 3, 1), t(5, 9, 10, 24, 1, 15, 16, 1, 15, 8), t(15, 1, 8, 3, 9, 10, 8, 1, 45, 13, 1, 23, 11, 8), t(11, 4, 16, 4, 45, 13, 23, 16, 1, 15), t(11, 4, 16, 4, 44, 17, 3, 1), t(131, 76), t(16, 33, 15, 9, 0, 8), t(3, 4, 15, 8, 1, 15, 1, 15, 15, 9, 15), t(28, 9, 76, 5, 9, 10, 24, 1, 15, 8, 13, 9, 10, 76, 12, 15, 9, 29, 76), t(76, 16, 9, 76), t(8, 22, 5, 5, 1, 8, 8), t(62, 21, 67, 66, 16, 16, 3, 61, 1, 64, 22, 1, 8, 16), t(41, 5, 16, 13, 24, 1, 62, 18, 2, 19, 1, 5, 16), t(21, 13, 5, 15, 9, 8, 9, 12, 16, 52, 62, 21, 67, 66, 44, 44, 14), t(10, 9, 0), t(4, 23, 0, 4, 17, 8), t(25, 1, 12, 1, 15, 15, 1, 11), t(1, 23, 1, 29), t(8, 16, 4, 15, 16, 44, 13, 29, 1), t(11, 22, 15, 4, 16, 13, 9, 10), t(16, 0, 1, 1, 10, 8), t(15, 22, 10), t(10, 9, 16, 13, 12, 17, 65, 13, 16, 33), t(15, 1, 8, 9, 23, 24, 1, 65, 13, 16, 33), t(3, 15, 9, 29, 13, 8, 1), t(44, 0, 1, 1, 10), t(9, 3, 16, 8), t(8, 3, 1, 5, 13, 4, 23, 43, 4, 8, 13, 10, 32), t(1, 4, 8, 13, 10, 32), t(15, 1, 19, 1, 5, 16, 65, 13, 16, 33), t(3, 15, 9, 3, 8), t(8, 16, 4, 15, 16), t(16, 13, 29, 1, 15), t(12, 51), t(64, 22, 1, 22, 1), t(12, 4, 13, 23), t(11, 9, 10, 1), t(3, 15, 9, 32, 15, 1, 8, 8), t(5, 9, 29, 3, 23, 1, 16, 1), t(5, 8, 8, 66, 9, 9, 6, 8), t(1, 51, 3, 4, 10, 11), t(12, 51, 8, 33, 9, 0), t(20, 64, 22, 1, 22, 1, 66, 9, 9, 6, 8), t(22, 10, 64, 22, 1, 22, 1, 11), t(12, 13, 15, 1), t(1, 29, 3, 16, 17), t(33, 1, 13, 32, 33, 16), t(9, 24, 1, 15, 12, 23, 9, 0), t(9, 24, 1, 15, 12, 23, 9, 0, 62), t(9, 24, 1, 15, 12, 23, 9, 0, 60), t(13, 10, 23, 13, 10, 1), t(12, 23, 9, 4, 16), t(13, 10, 23, 13, 10, 1, 30, 23, 9, 5, 6, 28, 1, 1, 11, 8, 67, 4, 17, 9, 22, 16), t(34, 9, 9, 29), t(13, 10, 23, 13, 10, 1, 27, 2, 23, 9, 5, 6), t(33, 13, 11, 11, 1, 10), t(8, 33, 15, 13, 10, 6, 65, 15, 4, 3, 30, 23, 9, 5, 6, 8), t(16, 9, 32, 32, 23, 1), t(33, 13, 11, 1), t(8, 33, 9, 0), t(20, 15, 1, 29, 9, 24, 1, 25, 4, 16, 4), t(1, 10, 11), t(13, 10, 13, 16), t(3, 15, 9, 16, 9, 16, 17, 3, 1), t(9, 3, 4, 5, 13, 16, 17), 9, t(11, 1, 12, 4, 22, 23, 16, 47, 13, 1, 0), t(3, 4, 15, 1, 10, 16, 65, 13, 10, 11, 9, 0), t(19, 59, 22, 1, 15, 17), t(42), t(35, 52, 35, 36, 52, 35), t(16, 9, 31, 16, 15, 13, 10, 32), t(33, 4, 8, 18, 0, 10, 14, 15, 9, 3, 1, 15, 16, 17), t(12, 10), t(8, 9, 22, 15, 5, 1), t(23, 9, 4, 11), t(15, 1, 4, 11, 17, 31, 16, 4, 16, 1), t(25, 18, 21, 46, 9, 10, 16, 1, 10, 16, 67, 9, 4, 11, 1, 11), t(11, 1, 16, 4, 5, 33, 43, 24, 1, 10, 16), t(9, 10, 15, 1, 4, 11, 17, 8, 16, 4, 16, 1, 5, 33, 4, 10, 32, 1), t(9, 10, 23, 9, 4, 11), t(128), t(129), t(19, 64, 22, 1, 15, 17), t(5, 9, 10, 8, 16, 15, 22, 5, 16, 9, 15), t(3, 4, 15, 8, 1, 66, 44, 21, 67), t(13, 8, 14, 23, 4, 13, 10, 18, 2, 19, 1, 5, 16), t(13, 11), t(5, 9, 10, 16, 1, 51, 16), t(8, 1, 23, 1, 5, 16, 9, 15), t(29, 4, 6, 1, 41, 15, 15, 4, 17), t(16, 9, 41, 15, 15, 4, 17), t(3, 15, 1, 24, 18, 2, 19, 1, 5, 16), t(3, 22, 8, 33, 31, 16, 4, 5, 6), t(4, 3, 3, 23, 17), t(1, 64), t(8, 9, 15, 16), t(8, 3, 23, 13, 5, 1), t(2, 9, 9, 23, 1, 4, 10), t(15, 4, 10, 11, 9, 29), t(15, 1, 4, 11, 17, 65, 4, 13, 16), t(13, 8, 61, 1, 4, 11, 17), t(16, 15, 13, 32, 32, 1, 15), t(9, 12, 12), t(41, 15, 15, 4, 17), t(13, 8, 28, 4, 28), t(13, 8, 45, 13, 10, 13, 16, 1), t(13, 8, 14, 15, 9, 16, 9, 16, 17, 3, 1, 18, 12), t(9, 0, 10, 67, 4, 8, 16), t(43, 15, 15, 9, 15), t(2, 22, 13, 23, 11, 45, 15, 4, 32, 29, 1, 10, 16), t(7, 31, 18, 28), t(3, 4, 15, 8, 1), t(135), t(45, 22, 10, 5, 16, 13, 9, 10), t(15, 1, 16, 22, 15, 10, 76), t(68, 10, 24, 4, 23, 13, 11, 76, 7, 31, 18, 28, 54, 76), t(25, 18, 21, 14, 4, 15, 8, 1, 15), t(3, 4, 15, 8, 1, 45, 15, 9, 29, 31, 16, 15, 13, 10, 32), t(16, 1, 51, 16, 49, 51, 29, 23), t(21, 13, 5, 15, 9, 8, 9, 12, 16, 52, 62, 21, 67, 25, 18, 21), t(4, 8, 17, 10, 5), t(23, 9, 4, 11, 62, 21, 67), t(68, 10, 24, 4, 23, 13, 11, 76, 62, 21, 67, 54, 76), t(1, 51, 1, 5, 31, 5, 15, 13, 3, 16), t(1, 24, 4, 23), t(29, 8, 27), t(136, 137), t(4, 5, 5, 1, 8, 8), t(4, 16, 16, 4, 5, 33, 43, 24, 1, 10, 16), t(12, 15, 4, 29, 1, 43, 23, 1, 29, 1, 10, 16), t(11, 9, 31, 5, 15, 9, 23, 23), t(23, 1, 12, 16), 0, t(30, 9, 9, 23, 1, 4, 10, 76, 28, 22, 29, 2, 1, 15, 76, 31, 16, 15, 13, 10, 32, 76, 45, 22, 10, 5, 16, 13, 9, 10, 76, 41, 15, 15, 4, 17, 76, 25, 4, 16, 1, 76, 61, 1, 32, 43, 51, 3, 76, 18, 2, 19, 1, 5, 16, 76, 43, 15, 15, 9, 15), t(133, 9, 2, 19, 1, 5, 16, 76), t(64, 8, 4), t(138, 42, 73), t(133, 13, 11, 72, 132), t(132, 134, 76), t(19, 9, 13, 10), t(57), t(42, 35), t(5, 4, 5, 33, 1, 67, 1, 10, 32, 16, 33), t(4, 16, 16, 15, 66, 4, 10, 11, 23, 1), t(32, 1, 16, 41, 16, 16, 15, 13, 2, 22, 16, 1, 28, 9, 11, 1), t(8, 3, 1, 5, 13, 12, 13, 1, 11), t(8, 9, 22, 15, 5, 1, 68, 10, 11, 1, 51), t(10, 1, 51, 16, 31, 13, 2, 23, 13, 10, 32), t(3, 15, 1, 45, 13, 23, 16, 1, 15), t(11, 13, 15), t(12, 13, 15, 8, 16), t(15, 1, 23, 4, 16, 13, 24, 1), t(29, 4, 16, 5, 33, 1, 8), t(36), t(44, 41, 70), .1, t(22, 10, 13, 64, 22, 1, 31, 9, 15, 16), t(68, 25), t(32, 1, 16, 30, 17, 68, 11), t(10, 1, 1, 11, 8, 46, 9, 10, 16, 1, 51, 16), t(8, 13, 34, 34, 23, 1), 0, t(5, 33, 1, 5, 6, 1, 11, 130, 8, 1, 23, 1, 5, 16, 1, 11, 130, 4, 8, 17, 10, 5, 130, 4, 22, 16, 9, 12, 9, 5, 22, 8, 130, 4, 22, 16, 9, 3, 23, 4, 17, 130, 5, 9, 10, 16, 15, 9, 23, 8, 130, 11, 1, 12, 1, 15, 130, 11, 13, 8, 4, 2, 23, 1, 11, 130, 33, 13, 11, 11, 1, 10, 130, 13, 8, 29, 4, 3, 130, 23, 9, 9, 3, 130, 29, 22, 23, 16, 13, 3, 23, 1, 130, 9, 3, 1, 10, 130, 15, 1, 4, 11, 9, 10, 23, 17, 130, 15, 1, 64, 22, 13, 15, 1, 11, 130, 8, 5, 9, 3, 1, 11), t(133, 138, 51, 26, 36, 138, 16, 138, 15, 138, 10, 138, 12, 134), t(139, 74, 54, 138, 138, 52, 130, 133, 138, 0, 27, 134, 130, 133, 140, 138, 51, 36, 36, 27, 138, 51, 4, 36, 134, 141, 69), t(0), t(0, 75), t(138, 133), t(131, 139), t(141), t(131, 139, 74, 54, 139, 133, 131, 140, 42, 130, 90, 142, 134, 74, 72, 141), t(131, 139, 74, 54, 139, 133, 132, 143, 134, 141, 139, 139, 74, 54, 138, 138, 52, 130, 133, 140, 138, 138, 134, 141, 131, 74, 141, 138, 38, 130, 139), t(141, 130, 141, 130, 141), t(131, 138, 134), t(54, 139), t(141, 139, 74, 54, 138, 139, 139, 139, 133, 132, 143, 134, 141, 139, 139, 74, 54, 138, 138, 52, 130, 133, 140, 138, 138, 134, 141, 131, 74, 141, 138, 38, 130, 139, 139, 74, 54, 138, 138, 52, 130, 133, 140, 138, 138, 139, 141, 133, 138, 134, 134, 130), t(141, 131, 141, 130, 52, 131, 141, 138, 141, 130, 141), t(61, 1, 32, 43, 51, 3), t(140), t(69, 130, 139, 139, 74, 54, 140, 130, 133, 140, 138, 138, 134, 141, 139, 74, 54, 138, 138, 52, 141, 131, 141), t(69, 42), t(32), t(131, 57), t(131, 139, 133, 129, 69, 142, 134, 130), t(131, 133, 69, 142, 134), t(131, 139, 133, 140, 138, 134, 132, 143, 134, 131, 141), t(140, 75, 139), t(140, 138, 52, 139), t(140, 139), t(0, 131), t(140, 54, 139, 9, 10, 23, 17, 130, 12, 13, 15, 8, 16, 130, 23, 4, 8, 16, 130, 10, 16, 33, 130, 10, 16, 33, 27, 23, 4, 8, 16, 141, 27, 139, 5, 33, 13, 23, 11, 130, 9, 12, 27, 16, 17, 3, 1, 141, 139, 74, 54, 138, 139), t(131, 139, 1, 24, 1, 10, 130, 9, 11, 11, 130, 139, 139, 133, 69, 27, 134, 130, 141, 139, 138, 11, 131, 141, 10, 130, 141), t(131, 139, 74, 54, 139, 133, 69, 27, 134, 130, 141), t(131, 139, 138, 11, 69, 141, 130, 141, 141), t(131, 138, 141, 130, 141), t(13), t(140, 139, 74, 54), t(141, 42), t(131, 133, 129, 69, 142, 134, 130, 54, 139, 1, 24, 1, 10, 130, 9, 11, 11, 130, 1, 64, 130, 32, 16, 130, 23, 16, 130, 10, 16, 33, 130, 12, 13, 15, 8, 16, 130, 23, 4, 8, 16, 141, 139, 74, 54, 138, 139), t(131, 139, 139, 74, 54, 27, 138, 11, 141, 74, 138, 11, 131, 141), t(131, 138, 141, 130, 141, 139, 74, 72, 133, 140, 27, 134, 130, 42, 141), t(138, 138, 139, 133, 138, 11, 4, 27, 12, 134, 144, 35, 57, 39, 145), t(74, 130, 139), t(141, 130, 52, 141), t(13, 32), t(36, 51), 0, t(12, 15, 9, 29, 46, 33, 4, 15, 46, 9, 11, 1), 0, 0, 0, 0, t(13, 8, 62, 21, 67), t(66, 44, 21, 67), t(8, 1, 16, 25, 9, 5, 22, 29, 1, 10, 16), t(9, 10, 2, 1, 12, 9, 15, 1, 22, 10, 23, 9, 4, 11), t(4, 16, 16, 15, 13, 2, 22, 16, 1, 8), t(128, 4, 76, 33, 15, 1, 12, 72, 132, 75, 132, 129, 128, 49, 4, 129), t(16, 17, 3, 1, 130, 33, 15, 1, 12, 130, 33, 1, 13, 32, 33, 16, 130, 0, 13, 11, 16, 33), t(11, 13, 8, 4, 2, 23, 1, 11), t(128, 13, 10, 3, 22, 16, 129), t(5, 15, 1, 4, 16, 1, 46, 9, 29, 29, 1, 10, 16), t(128, 11, 13, 24, 76, 5, 23, 4, 8, 8, 72, 132, 4, 132, 129, 128, 49, 11, 13, 24, 129, 128, 11, 13, 24, 76, 5, 23, 4, 8, 8, 72, 132, 4, 76, 13, 132, 129, 128, 49, 11, 13, 24, 129), t(32, 1, 16, 43, 23, 1, 29, 1, 10, 16, 8, 30, 17, 28, 4, 29, 1), t(46, 67, 41, 31, 31), t(128, 8, 1, 23, 1, 5, 16, 129, 128, 9, 3, 16, 13, 9, 10, 76, 8, 1, 23, 1, 5, 16, 1, 11, 72, 132, 132, 129, 128, 49, 9, 3, 16, 13, 9, 10, 129, 128, 49, 8, 1, 23, 1, 5, 16, 129), t(133, 8, 1, 23, 1, 5, 16, 1, 11, 134), t(131, 139, 74, 54, 24, 4, 23, 22, 1, 130), t(54, 5, 33, 1, 5, 6, 1, 11), t(133, 16, 140, 72, 132, 132, 134), t(133, 131, 140, 42, 134, 72), t(131, 139, 74, 54, 132, 132, 130, 143, 143, 141), t(54, 1, 10, 4, 2, 23, 1, 11), t(54, 11, 13, 8, 4, 2, 23, 1, 11), t(131, 57, 54, 51), t(57, 52, 131, 54), t(29, 4, 16, 5, 33, 1, 8, 31, 1, 23, 1, 5, 16, 9, 15), t(0, 1, 2, 6, 13, 16, 21, 4, 16, 5, 33, 1, 8, 31, 1, 23, 1, 5, 16, 9, 15), t(29, 9, 34, 21, 4, 16, 5, 33, 1, 8, 31, 1, 23, 1, 5, 16, 9, 15), t(9, 21, 4, 16, 5, 33, 1, 8, 31, 1, 23, 1, 5, 16, 9, 15), t(29, 8, 21, 4, 16, 5, 33, 1, 8, 31, 1, 23, 1, 5, 16, 9, 15), t(11, 13, 8, 5, 9, 10, 10, 1, 5, 16, 1, 11, 21, 4, 16, 5, 33), t(133, 8, 90, 72, 132, 132, 134, 54, 51), t(90, 72), t(5, 9, 29, 3, 4, 15, 1, 25, 9, 5, 22, 29, 1, 10, 16, 14, 9, 8, 13, 16, 13, 9, 10), 0, t(8, 9, 15, 16, 25, 1, 16, 4, 5, 33, 1, 11), t(72, 132, 42, 35, 132, 134), 0, t(31, 17, 10, 16, 4, 51, 76, 1, 15, 15, 9, 15, 57, 76, 22, 10, 15, 1, 5, 9, 32, 10, 13, 34, 1, 11, 76, 1, 51, 3, 15, 1, 8, 8, 13, 9, 10, 54, 76), t(11, 1, 16, 1, 5, 16, 25, 22, 3, 23, 13, 5, 4, 16, 1, 8), t(8, 9, 15, 16, 31, 16, 4, 2, 23, 1), t(32, 1, 16, 44, 1, 51, 16), t(16, 1, 51, 16, 46, 9, 10, 16, 1, 10, 16), t(10, 9, 11, 1, 47, 4, 23, 22, 1), t(8, 1, 23, 1, 5, 16, 9, 15, 8), t(3, 15, 1, 24, 13, 9, 22, 8, 31, 13, 2, 23, 13, 10, 32), 0, t(142, 72), t(10, 16, 33), 0, t(1, 24, 1, 10), t(9, 11, 11), 0, t(46, 66, 68, 67, 25), t(139, 140, 130), t(139), t(130, 42, 141), t(5, 23, 4, 8, 8), t(140, 72), t(131, 72), t(42, 72), t(130, 72), t(27), t(9, 12, 27, 16, 17, 3, 1), t(9, 10, 23, 17), t(23, 4, 8, 16, 46, 33, 13, 23, 11), t(3, 8, 1, 22, 11, 9, 8), t(8, 1, 16, 45, 13, 23, 16, 1, 15, 8), t(22, 10, 8, 22, 3, 3, 9, 15, 16, 1, 11, 76, 3, 8, 1, 22, 11, 9, 54, 76), t(13, 10, 10, 1, 15, 44, 1, 51, 16), t(22, 10, 8, 22, 3, 3, 9, 15, 16, 1, 11, 76, 23, 4, 10, 32, 54, 76), t(23, 4, 10, 32), t(51, 29, 23, 54, 23, 4, 10, 32), t(33, 4, 8, 33), t(33, 4, 8, 45, 9, 5, 22, 8), t(16, 4, 2, 68, 10, 11, 1, 51), t(8, 1, 23, 1, 5, 16, 1, 11, 68, 10, 11, 1, 51), t(2, 22, 16, 16, 9, 10), t(5, 9, 29, 3, 13, 23, 1), t(12, 13, 23, 16, 1, 15, 8), t(1, 51, 3, 15), t(54), t(22, 10, 13, 64, 22, 1), t(13, 8, 62, 21, 67, 25, 9, 5), t(46, 4, 23, 23, 2, 4, 5, 6, 8), t(9, 10, 5, 1), t(29, 1, 29, 9, 15, 17), t(8, 16, 9, 3, 18, 10, 45, 4, 23, 8, 1), t(11, 13, 8, 4, 2, 23, 1), t(33, 4, 8), t(12, 13, 15, 1, 65, 13, 16, 33), t(15, 1, 8, 9, 23, 24, 1), t(9, 10, 5, 1, 76, 29, 1, 29, 9, 15, 17), t(15, 1, 8, 9, 23, 24, 1, 11), t(15, 1, 19, 1, 5, 16), t(15, 1, 19, 1, 5, 16, 1, 11), t(10, 9, 16, 13, 12, 17), t(3, 1, 10, 11, 13, 10, 32), t(65, 13, 16, 33), t(3, 13, 3, 1), t(23, 9, 5, 6), t(76, 76, 128, 23, 13, 10, 6, 49, 129, 128, 16, 4, 2, 23, 1, 129, 128, 49, 16, 4, 2, 23, 1, 129, 128, 4, 76, 33, 15, 1, 12, 72, 132, 49, 4, 132, 129, 4, 128, 49, 4, 129, 128, 13, 10, 3, 22, 16, 76, 16, 17, 3, 1, 72, 132, 5, 33, 1, 5, 6, 2, 9, 51, 132, 49, 129), t(8, 1, 23, 1, 5, 16), t(16, 9, 3, 54, 35, 3, 51, 55, 12, 23, 9, 4, 16, 54, 23, 1, 12, 16, 55, 9, 3, 4, 5, 13, 16, 17, 54, 52, 40), t(32, 1, 16, 31, 1, 16, 41, 16, 16, 15, 13, 2, 22, 16, 1), t(23, 1, 4, 11, 13, 10, 32, 65, 33, 13, 16, 1, 8, 3, 4, 5, 1), t(33, 16, 29, 23, 31, 1, 15, 13, 4, 23, 13, 34, 1), t(23, 13, 10, 6), t(33, 15, 1, 12, 28, 9, 15, 29, 4, 23, 13, 34, 1, 11), t(49, 4), t(5, 8, 8, 45, 23, 9, 4, 16), t(5, 33, 1, 5, 6, 18, 10), t(9, 3, 16, 31, 1, 23, 1, 5, 16, 1, 11), t(1, 10, 5, 16, 17, 3, 1), t(12, 9, 15, 29), t(128, 54, 10, 4, 24, 129, 128, 49, 54, 10, 4, 24, 129), t(5, 23, 9, 10, 1, 28, 9, 11, 1), t(10, 4, 24), t(3, 13, 51, 1, 23, 14, 9, 8, 13, 16, 13, 9, 10), t(15, 1, 23, 13, 4, 2, 23, 1, 21, 4, 15, 32, 13, 10, 61, 13, 32, 33, 16), t(10, 9, 46, 23, 9, 10, 1, 46, 33, 1, 5, 6, 1, 11), t(9, 3, 16, 25, 13, 8, 4, 2, 23, 1, 11), t(15, 4, 11, 13, 9), t(15, 4, 11, 13, 9, 47, 4, 23, 22, 1), t(10, 4, 29, 1), t(4, 3, 3, 1, 10, 11, 46, 33, 1, 5, 6, 1, 11), t(5, 33, 1, 5, 6, 46, 23, 9, 10, 1), t(9, 10, 5, 23, 13, 5, 6), t(5, 23, 13, 5, 6), t(30, 22, 2, 2, 23, 1, 8), t(2, 4, 5, 6, 32, 15, 9, 22, 10, 11, 46, 23, 13, 3), t(5, 9, 10, 16, 1, 10, 16, 27, 2, 9, 51), t(5, 23, 1, 4, 15, 46, 23, 9, 10, 1, 31, 16, 17, 23, 1), t(3, 4, 11, 11, 13, 10, 32, 54, 36, 55, 29, 4, 15, 32, 13, 10, 54, 36, 55, 2, 9, 15, 11, 1, 15, 54, 36, 55, 11, 13, 8, 3, 23, 4, 17, 54, 2, 23, 9, 5, 6, 55, 2, 9, 51, 27, 8, 13, 34, 13, 10, 32, 54, 5, 9, 10, 16, 1, 10, 16, 27, 2, 9, 51, 55, 27, 29, 9, 34, 27, 2, 9, 51, 27, 8, 13, 34, 13, 10, 32, 54, 5, 9, 10, 16, 1, 10, 16, 27, 2, 9, 51, 55, 27, 0, 1, 2, 6, 13, 16, 27, 2, 9, 51, 27, 8, 13, 34, 13, 10, 32, 54, 5, 9, 10, 16, 1, 10, 16, 27, 2, 9, 51, 55), t(2, 9, 15, 11, 1, 15, 54, 36, 55, 0, 13, 11, 16, 33, 54, 36, 55, 33, 1, 13, 32, 33, 16, 54, 36, 55, 3, 9, 8, 13, 16, 13, 9, 10, 54, 4, 2, 8, 9, 23, 22, 16, 1, 55, 16, 9, 3, 54, 36, 55, 23, 1, 12, 16, 54, 27, 58, 58, 58, 58, 3, 51, 55, 29, 4, 15, 32, 13, 10, 27, 16, 9, 3, 54, 35, 3, 51), t(128, 16, 4, 2, 23, 1, 129, 128, 16, 15, 129, 128, 16, 11, 129, 128, 49, 16, 11, 129, 128, 16, 11, 129, 16, 128, 49, 16, 11, 129, 128, 49, 16, 15, 129, 128, 49, 16, 4, 2, 23, 1, 129), t(3, 4, 11, 11, 13, 10, 32, 54, 36, 55, 29, 4, 15, 32, 13, 10, 54, 36, 55, 2, 9, 15, 11, 1, 15, 54, 36, 55, 11, 13, 8, 3, 23, 4, 17, 54, 10, 9, 10, 1), t(15, 1, 23, 13, 4, 2, 23, 1, 66, 13, 11, 11, 1, 10, 18, 12, 12, 8, 1, 16, 8), t(2, 9, 51, 27, 8, 13, 34, 13, 10, 32, 54, 2, 9, 15, 11, 1, 15, 27, 2, 9, 51, 55, 27, 29, 9, 34, 27, 2, 9, 51, 27, 8, 13, 34, 13, 10, 32, 54, 2, 9, 15, 11, 1, 15, 27, 2, 9, 51, 55, 27, 0, 1, 2, 6, 13, 16, 27, 2, 9, 51, 27, 8, 13, 34, 13, 10, 32, 54, 2, 9, 15, 11, 1, 15, 27, 2, 9, 51, 55, 3, 4, 11, 11, 13, 10, 32, 54, 35, 3, 51, 55, 2, 9, 15, 11, 1, 15, 54, 35, 3, 51, 55, 11, 13, 8, 3, 23, 4, 17, 54, 2, 23, 9, 5, 6, 55, 0, 13, 11, 16, 33, 54, 56, 3, 51, 55, 29, 4, 15, 32, 13, 10, 27, 16, 9, 3, 54, 35, 37, 55, 3, 9, 8, 13, 16, 13, 9, 10, 54, 4, 2, 8, 9, 23, 22, 16, 1, 55, 16, 9, 3, 54, 35, 37, 55), t(8, 0, 4, 3), t(32, 1, 16, 46, 9, 29, 3, 22, 16, 1, 11, 31, 16, 17, 23, 1), t(35, 37), t(16, 9, 3), t(56, 3, 51), t(29, 4, 15, 32, 13, 10, 61, 13, 32, 33, 16), t(35, 3, 51), t(0, 13, 11, 16, 33, 54, 35, 3, 51, 55, 3, 4, 11, 11, 13, 10, 32, 54, 35, 3, 51, 55, 11, 13, 8, 3, 23, 4, 17, 54, 13, 10, 23, 13, 10, 1, 55, 34, 9, 9, 29, 54, 35), t(2, 23, 9, 5, 6), t(128, 11, 13, 24, 129, 128, 49, 11, 13, 24, 129), t(40, 3, 51), t(5, 23, 8, 13, 11, 54, 25, 26, 53, 46, 25, 30, 39, 43, 27, 41, 43, 39, 25, 27, 35, 35, 5, 12, 27, 58, 39, 30, 50, 27, 56, 56, 56, 40, 40, 38, 40, 56, 36, 36, 36, 36), t(10, 9, 25, 4, 16, 4), t(5, 23, 4, 8, 8, 13, 11), t(3, 4, 15, 8, 1, 11, 41, 16, 16, 15, 8), t(15, 1, 29, 9, 24, 1, 25, 4, 16, 4), t(11, 1, 64, 22, 1, 22, 1), t(13, 10, 3, 15, 9, 32, 15, 1, 8, 8), t(8, 16, 9, 3), t(64, 22, 1, 22, 1, 66, 9, 9, 6, 8), t(8, 3, 1, 1, 11, 8), t(15, 1, 29, 9, 24, 1, 41, 16, 16, 15), t(3, 15, 9, 3), t(3, 15, 9, 3, 45, 13, 51), t(4, 11, 11, 46, 23, 4, 8, 8), t(15, 1, 29, 9, 24, 1, 46, 23, 4, 8, 8), t(16, 9, 32, 32, 23, 1, 46, 23, 4, 8, 8), t(33, 4, 8, 46, 23, 4, 8, 8), t(20, 20, 5, 23, 4, 8, 8, 28, 4, 29, 1, 20, 20), t(24, 4, 23), t(24, 4, 23, 66, 9, 9, 6, 8), t(8, 1, 16), t(8, 1, 23, 1, 5, 16, 27, 9, 10, 1), t(9, 3, 16, 32, 15, 9, 22, 3), t(4, 16, 16, 15, 66, 9, 9, 6, 8), t(2, 9, 9, 23), t(11, 1, 12, 4, 22, 23, 16, 27), t(33, 16, 29, 23, 45, 9, 15), t(3, 15, 9, 3, 66, 9, 9, 6, 8), t(16, 4, 2, 13, 10, 11, 1, 51), t(3, 4, 15, 8, 1, 68, 10, 16), t(8, 1, 16, 41, 16, 16, 15, 13, 2, 22, 16, 1, 28, 9, 11, 1), t(5, 15, 1, 4, 16, 1, 41, 16, 16, 15, 13, 2, 22, 16, 1), t(5, 9, 9, 15, 11, 8), t(5, 9, 10, 16, 1, 10, 16, 1, 11, 13, 16, 4, 2, 23, 1), t(15, 1, 4, 11, 18, 10, 23, 17), t(29, 4, 51, 67, 1, 10, 32, 16, 33), t(5, 1, 23, 23, 31, 3, 4, 5, 13, 10, 32), t(5, 1, 23, 23, 14, 4, 11, 11, 13, 10, 32), t(15, 9, 0, 31, 3, 4, 10), t(5, 9, 23, 31, 3, 4, 10), t(22, 8, 1, 21, 4, 3), t(12, 15, 4, 29, 1, 30, 9, 15, 11, 1, 15), t(5, 9, 10, 16, 1, 10, 16, 43, 11, 13, 16, 4, 2, 23, 1), t(1, 10, 5, 9, 11, 13, 10, 32), t(5, 33, 1, 5, 6, 2, 9, 51), t(33, 4, 10, 11, 23, 1, 15), t(16, 15, 13, 32, 32, 1, 15, 1, 11), t(11, 13, 8, 3, 4, 16, 5, 33), t(52), t(8, 3, 1, 5, 13, 4, 23), t(11, 1, 23, 1, 32, 4, 16, 1, 44, 17, 3, 1), t(2, 13, 10, 11, 44, 17, 3, 1), t(11, 1, 23, 1, 32, 4, 16, 1, 46, 9, 22, 10, 16), t(8, 1, 16, 22, 3), t(32, 23, 9, 2, 4, 23), t(139, 140, 130, 138, 52, 141), t(138, 52, 139, 74, 54, 52, 131, 138, 52, 130, 141), t(139, 138, 52, 130, 42, 141), t(9, 15, 13, 32, 44, 17, 3, 1), t(10, 4, 29, 1, 8, 3, 4, 5, 1), t(131, 131), t(16, 1, 4, 15, 11, 9, 0, 10), t(43, 24, 1, 10, 16), t(13, 8, 44, 15, 13, 32, 32, 1, 15), t(10, 4, 29, 1, 8, 3, 4, 5, 1, 20, 15, 1), t(15, 1, 8, 22, 23, 16), t(16, 4, 15, 32, 1, 16), t(10, 9, 30, 22, 2, 2, 23, 1), t(13, 8, 14, 15, 9, 3, 4, 32, 4, 16, 13, 9, 10, 31, 16, 9, 3, 3, 1, 11), t(3, 15, 1, 24, 1, 10, 16, 25, 1, 12, 4, 22, 23, 16), t(13, 8, 25, 1, 12, 4, 22, 23, 16, 14, 15, 1, 24, 1, 10, 16, 1, 11), t(20, 11, 1, 12, 4, 22, 23, 16), t(12, 13, 51), t(11, 1, 23, 1, 32, 4, 16, 1, 44, 4, 15, 32, 1, 16), t(3, 15, 1, 25, 13, 8, 3, 4, 16, 5, 33), t(33, 4, 10, 11, 23, 1, 15, 8), t(5, 22, 15, 15, 1, 10, 16, 44, 4, 15, 32, 1, 16), t(13, 8, 68, 29, 29, 1, 11, 13, 4, 16, 1, 14, 15, 9, 3, 4, 32, 4, 16, 13, 9, 10, 31, 16, 9, 3, 3, 1, 11), t(33, 4, 10, 11, 23, 1, 18, 2, 19), t(8, 16, 9, 3, 14, 15, 9, 3, 4, 32, 4, 16, 13, 9, 10), t(3, 9, 8, 16, 25, 13, 8, 3, 4, 16, 5, 33), t(13, 10, 11, 1, 51), t(12, 13, 51, 66, 9, 9, 6, 8), t(29, 9, 22, 8, 1, 66, 9, 9, 6, 8), t(6, 1, 17, 66, 9, 9, 6, 8), t(8, 15, 5, 43, 23, 1, 29, 1, 10, 16), t(29, 1, 16, 4, 71, 1, 17), t(4, 23, 16, 71, 1, 17, 76, 2, 22, 2, 2, 23, 1, 8, 76, 5, 4, 10, 5, 1, 23, 4, 2, 23, 1, 76, 5, 16, 15, 23, 71, 1, 17, 76, 5, 22, 15, 15, 1, 10, 16, 44, 4, 15, 32, 1, 16, 76, 1, 24, 1, 10, 16, 14, 33, 4, 8, 1, 76, 29, 1, 16, 4, 71, 1, 17, 76, 15, 1, 23, 4, 16, 1, 11, 44, 4, 15, 32, 1, 16, 76, 8, 33, 13, 12, 16, 71, 1, 17, 76, 16, 4, 15, 32, 1, 16, 76, 16, 13, 29, 1, 31, 16, 4, 29, 3, 76, 24, 13, 1, 0, 76, 0, 33, 13, 5, 33), t(5, 33, 4, 15, 76, 5, 33, 4, 15, 46, 9, 11, 1, 76, 6, 1, 17, 76, 6, 1, 17, 46, 9, 11, 1), t(0, 33, 13, 5, 33), t(5, 33, 4, 15, 46, 9, 11, 1), t(6, 1, 17, 46, 9, 11, 1), t(2, 22, 16, 16, 9, 10, 76, 2, 22, 16, 16, 9, 10, 8, 76, 5, 23, 13, 1, 10, 16, 62, 76, 5, 23, 13, 1, 10, 16, 60, 76, 12, 15, 9, 29, 43, 23, 1, 29, 1, 10, 16, 76, 9, 12, 12, 8, 1, 16, 62, 76, 9, 12, 12, 8, 1, 16, 60, 76, 3, 4, 32, 1, 62, 76, 3, 4, 32, 1, 60, 76, 8, 5, 15, 1, 1, 10, 62, 76, 8, 5, 15, 1, 1, 10, 60, 76, 16, 9, 43, 23, 1, 29, 1, 10, 16), t(12, 15, 9, 29, 43, 23, 1, 29, 1, 10, 16), t(3, 4, 32, 1, 62), t(5, 23, 13, 1, 10, 16, 62), t(8, 5, 15, 9, 23, 23, 67, 1, 12, 16), t(5, 23, 13, 1, 10, 16, 67, 1, 12, 16), t(3, 4, 32, 1, 60), t(5, 23, 13, 1, 10, 16, 60), t(8, 5, 15, 9, 23, 23, 44, 9, 3), t(5, 23, 13, 1, 10, 16, 44, 9, 3), t(15, 1, 23, 4, 16, 1, 11, 44, 4, 15, 32, 1, 16), t(16, 9, 43, 23, 1, 29, 1, 10, 16), t(12, 9, 5, 22, 8), t(12, 9, 5, 22, 8, 13, 10), t(2, 23, 22, 15), t(12, 9, 5, 22, 8, 9, 22, 16), t(15, 1, 16, 22, 15, 10, 47, 4, 23, 22, 1), t(9, 15, 13, 32, 13, 10, 4, 23, 43, 24, 1, 10, 16), t(11, 1, 12, 4, 22, 23, 16, 14, 15, 1, 24, 1, 10, 16, 1, 11), t(32, 1, 16, 14, 15, 1, 24, 1, 10, 16, 25, 1, 12, 4, 22, 23, 16), t(16, 13, 29, 1, 31, 16, 4, 29, 3), t(5, 4, 10, 5, 1, 23, 30, 22, 2, 2, 23, 1), t(29, 9, 22, 8, 1, 9, 24, 1, 15), t(29, 9, 22, 8, 1, 9, 22, 16), t(8, 22, 2, 29, 13, 16, 30, 22, 2, 2, 23, 1, 8), t(8, 22, 2, 29, 13, 16), t(5, 23, 13, 5, 6, 52, 20, 8, 22, 2, 29, 13, 16, 76, 6, 1, 17, 3, 15, 1, 8, 8, 52, 20, 8, 22, 2, 29, 13, 16), t(8, 22, 2, 29, 13, 16, 52, 20, 8, 22, 2, 29, 13, 16), t(20, 8, 22, 2, 29, 13, 16, 20, 2, 22, 2, 2, 23, 1), t(8, 13, 29, 22, 23, 4, 16, 1), t(52, 20, 8, 22, 2, 29, 13, 16), t(5, 33, 4, 10, 32, 1, 30, 22, 2, 2, 23, 1, 8), t(5, 33, 4, 10, 32, 1), t(3, 15, 9, 3, 1, 15, 16, 17, 5, 33, 4, 10, 32, 1, 52, 20, 5, 33, 4, 10, 32, 1), t(3, 15, 9, 3, 1, 15, 16, 17, 28, 4, 29, 1), t(20, 19, 22, 8, 16, 20, 5, 33, 4, 10, 32, 1, 11), t(5, 23, 13, 5, 6, 52, 20, 5, 33, 4, 10, 32, 1), t(2, 1, 12, 9, 15, 1, 4, 5, 16, 13, 24, 4, 16, 1, 52, 20, 5, 33, 4, 10, 32, 1), t(5, 33, 4, 10, 32, 1, 52, 20, 5, 33, 4, 10, 32, 1), t(13, 8, 31, 13, 29, 22, 23, 4, 16, 1, 11), t(52, 20, 5, 33, 4, 10, 32, 1), t(12, 9, 5, 22, 8, 13, 10, 30, 22, 2, 2, 23, 1, 8), t(3, 15, 1, 24, 41, 23, 23), t(8, 13, 2, 23, 13, 10, 32), t(13, 12, 15, 4, 29, 1), t(48, 10, 16, 13, 23), t(15, 1, 24, 1, 15, 8, 1), t(54, 10, 9, 16, 139), t(13, 8), t(4, 2, 2, 15, 130, 4, 15, 16, 13, 5, 23, 1, 130, 4, 8, 13, 11, 1, 130, 4, 22, 11, 13, 9, 130, 2, 11, 13, 130, 5, 4, 10, 24, 4, 8, 130, 11, 4, 16, 4, 130, 11, 4, 16, 4, 23, 13, 8, 16, 130, 11, 1, 16, 4, 13, 23, 8, 130, 12, 13, 32, 5, 4, 3, 16, 13, 9, 10, 130, 12, 13, 32, 22, 15, 1, 130, 12, 9, 9, 16, 1, 15, 130, 33, 1, 4, 11, 1, 15, 130, 33, 32, 15, 9, 22, 3, 130, 29, 4, 15, 6, 130, 29, 1, 16, 1, 15, 130, 10, 4, 24, 130, 9, 22, 16, 3, 22, 16, 130, 3, 15, 9, 32, 15, 1, 8, 8, 130, 8, 1, 5, 16, 13, 9, 10, 130, 8, 22, 29, 29, 4, 15, 17, 130, 16, 13, 29, 1, 130, 24, 13, 11, 1, 9), t(128, 139, 74, 54), t(141, 133, 138, 8, 49, 129, 134), t(128, 8, 1, 23, 1, 5, 16, 76, 29, 22, 23, 16, 13, 3, 23, 1, 72, 132, 29, 22, 23, 16, 13, 3, 23, 1, 132, 129), t(128, 49, 8, 1, 23, 1, 5, 16, 129), t(128, 12, 13, 1, 23, 11, 8, 1, 16, 129), t(128, 49, 12, 13, 1, 23, 11, 8, 1, 16, 129), t(128, 29, 4, 3, 129), t(128, 49, 29, 4, 3, 129), t(128, 9, 2, 19, 1, 5, 16, 129), t(128, 49, 9, 2, 19, 1, 5, 16, 129), t(128, 16, 4, 2, 23, 1, 129), t(128, 49, 16, 4, 2, 23, 1, 129), t(128, 16, 4, 2, 23, 1, 129, 128, 16, 2, 9, 11, 17, 129), t(128, 49, 16, 2, 9, 11, 17, 129, 128, 49, 16, 4, 2, 23, 1, 129), t(128, 16, 4, 2, 23, 1, 129, 128, 16, 2, 9, 11, 17, 129, 128, 49, 16, 2, 9, 11, 17, 129, 128, 5, 9, 23, 32, 15, 9, 22, 3, 129), t(128, 49, 5, 9, 23, 32, 15, 9, 22, 3, 129, 128, 49, 16, 4, 2, 23, 1, 129), t(128, 16, 4, 2, 23, 1, 129, 128, 16, 2, 9, 11, 17, 129, 128, 16, 15, 129), t(128, 49, 16, 15, 129, 128, 49, 16, 2, 9, 11, 17, 129, 128, 49, 16, 4, 2, 23, 1, 129), t(62, 128, 11, 13, 24, 129), t(128, 49, 11, 13, 24, 129), t(16, 12, 9, 9, 16), t(5, 9, 23, 32, 15, 9, 22, 3), t(5, 4, 3, 16, 13, 9, 10), t(16, 33, 1, 4, 11), t(16, 33), t(4, 3, 3, 1, 10, 11), t(5, 15, 1, 4, 16, 1, 44, 1, 51, 16, 28, 9, 11, 1), t(11, 9, 29, 21, 4, 10, 13, 3), t(13, 10, 8, 1, 15, 16, 30, 1, 12, 9, 15, 1), t(5, 23, 9, 10, 1), t(128, 42, 35, 129, 128, 49, 42, 26, 129), t(33, 16, 29, 23), t(20, 1, 24, 4, 23, 48, 15, 23), t(3, 15, 1, 3, 1, 10, 11), t(2, 1, 12, 9, 15, 1), t(4, 12, 16, 1, 15), t(15, 1, 3, 23, 4, 5, 1, 65, 13, 16, 33), t(4, 19, 4, 51), t(70, 43, 44), t(0, 15, 4, 3, 41, 23, 23), t(0, 15, 4, 3, 68, 10, 10, 1, 15), t(3, 4, 15, 1, 10, 16), t(141, 139, 52, 131, 141, 42), t(141, 139, 74, 90, 3, 51, 141, 133, 4, 27, 34, 37, 134, 69, 42), t(140, 139, 133, 69, 27, 134, 141, 72, 139), t(4, 2, 8, 9, 23, 22, 16, 1), 0, t(44, 9, 3), t(61, 13, 32, 33, 16), t(30, 9, 16, 16, 9, 29), t(67, 1, 12, 16), t(65, 1, 2, 6, 13, 16), t(18), t(21, 9, 34), t(29, 8), t(35), t(8, 16, 17, 23, 1, 45, 23, 9, 4, 16), t(5, 8, 8, 14, 15, 9, 3, 8), t(5, 8, 8, 28, 22, 29, 2, 1, 15), t(2, 4, 5, 6, 32, 15, 9, 22, 10, 11), t(13, 10, 33, 1, 15, 13, 16), t(10, 9, 15, 29, 4, 23), t(13, 8, 28, 22, 29, 1, 15, 13, 5), t(32, 1, 16, 14, 15, 9, 3, 1, 15, 16, 17, 47, 4, 23, 22, 1), t(29, 13, 10, 65, 13, 11, 16, 33), t(29, 4, 51, 65, 13, 11, 16, 33), t(5, 22, 15, 15, 1, 10, 16, 31, 16, 17, 23, 1), t(15, 22, 10, 16, 13, 29, 1, 31, 16, 17, 23, 1), t(12, 9, 10, 16, 31, 13, 34, 1), t(35, 1, 29), t(3, 13, 51, 1, 23, 67, 1, 12, 16), 0, t(4, 23, 3, 33, 4, 139, 9, 3, 4, 5, 13, 16, 17, 72), 0, t(3, 9, 8, 13, 16, 13, 9, 10), t(24, 13, 8, 13, 2, 23, 1), t(3, 4, 15, 4, 29), t(8, 1, 15, 13, 4, 23, 13, 34, 1, 41, 15, 15, 4, 17), t(1, 23, 1, 29, 1, 10, 16, 8), t(146, 108), t(1, 10, 5, 9, 11, 1, 48, 61, 68, 46, 9, 29, 3, 9, 10, 1, 10, 16), t(16, 15, 4, 11, 13, 16, 13, 9, 10, 4, 23), t(2, 23, 22, 15, 76, 12, 9, 5, 22, 8, 76, 12, 9, 5, 22, 8, 13, 10, 76, 12, 9, 5, 22, 8, 9, 22, 16, 76, 23, 9, 4, 11, 76, 15, 1, 8, 13, 34, 1, 76, 8, 5, 15, 9, 23, 23, 76, 22, 10, 23, 9, 4, 11, 76, 5, 23, 13, 5, 6, 76, 11, 2, 23, 5, 23, 13, 5, 6, 76, 29, 9, 22, 8, 1, 11, 9, 0, 10, 76, 29, 9, 22, 8, 1, 22, 3, 76, 29, 9, 22, 8, 1, 29, 9, 24, 1, 76, 29, 9, 22, 8, 1, 9, 24, 1, 15, 76, 29, 9, 22, 8, 1, 9, 22, 16, 76, 29, 9, 22, 8, 1, 1, 10, 16, 1, 15, 76, 29, 9, 22, 8, 1, 23, 1, 4, 24, 1, 76, 5, 33, 4, 10, 32, 1, 76, 8, 1, 23, 1, 5, 16, 76, 8, 22, 2, 29, 13, 16, 76, 6, 1, 17, 11, 9, 0, 10, 76, 6, 1, 17, 3, 15, 1, 8, 8, 76, 6, 1, 17, 22, 3, 76, 1, 15, 15, 9, 15, 76, 5, 9, 10, 16, 1, 51, 16, 29, 1, 10, 22), t(29, 9, 22, 8, 1, 23, 1, 4, 24, 1), t(29, 9, 22, 8, 1, 1, 10, 16, 1, 15), t(131, 49), t(14, 18, 31, 44), t(128, 11, 13, 24, 129), t(15, 1, 8, 3, 9, 10, 8, 1, 44, 1, 51, 16), t(4, 19, 4, 51, 31, 16, 4, 15, 16), t(4, 19, 4, 51, 31, 16, 9, 3), t(4, 19, 4, 51, 46, 9, 29, 3, 23, 1, 16, 1), t(4, 19, 4, 51, 43, 15, 15, 9, 15), t(4, 19, 4, 51, 31, 22, 5, 5, 1, 8, 8), t(4, 19, 4, 51, 31, 1, 10, 11), t(4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 51, 27, 0, 0, 0, 27, 12, 9, 15, 29, 27, 22, 15, 23, 1, 10, 5, 9, 11, 1, 11, 55, 76, 5, 33, 4, 15, 8, 1, 16, 72, 48, 44, 45, 27, 50), t(16, 1, 51, 16, 49, 3, 23, 4, 13, 10), t(16, 1, 51, 16, 49, 33, 16, 29, 23), t(4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 51, 29, 23, 57, 76, 16, 1, 51, 16, 49, 51, 29, 23), t(4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 19, 8, 9, 10, 57, 76, 16, 1, 51, 16, 49, 19, 4, 24, 4, 8, 5, 15, 13, 3, 16), t(15, 1, 8, 3, 9, 10, 8, 1, 62, 21, 67), t(15, 1, 8, 3, 9, 10, 8, 1, 7, 31, 18, 28), t(3, 4, 15, 8, 1, 62, 21, 67), 200, 300, 304, t(13, 12, 21, 9, 11, 13, 12, 13, 1, 11), t(67, 4, 8, 16, 27, 21, 9, 11, 13, 12, 13, 1, 11), t(23, 4, 8, 16, 21, 9, 11, 13, 12, 13, 1, 11), t(1, 16, 4, 32), 204, t(66, 43, 41, 25), t(10, 9, 5, 9, 10, 16, 1, 10, 16), t(10, 9, 16, 29, 9, 11, 13, 12, 13, 1, 11), t(8, 16, 4, 16, 22, 8), t(8, 16, 4, 16, 22, 8, 44, 1, 51, 16), t(8, 16, 4, 16, 22, 8, 46, 9, 11, 1), t(4, 5, 16, 13, 24, 1), t(4, 19, 4, 51, 31, 1, 16, 22, 3), t(5, 4, 10, 5, 1, 23, 1, 11), t(4, 2, 9, 15, 16), t(22, 15, 23), t(49, 49), t(29, 1, 16, 33, 9, 11), t(5, 15, 9, 8, 8, 25, 9, 29, 4, 13, 10), t(33, 16, 16, 3, 54), t(50, 36), t(56, 56, 38), t(3, 15, 9, 5, 1, 8, 8, 25, 4, 16, 4), t(33, 4, 8, 46, 9, 10, 16, 1, 10, 16), t(42, 35, 20, 72), t(20, 72), t(8, 1, 16, 61, 1, 64, 22, 1, 8, 16, 66, 1, 4, 11, 1, 15), t(68, 12, 27, 21, 9, 11, 13, 12, 13, 1, 11, 27, 31, 13, 10, 5, 1), t(68, 12, 27, 28, 9, 10, 1, 27, 21, 4, 16, 5, 33), t(5, 9, 10, 16, 1, 10, 16, 44, 17, 3, 1), t(41, 5, 5, 1, 3, 16), t(4, 5, 5, 1, 3, 16, 8), t(57, 76), t(55, 76, 64, 72, 36, 52, 36, 35), t(33, 1, 4, 11, 1, 15, 8), t(2, 1, 12, 9, 15, 1, 31, 1, 10, 11), t(16, 13, 29, 1, 9, 22, 16), t(8, 1, 10, 11), t(28, 9, 76, 44, 15, 4, 10, 8, 3, 9, 15, 16), t(19, 8, 9, 10), t(3, 9, 8, 16), t(16, 1, 51, 16, 49, 19, 4, 24, 4, 8, 5, 15, 13, 3, 16, 57, 76, 4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 19, 4, 24, 4, 8, 5, 15, 13, 3, 16, 57, 76, 4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 1, 5, 29, 4, 8, 5, 15, 13, 3, 16, 57, 76, 4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 51, 27, 1, 5, 29, 4, 8, 5, 15, 13, 3, 16), t(4, 19, 4, 51, 14, 15, 1, 12, 13, 23, 16, 1, 15), t(4, 19, 4, 51, 44, 15, 4, 10, 8, 3, 9, 15, 16), t(8, 5, 15, 13, 3, 16, 46, 33, 4, 15, 8, 1, 16), t(5, 33, 4, 15, 8, 1, 16), t(5, 4, 23, 23, 2, 4, 5, 6), t(20), t(19, 8, 9, 10, 76, 19, 8, 9, 10, 3), t(19, 8, 9, 10, 3), t(4, 3, 3, 23, 13, 5, 4, 16, 13, 9, 10, 49, 51, 27, 0, 0, 0, 27, 12, 9, 15, 29, 27, 22, 15, 23, 1, 10, 5, 9, 11, 1, 11), t(19, 8, 9, 10, 3, 46, 4, 23, 23, 2, 4, 5, 6), t(8, 5, 15, 13, 3, 16, 76, 19, 8, 9, 10), t(76, 0, 4, 8, 76, 10, 9, 16, 76, 5, 4, 23, 23, 1, 11), t(51, 33, 15), t(13, 8, 67, 9, 5, 4, 23), t(5, 9, 15, 8), t(0, 13, 16, 33, 46, 15, 1, 11, 1, 10, 16, 13, 4, 23, 8), t(22, 8, 1, 15, 10, 4, 29, 1), t(9, 3, 1, 10), t(3, 4, 8, 8, 0, 9, 15, 11), t(51, 33, 15, 45, 13, 1, 23, 11, 8), t(9, 24, 1, 15, 15, 13, 11, 1, 21, 13, 29, 1, 44, 17, 3, 1), t(62, 27, 61, 1, 64, 22, 1, 8, 16, 1, 11, 27, 65, 13, 16, 33), t(32, 1, 16, 41, 23, 23, 61, 1, 8, 3, 9, 10, 8, 1, 66, 1, 4, 11, 1, 15, 8), 0, 0, t(22, 10, 23, 9, 4, 11), t(140, 139, 74, 54, 139, 133, 69, 27, 134, 141, 72, 130, 141, 139), t(141, 139, 133, 4, 27, 34, 37, 134, 131, 141, 42), t(5, 15, 1, 4, 16, 1, 44, 0, 1, 1, 10), t(5, 22, 15), 0, t(52, 40), t(22, 10, 13, 16), t(41, 10, 13, 29, 4, 16, 13, 9, 10), t(8, 0, 13, 10, 32), t(8, 16, 1, 3), t(4, 10, 13, 29, 4, 16, 1), t(8, 3, 1, 1, 11), t(12, 13, 10, 13, 8, 33), t(16, 13, 29, 1, 15, 8), t(4, 10, 13, 29), t(9, 23, 11), 0, t(5, 9, 8), t(14, 68), t(16, 13, 5, 6), t(13, 10, 16, 1, 15, 24, 4, 23), 0, t(5, 23, 1, 4, 15, 68, 10, 16, 1, 15, 24, 4, 23), 0, t(4, 10, 13, 29, 4, 16, 1, 11), t(9, 12, 12, 8, 1, 16), t(8, 1, 16, 18, 12, 12, 8, 1, 16), t(32, 1, 16, 30, 9, 22, 10, 11, 13, 10, 32, 46, 23, 13, 1, 10, 16, 61, 1, 5, 16), t(3, 4, 32, 1, 60, 18, 12, 12, 8, 1, 16), t(3, 4, 32, 1, 62, 18, 12, 12, 8, 1, 16), t(8, 16, 4, 16, 13, 5), t(12, 13, 51, 1, 11), t(22, 8, 13, 10, 32), t(9, 12, 12, 8, 1, 16, 14, 4, 15, 1, 10, 16), t(2, 9, 15, 11, 1, 15, 44, 9, 3, 65, 13, 11, 16, 33), t(2, 9, 15, 11, 1, 15, 67, 1, 12, 16, 65, 13, 11, 16, 33), t(29, 4, 15, 32, 13, 10, 44, 9, 3), t(29, 4, 15, 32, 13, 10, 67, 1, 12, 16), t(8, 5, 15, 9, 23, 23, 44, 9), t(13, 10, 10, 1, 15), t(9, 22, 16, 1, 15), t(5, 23, 13, 1, 10, 16), t(8, 5, 15, 9, 23, 23), t(8, 13, 34, 1), t(4, 10, 11, 31, 1, 23, 12), t(4, 11, 11, 30, 4, 5, 6), t(11, 1, 12, 13, 10, 1), t(10, 43, 15, 23), t(12, 35, 43, 33), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 53, 27, 26, 52, 4, 35, 58, 50, 11, 12, 58, 52, 3, 10, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 35, 52, 50, 5, 2, 53, 58, 39, 58, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 40, 52, 26, 5, 2, 5, 11, 36, 53, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 26, 52, 36, 36, 53, 4, 50, 58, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 38, 52, 58, 38, 2, 58, 2, 26, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 58, 52, 50, 36, 1, 50, 40, 53, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 40, 52, 40, 35, 1, 58, 58, 56, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 35, 52, 56, 35, 40, 5, 5, 1, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 58, 52, 56, 39, 40, 35, 26, 26, 53, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 26, 52, 36, 12, 11, 50, 11, 53, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 40, 52, 1, 26, 2, 12, 2, 35, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 56, 52, 53, 39, 2, 1, 53, 40, 38, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 50, 52, 38, 1, 26, 4, 35, 26, 38, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 26, 52, 5, 11, 58, 12, 26, 40, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 58, 52, 39, 56, 1, 35, 53, 12, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 56, 52, 39, 1, 26, 12, 11, 2, 26, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 38, 52, 56, 58, 39, 53, 26, 38, 11, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 36, 52, 56, 4, 38, 56, 56, 38, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 40, 52, 1, 35, 26, 12, 35, 36, 2, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 56, 52, 56, 56, 38, 26, 1, 26, 4, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 36, 52, 2, 36, 39, 26, 5, 4, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 39, 52, 11, 58, 35, 56, 5, 53, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 58, 52, 56, 36, 11, 12, 50, 56, 5, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 56, 52, 53, 38, 53, 2, 36, 38, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 40, 52, 4, 38, 2, 35, 39, 58, 36, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 56, 52, 36, 39, 11, 1, 36, 39, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 35, 52, 56, 12, 58, 26, 1, 11, 40, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 40, 52, 11, 38, 40, 38, 11, 53, 35, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 34, 2, 12, 5, 27, 13, 29, 32, 38, 52, 38, 50, 39, 35, 40, 5, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 58, 52, 26, 50, 39, 36, 11, 4, 50, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 8, 5, 6, 19, 13, 29, 32, 35, 50, 52, 36, 4, 38, 36, 11, 5, 40, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 35, 52, 2, 11, 26, 40, 4, 40, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 53, 52, 12, 11, 12, 4, 58, 50, 11, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 38, 52, 36, 36, 1, 5, 56, 53, 53, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 35, 38, 52, 58, 36, 4, 36, 58, 50, 12, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 51, 29, 17, 8, 27, 13, 29, 32, 35, 50, 52, 35, 35, 2, 12, 1, 35, 50, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 3, 3, 64, 17, 13, 29, 32, 40, 52, 11, 26, 39, 1, 38, 50, 58, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 13, 29, 32, 35, 58, 52, 35, 35, 35, 39, 56, 26, 56, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 24, 13, 11, 1, 9, 27, 13, 29, 32, 52, 39, 38, 50, 58, 2, 5, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 11, 51, 17, 8, 27, 13, 29, 32, 38, 52, 50, 11, 26, 12, 4, 2, 39, 52, 19, 3, 32), t(8, 16, 4, 16, 13, 5, 49, 13, 29, 32, 49, 5, 3, 17, 8, 27, 23, 2, 35, 52, 56, 56, 56, 12, 56, 50, 50, 52, 19, 3, 32), t(28, 66, 10, 15))
}(function(t) { return function() { for(var n = arguments, i = "", r = 0, e = n.length; r < e; r++) i += t[n[r]]; return i } }(["w", "e", "b", "p", "a", "c", "k", "J", "s", "o", "n", "d", "f", "i", "P", "r", "t", "y", "O", "j", "_", "M", "u", "l", "v", "D", "2", "-", "N", "m", "B", "S", "g", "h", "z", "1", "0", "%", "3", "6", "5", "A", "$", "E", "T", "F", "C", "V", "U", "/", "8", "x", ".", "7", ":", ";", "4", ",", "9", "Q", "Y", "R", "X", "Z", "q", "W", "H", "L", "I", "+", "G", "K", "=", "&", "?", "#", " ", "抖", "音", "、", "刷", "屏", "的", "谷", "物", "茶", "原", "来", "是", "它", "!", "种", "大", "粒", "，", "喝", "前", "嚼", "一", "！", "位", "出", "道", "了", "解", "下", "页", "上", "\n", "区", "域", "划", "分", "三", "线", "城", "市", "二", "核", "心", "投", "资", "费", "用", "月", "度", "管", "理", "<", ">", "|", "*", "'", "[", "]", "@", "\ufeff", " ", "\\", "(", "^", ")", "~", '"', "{", "}", "\r"]));